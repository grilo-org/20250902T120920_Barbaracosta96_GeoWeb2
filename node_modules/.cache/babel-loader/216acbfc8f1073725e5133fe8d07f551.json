{"ast":null,"code":"import { __extends, __spreadArrays } from \"tslib\";\nimport PDFNumber from \"./PDFNumber\";\nimport PDFObject from \"./PDFObject\";\nimport CharCodes from \"../syntax/CharCodes\";\nimport { PDFArrayIsNotRectangleError } from \"../errors\";\nvar PDFArray = /** @class */function (_super) {\n  __extends(PDFArray, _super);\n  function PDFArray(context) {\n    var _this = _super.call(this) || this;\n    _this.array = [];\n    _this.context = context;\n    return _this;\n  }\n  PDFArray.prototype.size = function () {\n    return this.array.length;\n  };\n  PDFArray.prototype.push = function (object) {\n    this.array.push(object);\n  };\n  PDFArray.prototype.insert = function (index, object) {\n    this.array.splice(index, 0, object);\n  };\n  PDFArray.prototype.indexOf = function (object) {\n    var index = this.array.indexOf(object);\n    return index === -1 ? undefined : index;\n  };\n  PDFArray.prototype.remove = function (index) {\n    this.array.splice(index, 1);\n  };\n  PDFArray.prototype.set = function (idx, object) {\n    this.array[idx] = object;\n  };\n  PDFArray.prototype.get = function (index) {\n    return this.array[index];\n  };\n  PDFArray.prototype.lookupMaybe = function (index) {\n    var _a;\n    var types = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n      types[_i - 1] = arguments[_i];\n    }\n    return (_a = this.context).lookupMaybe.apply(_a, __spreadArrays([this.get(index)], types));\n  };\n  PDFArray.prototype.lookup = function (index) {\n    var _a;\n    var types = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n      types[_i - 1] = arguments[_i];\n    }\n    return (_a = this.context).lookup.apply(_a, __spreadArrays([this.get(index)], types));\n  };\n  PDFArray.prototype.asRectangle = function () {\n    if (this.size() !== 4) throw new PDFArrayIsNotRectangleError(this.size());\n    var lowerLeftX = this.lookup(0, PDFNumber).asNumber();\n    var lowerLeftY = this.lookup(1, PDFNumber).asNumber();\n    var upperRightX = this.lookup(2, PDFNumber).asNumber();\n    var upperRightY = this.lookup(3, PDFNumber).asNumber();\n    var x = lowerLeftX;\n    var y = lowerLeftY;\n    var width = upperRightX - lowerLeftX;\n    var height = upperRightY - lowerLeftY;\n    return {\n      x: x,\n      y: y,\n      width: width,\n      height: height\n    };\n  };\n  PDFArray.prototype.asArray = function () {\n    return this.array.slice();\n  };\n  PDFArray.prototype.clone = function (context) {\n    var clone = PDFArray.withContext(context || this.context);\n    for (var idx = 0, len = this.size(); idx < len; idx++) {\n      clone.push(this.array[idx]);\n    }\n    return clone;\n  };\n  PDFArray.prototype.toString = function () {\n    var arrayString = '[ ';\n    for (var idx = 0, len = this.size(); idx < len; idx++) {\n      arrayString += this.get(idx).toString();\n      arrayString += ' ';\n    }\n    arrayString += ']';\n    return arrayString;\n  };\n  PDFArray.prototype.sizeInBytes = function () {\n    var size = 3;\n    for (var idx = 0, len = this.size(); idx < len; idx++) {\n      size += this.get(idx).sizeInBytes() + 1;\n    }\n    return size;\n  };\n  PDFArray.prototype.copyBytesInto = function (buffer, offset) {\n    var initialOffset = offset;\n    buffer[offset++] = CharCodes.LeftSquareBracket;\n    buffer[offset++] = CharCodes.Space;\n    for (var idx = 0, len = this.size(); idx < len; idx++) {\n      offset += this.get(idx).copyBytesInto(buffer, offset);\n      buffer[offset++] = CharCodes.Space;\n    }\n    buffer[offset++] = CharCodes.RightSquareBracket;\n    return offset - initialOffset;\n  };\n  PDFArray.prototype.scalePDFNumbers = function (x, y) {\n    for (var idx = 0, len = this.size(); idx < len; idx++) {\n      var el = this.lookup(idx);\n      if (el instanceof PDFNumber) {\n        var factor = idx % 2 === 0 ? x : y;\n        this.set(idx, PDFNumber.of(el.asNumber() * factor));\n      }\n    }\n  };\n  PDFArray.withContext = function (context) {\n    return new PDFArray(context);\n  };\n  return PDFArray;\n}(PDFObject);\nexport default PDFArray;","map":{"version":3,"mappings":"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","names":["PDFNumber","PDFObject","CharCodes","PDFArrayIsNotRectangleError","__extends","context","_super","_this","array","PDFArray","length","object","push","index","splice","indexOf","undefined","idx","_i","types","lookupMaybe","get","lookup","size","lowerLeftX","asNumber","lowerLeftY","upperRightX","upperRightY","x","y","width","height","slice","clone","withContext","len","arrayString","toString","sizeInBytes","buffer","offset","initialOffset","LeftSquareBracket","Space","copyBytesInto","RightSquareBracket","el","factor","set","of"],"sourceRoot":"","sources":["../../../src/core/objects/PDFArray.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}