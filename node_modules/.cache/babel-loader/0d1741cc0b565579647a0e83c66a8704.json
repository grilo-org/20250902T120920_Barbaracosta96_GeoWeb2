{"ast":null,"code":"import { __extends } from \"tslib\";\nimport PDFDict from \"../objects/PDFDict\";\nimport PDFName from \"../objects/PDFName\";\nimport { PDFAcroForm } from \"../acroform\";\nimport ViewerPreferences from '../interactive/ViewerPreferences';\nvar PDFCatalog = /** @class */function (_super) {\n  __extends(PDFCatalog, _super);\n  function PDFCatalog() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  PDFCatalog.prototype.Pages = function () {\n    return this.lookup(PDFName.of('Pages'), PDFDict);\n  };\n  PDFCatalog.prototype.AcroForm = function () {\n    return this.lookupMaybe(PDFName.of('AcroForm'), PDFDict);\n  };\n  PDFCatalog.prototype.getAcroForm = function () {\n    var dict = this.AcroForm();\n    if (!dict) return undefined;\n    return PDFAcroForm.fromDict(dict);\n  };\n  PDFCatalog.prototype.getOrCreateAcroForm = function () {\n    var acroForm = this.getAcroForm();\n    if (!acroForm) {\n      acroForm = PDFAcroForm.create(this.context);\n      var acroFormRef = this.context.register(acroForm.dict);\n      this.set(PDFName.of('AcroForm'), acroFormRef);\n    }\n    return acroForm;\n  };\n  PDFCatalog.prototype.ViewerPreferences = function () {\n    return this.lookupMaybe(PDFName.of('ViewerPreferences'), PDFDict);\n  };\n  PDFCatalog.prototype.getViewerPreferences = function () {\n    var dict = this.ViewerPreferences();\n    if (!dict) return undefined;\n    return ViewerPreferences.fromDict(dict);\n  };\n  PDFCatalog.prototype.getOrCreateViewerPreferences = function () {\n    var viewerPrefs = this.getViewerPreferences();\n    if (!viewerPrefs) {\n      viewerPrefs = ViewerPreferences.create(this.context);\n      var viewerPrefsRef = this.context.register(viewerPrefs.dict);\n      this.set(PDFName.of('ViewerPreferences'), viewerPrefsRef);\n    }\n    return viewerPrefs;\n  };\n  /**\n   * Inserts the given ref as a leaf node of this catalog's page tree at the\n   * specified index (zero-based). Also increments the `Count` of each node in\n   * the page tree hierarchy to accomodate the new page.\n   *\n   * Returns the ref of the PDFPageTree node into which `leafRef` was inserted.\n   */\n  PDFCatalog.prototype.insertLeafNode = function (leafRef, index) {\n    var pagesRef = this.get(PDFName.of('Pages'));\n    var maybeParentRef = this.Pages().insertLeafNode(leafRef, index);\n    return maybeParentRef || pagesRef;\n  };\n  PDFCatalog.prototype.removeLeafNode = function (index) {\n    this.Pages().removeLeafNode(index);\n  };\n  PDFCatalog.withContextAndPages = function (context, pages) {\n    var dict = new Map();\n    dict.set(PDFName.of('Type'), PDFName.of('Catalog'));\n    dict.set(PDFName.of('Pages'), pages);\n    return new PDFCatalog(dict, context);\n  };\n  PDFCatalog.fromMapWithContext = function (map, context) {\n    return new PDFCatalog(map, context);\n  };\n  return PDFCatalog;\n}(PDFDict);\nexport default PDFCatalog;","map":{"version":3,"mappings":"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","names":["PDFDict","PDFName","PDFAcroForm","ViewerPreferences","__extends","PDFCatalog","lookup","of","lookupMaybe","dict","AcroForm","undefined","fromDict","acroForm","getAcroForm","create","context","acroFormRef","register","set","viewerPrefs","getViewerPreferences","viewerPrefsRef","leafRef","index","pagesRef","get","maybeParentRef","Pages","insertLeafNode","removeLeafNode","pages","Map","map"],"sourceRoot":"","sources":["../../../src/core/structures/PDFCatalog.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}