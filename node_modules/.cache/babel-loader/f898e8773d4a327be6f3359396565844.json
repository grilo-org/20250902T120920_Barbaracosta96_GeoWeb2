{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/sulli/Git/GeoWeb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _toConsumableArray from\"C:/Users/sulli/Git/GeoWeb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _asyncToGenerator from\"C:/Users/sulli/Git/GeoWeb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"C:/Users/sulli/Git/GeoWeb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from\"react\";import Navbar from\"./NavBarSSMT\";import{Chart}from\"react-google-charts\";import Conexao from'../../Config/conexao';import axios from'axios';import moment from'moment';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function DashBoardSSMT(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),entregaOuDevolucao=_useState2[0],setEntregaOuDevolucao=_useState2[1];function getEntegaOuDevolucao(){return _getEntegaOuDevolucao.apply(this,arguments);}function _getEntegaOuDevolucao(){_getEntegaOuDevolucao=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var res;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return axios.get(Conexao.api+'ListaEntregaEpiWEBsemFILTRO.php');case 2:res=_context.sent;if(res.data.success===false){}else{setEntregaOuDevolucao(res.data.result);}case 4:case\"end\":return _context.stop();}}},_callee);}));return _getEntegaOuDevolucao.apply(this,arguments);};useEffect(function(){getEntegaOuDevolucao();});var totalsByFunction={};// Calcule os totais de EPIs por função\nentregaOuDevolucao.forEach(function(item){var totalEPIs=parseInt(item.qtd)*parseInt(item.und);if(!totalsByFunction[item.funcao]){totalsByFunction[item.funcao]=totalEPIs;}else{totalsByFunction[item.funcao]+=totalEPIs;}});var data=[['Função','Total de EPIs']];Object.keys(totalsByFunction).forEach(function(funcao){data.push([funcao,totalsByFunction[funcao]]);});var totalsBySector={};// Calcule os totais de EPIs por setor\nentregaOuDevolucao.forEach(function(item){var totalEPIs=parseInt(item.qtd)*parseInt(item.und);if(!totalsBySector[item.setor]){totalsBySector[item.setor]=totalEPIs;}else{totalsBySector[item.setor]+=totalEPIs;}});// Transforme os dados em um formato adequado para o Google Charts\nvar chartData=[['Setor','Total de EPIs']];Object.keys(totalsBySector).forEach(function(setor){chartData.push([setor,totalsBySector[setor]]);});var totalsByStatus={ENTREGUE:0,DEVOLVIDO:0// Adicione outros status conforme necessário\n};// Calcule os totais de EPIs por status\nentregaOuDevolucao.forEach(function(item){var totalEPIs=parseInt(item.qtd)*parseInt(item.und);totalsByStatus[item.substatus]+=totalEPIs;});// Transforme os dados em um formato adequado para o Google Charts\nvar chartData2=[['Status','Total de EPIs']];Object.keys(totalsByStatus).forEach(function(status){chartData2.push([status,totalsByStatus[status]]);});/*   const totalsByStatusAndSector = {};\r\n\r\n  \r\n  entregaOuDevolucao.forEach(item => {\r\n    const totalEPIs = parseInt(item.qtd) * parseInt(item.und);\r\n    if (!totalsByStatusAndSector[item.setor]) {\r\n      totalsByStatusAndSector[item.setor] = {};\r\n    }\r\n    if (!totalsByStatusAndSector[item.setor][item.substatus]) {\r\n      totalsByStatusAndSector[item.setor][item.substatus] = totalEPIs;\r\n    } else {\r\n      totalsByStatusAndSector[item.setor][item.substatus] += totalEPIs;\r\n    }\r\n  });\r\n\r\n  \r\n  const chartData3 = [['Setor', 'Entregue', 'Devolvido', ]];\r\n  Object.keys(totalsByStatusAndSector).forEach(setor => {\r\n    const row = [setor];\r\n    Object.keys(totalsByStatusAndSector[setor]).forEach(substatus => {\r\n      row.push(totalsByStatusAndSector[setor][substatus]);\r\n    });\r\n    chartData3.push(row);\r\n  }); */var episSelected={};// Calcule a quantidade total de cada EPI entregue\nentregaOuDevolucao.forEach(function(item){var totalEPIs=parseInt(item.qtd)*parseInt(item.und);if(!episSelected[item.descricaoEpi]){episSelected[item.descricaoEpi]=totalEPIs;}else{episSelected[item.descricaoEpi]+=totalEPIs;}});// Transforme os dados em um formato adequado para o Google Charts\nvar chartData4=[['EPI','Quantidade Entregue']];Object.keys(episSelected).forEach(function(epi){chartData4.push([epi,episSelected[epi]]);});// Ordene os dados pelo valor de quantidade entregue\nchartData4.sort(function(a,b){return b[1]-a[1];});var totalsByStatusAndSector={};// Calcule os totais de EPIs por status e setor\nentregaOuDevolucao.forEach(function(item){var totalEPIs=parseInt(item.qtd)*parseInt(item.und);if(!totalsByStatusAndSector[item.setor]){totalsByStatusAndSector[item.setor]={};}if(!totalsByStatusAndSector[item.setor][item.substatus]){totalsByStatusAndSector[item.setor][item.substatus]=totalEPIs;}else{totalsByStatusAndSector[item.setor][item.substatus]+=totalEPIs;}});/*  // Transforme os dados em um formato adequado para o Google Charts\r\n  const substatusTypes = Object.keys(totalsByStatusAndSector[Object.keys(totalsByStatusAndSector)[0]]);\r\n  const chartDataByStatusAndSector = [['Setor', ...substatusTypes]];\r\n  Object.keys(totalsByStatusAndSector).forEach(setor => {\r\n    const row = [setor];\r\n    substatusTypes.forEach(substatus => {\r\n      row.push(totalsByStatusAndSector[setor][substatus] || 0);\r\n    });\r\n    chartDataByStatusAndSector.push(row);\r\n  }); */var substatusTypes=[];if(Object.keys(totalsByStatusAndSector).length>0){substatusTypes=Object.keys(totalsByStatusAndSector[Object.keys(totalsByStatusAndSector)[0]]);}var chartDataByStatusAndSector=[['Setor'].concat(_toConsumableArray(substatusTypes))];Object.keys(totalsByStatusAndSector).forEach(function(setor){var row=[setor];substatusTypes.forEach(function(substatus){row.push(totalsByStatusAndSector[setor][substatus]||0);});chartDataByStatusAndSector.push(row);});return/*#__PURE__*/_jsxs(\"body\",{children:[/*#__PURE__*/_jsx(Navbar,{}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"div\",{className:\"titulolaboratorio container-fluid \",children:/*#__PURE__*/_jsx(\"h1\",{className:\"texttitulo\",children:\"DashBoard SSMT\"})}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsxs(\"body\",{className:\"container d-flex\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\" container-fluid text-center scrollable col-6\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\" Entregas por fun\\xE7\\xE3o\"}),/*#__PURE__*/_jsx(Chart,{width:'500px',height:'300px',chartType:\"ColumnChart\",loader:/*#__PURE__*/_jsx(\"div\",{children:\"Carregando Gr\\xE1fico\"}),data:data,options:{chart:{title:'Entregas por Função',subtitle:'Total de EPIs Entregues por Função'},hAxis:{title:'Função'},vAxis:{title:'Total de EPIs',minValue:0},colors:['#3CB371']},rootProps:{'data-testid':'1'}})]}),/*#__PURE__*/_jsxs(\"div\",{className:\" container text-center col-6 offset-1 \",children:[/*#__PURE__*/_jsx(\"h1\",{children:\" Status de EPIs\"}),/*#__PURE__*/_jsx(Chart,{width:'500px',height:'300px',chartType:\"PieChart\",loader:/*#__PURE__*/_jsx(\"div\",{children:\"Carregando Gr\\xE1fico\"}),data:chartData2,options:{title:'Distribuição de EPIs por Status',colors:['#3CB371','#dc3912']},rootProps:{'data-testid':'2'}})]})]}),/*#__PURE__*/_jsxs(\"body\",{className:\"container text-center mt-5  d-flex ms-5\",children:[/*#__PURE__*/_jsx(\"div\",{className:\" container  text-center  col-1\"}),/*#__PURE__*/_jsxs(\"div\",{className:\" container-fluid align-items-cente scrollable text-center col-8\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\" Status de EPIs por Setor\"}),/*#__PURE__*/_jsx(Chart,{width:'800px',height:'400px',chartType:\"BarChart\",loader:/*#__PURE__*/_jsx(\"div\",{children:\"Carregando Gr\\xE1fico\"}),data:chartDataByStatusAndSector,options:{title:'Distribuição de EPIs por Status e Setor',isStacked:true,colors:['#3CB371','#dc3912']},rootProps:{'data-testid':'3'}})]}),/*#__PURE__*/_jsxs(\"div\",{className:\" container text-center col-auto offset-1 scrollable\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\" EPIs Mais Entregues\"}),/*#__PURE__*/_jsx(Chart,{width:'500px',height:'400px',chartType:\"ColumnChart\",loader:/*#__PURE__*/_jsx(\"div\",{children:\"Carregando Gr\\xE1fico\"}),data:chartData4,options:{title:'EPIs Mais Entregues',hAxis:{title:'EPIs'},vAxis:{title:'Quantidade Entregue',minValue:0},colors:['#3CB371']},rootProps:{'data-testid':'4'}})]})]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"br\",{})]});};","map":{"version":3,"names":["React","useEffect","useState","Navbar","Chart","Conexao","axios","moment","DashBoardSSMT","entregaOuDevolucao","setEntregaOuDevolucao","getEntegaOuDevolucao","get","api","res","data","success","result","totalsByFunction","forEach","item","totalEPIs","parseInt","qtd","und","funcao","Object","keys","push","totalsBySector","setor","chartData","totalsByStatus","ENTREGUE","DEVOLVIDO","substatus","chartData2","status","episSelected","descricaoEpi","chartData4","epi","sort","a","b","totalsByStatusAndSector","substatusTypes","length","chartDataByStatusAndSector","row","chart","title","subtitle","hAxis","vAxis","minValue","colors","isStacked"],"sources":["C:/Users/sulli/Git/GeoWeb/src/app/SGI/EPIS/DashBoardSSMT.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport Navbar from \"./NavBarSSMT\";\r\nimport { Chart } from \"react-google-charts\";\r\nimport Conexao from '../../Config/conexao';\r\nimport axios from 'axios';\r\nimport moment from 'moment';\r\n\r\n\r\nexport default function DashBoardSSMT (){\r\n\r\n  const [entregaOuDevolucao, setEntregaOuDevolucao]=useState([]);\r\n\r\n  async function getEntegaOuDevolucao() {   \r\n    const res = await axios.get(Conexao.api + 'ListaEntregaEpiWEBsemFILTRO.php' );  \r\n    if (res.data.success === false) { \r\n    } else {  setEntregaOuDevolucao(res.data.result); }   \r\n  };\r\n\r\n\r\n  useEffect(()=>{getEntegaOuDevolucao();});\r\n\r\n\r\n  const totalsByFunction = {};\r\n\r\n  // Calcule os totais de EPIs por função\r\n  entregaOuDevolucao.forEach(item => {\r\n    const totalEPIs = parseInt(item.qtd) * parseInt(item.und);\r\n    if (!totalsByFunction[item.funcao]) {\r\n      totalsByFunction[item.funcao] = totalEPIs;\r\n    } else {\r\n      totalsByFunction[item.funcao] += totalEPIs;\r\n    }\r\n  });\r\n\r\n  const data = [['Função', 'Total de EPIs']];\r\n  Object.keys(totalsByFunction).forEach(funcao => {\r\n    data.push([funcao, totalsByFunction[funcao]]);\r\n  });\r\n\r\n\r\n  const totalsBySector = {};\r\n\r\n  // Calcule os totais de EPIs por setor\r\n  entregaOuDevolucao.forEach(item => {\r\n    const totalEPIs = parseInt(item.qtd) * parseInt(item.und);\r\n    if (!totalsBySector[item.setor]) {\r\n      totalsBySector[item.setor] = totalEPIs;\r\n    } else {\r\n      totalsBySector[item.setor] += totalEPIs;\r\n    }\r\n  });\r\n\r\n  // Transforme os dados em um formato adequado para o Google Charts\r\n  const chartData = [['Setor', 'Total de EPIs']];\r\n  Object.keys(totalsBySector).forEach(setor => {\r\n    chartData.push([setor, totalsBySector[setor]]);\r\n  });\r\n\r\n\r\n\r\n\r\n\r\n  const totalsByStatus = {\r\n    ENTREGUE: 0,\r\n    DEVOLVIDO: 0,\r\n    // Adicione outros status conforme necessário\r\n  };\r\n\r\n  // Calcule os totais de EPIs por status\r\n  entregaOuDevolucao.forEach(item => {\r\n    const totalEPIs = parseInt(item.qtd) * parseInt(item.und);\r\n    totalsByStatus[item.substatus] += totalEPIs;\r\n  });\r\n\r\n  // Transforme os dados em um formato adequado para o Google Charts\r\n  const chartData2 = [['Status', 'Total de EPIs']];\r\n  Object.keys(totalsByStatus).forEach(status => {\r\n    chartData2.push([status, totalsByStatus[status]]);\r\n  });\r\n\r\n\r\n\r\n/*   const totalsByStatusAndSector = {};\r\n\r\n  \r\n  entregaOuDevolucao.forEach(item => {\r\n    const totalEPIs = parseInt(item.qtd) * parseInt(item.und);\r\n    if (!totalsByStatusAndSector[item.setor]) {\r\n      totalsByStatusAndSector[item.setor] = {};\r\n    }\r\n    if (!totalsByStatusAndSector[item.setor][item.substatus]) {\r\n      totalsByStatusAndSector[item.setor][item.substatus] = totalEPIs;\r\n    } else {\r\n      totalsByStatusAndSector[item.setor][item.substatus] += totalEPIs;\r\n    }\r\n  });\r\n\r\n  \r\n  const chartData3 = [['Setor', 'Entregue', 'Devolvido', ]];\r\n  Object.keys(totalsByStatusAndSector).forEach(setor => {\r\n    const row = [setor];\r\n    Object.keys(totalsByStatusAndSector[setor]).forEach(substatus => {\r\n      row.push(totalsByStatusAndSector[setor][substatus]);\r\n    });\r\n    chartData3.push(row);\r\n  }); */\r\n\r\n\r\n\r\n  const episSelected = {};\r\n\r\n  // Calcule a quantidade total de cada EPI entregue\r\n  entregaOuDevolucao.forEach(item => {\r\n    const totalEPIs = parseInt(item.qtd) * parseInt(item.und);\r\n    if (!episSelected[item.descricaoEpi]) {\r\n      episSelected[item.descricaoEpi] = totalEPIs;\r\n    } else {\r\n      episSelected[item.descricaoEpi] += totalEPIs;\r\n    }\r\n  });\r\n\r\n  // Transforme os dados em um formato adequado para o Google Charts\r\n  const chartData4 = [['EPI', 'Quantidade Entregue']];\r\n  Object.keys(episSelected).forEach(epi => {\r\n    chartData4.push([epi, episSelected[epi]]);\r\n  });\r\n\r\n  // Ordene os dados pelo valor de quantidade entregue\r\n  chartData4.sort((a, b) => b[1] - a[1]);\r\n\r\n\r\n\r\n\r\n\r\n  const totalsByStatusAndSector = {};\r\n\r\n  // Calcule os totais de EPIs por status e setor\r\n  entregaOuDevolucao.forEach(item => {\r\n    const totalEPIs = parseInt(item.qtd) * parseInt(item.und);\r\n    if (!totalsByStatusAndSector[item.setor]) {\r\n      totalsByStatusAndSector[item.setor] = {};\r\n    }\r\n    if (!totalsByStatusAndSector[item.setor][item.substatus]) {\r\n      totalsByStatusAndSector[item.setor][item.substatus] = totalEPIs;\r\n    } else {\r\n      totalsByStatusAndSector[item.setor][item.substatus] += totalEPIs;\r\n    }\r\n  });\r\n\r\n /*  // Transforme os dados em um formato adequado para o Google Charts\r\n  const substatusTypes = Object.keys(totalsByStatusAndSector[Object.keys(totalsByStatusAndSector)[0]]);\r\n  const chartDataByStatusAndSector = [['Setor', ...substatusTypes]];\r\n  Object.keys(totalsByStatusAndSector).forEach(setor => {\r\n    const row = [setor];\r\n    substatusTypes.forEach(substatus => {\r\n      row.push(totalsByStatusAndSector[setor][substatus] || 0);\r\n    });\r\n    chartDataByStatusAndSector.push(row);\r\n  }); */\r\n\r\n\r\n  let substatusTypes = [];\r\nif (Object.keys(totalsByStatusAndSector).length > 0) {\r\n  substatusTypes = Object.keys(totalsByStatusAndSector[Object.keys(totalsByStatusAndSector)[0]]);\r\n}\r\n\r\nconst chartDataByStatusAndSector = [['Setor', ...substatusTypes]];\r\nObject.keys(totalsByStatusAndSector).forEach(setor => {\r\n  const row = [setor];\r\n  substatusTypes.forEach(substatus => {\r\n    row.push(totalsByStatusAndSector[setor][substatus] || 0);\r\n  });\r\n  chartDataByStatusAndSector.push(row);\r\n});\r\n\r\n\r\n\r\nreturn( <body>\r\n\r\n\r\n    <Navbar/>\r\n\r\n\r\n    <br/>\r\n      <div className='titulolaboratorio container-fluid '>\r\n        <h1 className='texttitulo'>DashBoard SSMT</h1>\r\n      </div> \r\n\r\n      <br/>\r\n\r\n      \r\n<body className=\"container d-flex\">\r\n\r\n\r\n<div className=\" container-fluid text-center scrollable col-6\">\r\n      <h1> Entregas por função</h1>\r\n      <Chart\r\n        width={'500px'}\r\n        height={'300px'}\r\n        chartType=\"ColumnChart\"\r\n        loader={<div>Carregando Gráfico</div>}\r\n        data={data}\r\n        options={{\r\n          chart: {\r\n            title: 'Entregas por Função',\r\n            subtitle: 'Total de EPIs Entregues por Função',\r\n          },\r\n          hAxis: {\r\n            title: 'Função',\r\n          },\r\n          vAxis: {\r\n            title: 'Total de EPIs',\r\n            minValue: 0,\r\n          },\r\n          colors: ['#3CB371'  ],\r\n        }}\r\n        rootProps={{ 'data-testid': '1' }}\r\n      />\r\n    </div>\r\n\r\n\r\n\r\n  {/*   <div>\r\n      <h1>Gráfico de Setores de Entregas de EPIs</h1>\r\n      <Chart\r\n        width={'500px'}\r\n        height={'300px'}\r\n        chartType=\"PieChart\"\r\n        loader={<div>Carregando Gráfico</div>}\r\n        data={chartData}\r\n        options={{\r\n          title: 'Distribuição de EPIs por Setor',\r\n          colors: ['#3CB371' ,'#dc3912' ],\r\n        }}\r\n        rootProps={{ 'data-testid': '1' }}\r\n      />\r\n    </div> */}\r\n\r\n\r\n\r\n    <div  className=\" container text-center col-6 offset-1 \">\r\n      <h1> Status de EPIs</h1>\r\n      <Chart\r\n        width={'500px'}\r\n        height={'300px'}\r\n        chartType=\"PieChart\"\r\n        loader={<div>Carregando Gráfico</div>}\r\n        data={chartData2}\r\n        options={{\r\n          title: 'Distribuição de EPIs por Status',\r\n          colors: ['#3CB371' ,'#dc3912' ],\r\n        }}\r\n        rootProps={{ 'data-testid': '2' }}\r\n      />\r\n    </div>\r\n\r\n    </body>\r\n\r\n    <body className=\"container text-center mt-5  d-flex ms-5\">\r\n\r\n  {/*   <div>\r\n      <h1>Gráfico de Barra Empilhada de Status de EPIs por Setor</h1>\r\n      <Chart\r\n        width={'800px'}\r\n        height={'400px'}\r\n        chartType=\"BarChart\"\r\n        loader={<div>Carregando Gráfico</div>}\r\n        data={chartData3}\r\n        options={{\r\n          title: 'Distribuição de EPIs por Status e Setor',\r\n         // isStacked: true,\r\n          \r\n        }}\r\n        rootProps={{ 'data-testid': '3' }}\r\n      />\r\n    </div> */}\r\n\r\n    <div className=\" container  text-center  col-1\"></div> \r\n\r\n\r\n<div  className=\" container-fluid align-items-cente scrollable text-center col-8\">\r\n      <h3> Status de EPIs por Setor</h3>\r\n      <Chart\r\n        width={'800px'}\r\n        height={'400px'}\r\n        chartType=\"BarChart\"\r\n        loader={<div>Carregando Gráfico</div>}\r\n        data={chartDataByStatusAndSector}\r\n        options={{\r\n          title: 'Distribuição de EPIs por Status e Setor',\r\n          isStacked: true,\r\n          colors: ['#3CB371' ,'#dc3912' ],\r\n        }}\r\n        rootProps={{ 'data-testid': '3' }}\r\n      />\r\n    </div>\r\n\r\n\r\n\r\n    <div  className=\" container text-center col-auto offset-1 scrollable\">\r\n      <h1> EPIs Mais Entregues</h1>\r\n      <Chart\r\n        width={'500px'}\r\n        height={'400px'}\r\n        chartType=\"ColumnChart\"\r\n        loader={<div>Carregando Gráfico</div>}\r\n        data={chartData4}\r\n        options={{\r\n          title: 'EPIs Mais Entregues',\r\n          hAxis: {\r\n            title: 'EPIs',\r\n          },\r\n          vAxis: {\r\n            title: 'Quantidade Entregue',\r\n            minValue: 0,\r\n          },\r\n          colors: ['#3CB371' ],\r\n          \r\n        }}\r\n        rootProps={{ 'data-testid': '4' }}\r\n      />\r\n    </div>\r\n\r\n    </body>\r\n\r\n\r\n<br/><br/><br/>\r\n\r\n</body>\r\n\r\n)\r\n\r\n\r\n};"],"mappings":"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"},"metadata":{},"sourceType":"module"}