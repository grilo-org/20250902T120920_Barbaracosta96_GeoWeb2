{"ast":null,"code":"import { __awaiter, __generator } from \"tslib\";\nimport PDFCrossRefSection from \"../document/PDFCrossRefSection\";\nimport PDFHeader from \"../document/PDFHeader\";\nimport PDFTrailer from \"../document/PDFTrailer\";\nimport PDFTrailerDict from \"../document/PDFTrailerDict\";\nimport PDFObjectStream from \"../structures/PDFObjectStream\";\nimport CharCodes from \"../syntax/CharCodes\";\nimport { copyStringIntoBuffer, waitForTick } from \"../../utils\";\nvar PDFWriter = /** @class */function () {\n  function PDFWriter(context, objectsPerTick) {\n    var _this = this;\n    this.parsedObjects = 0;\n    this.shouldWaitForTick = function (n) {\n      _this.parsedObjects += n;\n      return _this.parsedObjects % _this.objectsPerTick === 0;\n    };\n    this.context = context;\n    this.objectsPerTick = objectsPerTick;\n  }\n  PDFWriter.prototype.serializeToBuffer = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var _a, size, header, indirectObjects, xref, trailerDict, trailer, offset, buffer, idx, len, _b, ref, object, objectNumber, generationNumber, n;\n      return __generator(this, function (_c) {\n        switch (_c.label) {\n          case 0:\n            return [4 /*yield*/, this.computeBufferSize()];\n          case 1:\n            _a = _c.sent(), size = _a.size, header = _a.header, indirectObjects = _a.indirectObjects, xref = _a.xref, trailerDict = _a.trailerDict, trailer = _a.trailer;\n            offset = 0;\n            buffer = new Uint8Array(size);\n            offset += header.copyBytesInto(buffer, offset);\n            buffer[offset++] = CharCodes.Newline;\n            buffer[offset++] = CharCodes.Newline;\n            idx = 0, len = indirectObjects.length;\n            _c.label = 2;\n          case 2:\n            if (!(idx < len)) return [3 /*break*/, 5];\n            _b = indirectObjects[idx], ref = _b[0], object = _b[1];\n            objectNumber = String(ref.objectNumber);\n            offset += copyStringIntoBuffer(objectNumber, buffer, offset);\n            buffer[offset++] = CharCodes.Space;\n            generationNumber = String(ref.generationNumber);\n            offset += copyStringIntoBuffer(generationNumber, buffer, offset);\n            buffer[offset++] = CharCodes.Space;\n            buffer[offset++] = CharCodes.o;\n            buffer[offset++] = CharCodes.b;\n            buffer[offset++] = CharCodes.j;\n            buffer[offset++] = CharCodes.Newline;\n            offset += object.copyBytesInto(buffer, offset);\n            buffer[offset++] = CharCodes.Newline;\n            buffer[offset++] = CharCodes.e;\n            buffer[offset++] = CharCodes.n;\n            buffer[offset++] = CharCodes.d;\n            buffer[offset++] = CharCodes.o;\n            buffer[offset++] = CharCodes.b;\n            buffer[offset++] = CharCodes.j;\n            buffer[offset++] = CharCodes.Newline;\n            buffer[offset++] = CharCodes.Newline;\n            n = object instanceof PDFObjectStream ? object.getObjectsCount() : 1;\n            if (!this.shouldWaitForTick(n)) return [3 /*break*/, 4];\n            return [4 /*yield*/, waitForTick()];\n          case 3:\n            _c.sent();\n            _c.label = 4;\n          case 4:\n            idx++;\n            return [3 /*break*/, 2];\n          case 5:\n            if (xref) {\n              offset += xref.copyBytesInto(buffer, offset);\n              buffer[offset++] = CharCodes.Newline;\n            }\n            if (trailerDict) {\n              offset += trailerDict.copyBytesInto(buffer, offset);\n              buffer[offset++] = CharCodes.Newline;\n              buffer[offset++] = CharCodes.Newline;\n            }\n            offset += trailer.copyBytesInto(buffer, offset);\n            return [2 /*return*/, buffer];\n        }\n      });\n    });\n  };\n  PDFWriter.prototype.computeIndirectObjectSize = function (_a) {\n    var ref = _a[0],\n      object = _a[1];\n    var refSize = ref.sizeInBytes() + 3; // 'R' -> 'obj\\n'\n    var objectSize = object.sizeInBytes() + 9; // '\\nendobj\\n\\n'\n    return refSize + objectSize;\n  };\n  PDFWriter.prototype.createTrailerDict = function () {\n    return this.context.obj({\n      Size: this.context.largestObjectNumber + 1,\n      Root: this.context.trailerInfo.Root,\n      Encrypt: this.context.trailerInfo.Encrypt,\n      Info: this.context.trailerInfo.Info,\n      ID: this.context.trailerInfo.ID\n    });\n  };\n  PDFWriter.prototype.computeBufferSize = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var header, size, xref, indirectObjects, idx, len, indirectObject, ref, xrefOffset, trailerDict, trailer;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            header = PDFHeader.forVersion(1, 7);\n            size = header.sizeInBytes() + 2;\n            xref = PDFCrossRefSection.create();\n            indirectObjects = this.context.enumerateIndirectObjects();\n            idx = 0, len = indirectObjects.length;\n            _a.label = 1;\n          case 1:\n            if (!(idx < len)) return [3 /*break*/, 4];\n            indirectObject = indirectObjects[idx];\n            ref = indirectObject[0];\n            xref.addEntry(ref, size);\n            size += this.computeIndirectObjectSize(indirectObject);\n            if (!this.shouldWaitForTick(1)) return [3 /*break*/, 3];\n            return [4 /*yield*/, waitForTick()];\n          case 2:\n            _a.sent();\n            _a.label = 3;\n          case 3:\n            idx++;\n            return [3 /*break*/, 1];\n          case 4:\n            xrefOffset = size;\n            size += xref.sizeInBytes() + 1; // '\\n'\n            trailerDict = PDFTrailerDict.of(this.createTrailerDict());\n            size += trailerDict.sizeInBytes() + 2; // '\\n\\n'\n            trailer = PDFTrailer.forLastCrossRefSectionOffset(xrefOffset);\n            size += trailer.sizeInBytes();\n            return [2 /*return*/, {\n              size: size,\n              header: header,\n              indirectObjects: indirectObjects,\n              xref: xref,\n              trailerDict: trailerDict,\n              trailer: trailer\n            }];\n        }\n      });\n    });\n  };\n  PDFWriter.forContext = function (context, objectsPerTick) {\n    return new PDFWriter(context, objectsPerTick);\n  };\n  return PDFWriter;\n}();\nexport default PDFWriter;","map":{"version":3,"mappings":"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","names":["PDFCrossRefSection","PDFHeader","PDFTrailer","PDFTrailerDict","PDFObjectStream","CharCodes","copyStringIntoBuffer","waitForTick","context","objectsPerTick","n","_this","parsedObjects","PDFWriter","computeBufferSize","_a","_c","size","header","indirectObjects","xref","trailerDict","trailer","offset","buffer","Uint8Array","copyBytesInto","Newline","idx","len","length","_b","ref","object","objectNumber","String","Space","generationNumber","o","b","j","e","d","getObjectsCount","shouldWaitForTick","refSize","sizeInBytes","objectSize","obj","Size","largestObjectNumber","Root","trailerInfo","Encrypt","Info","ID","forVersion","create","enumerateIndirectObjects","indirectObject","addEntry","computeIndirectObjectSize","xrefOffset","of","createTrailerDict","forLastCrossRefSectionOffset"],"sourceRoot":"","sources":["../../../src/core/writers/PDFWriter.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}