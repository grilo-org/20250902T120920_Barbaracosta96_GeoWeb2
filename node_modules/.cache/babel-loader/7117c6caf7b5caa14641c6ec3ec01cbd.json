{"ast":null,"code":"import { __awaiter, __generator } from \"tslib\";\nimport PDFString from \"../objects/PDFString\";\nimport PDFHexString from \"../objects/PDFHexString\";\n/**\n * From the PDF-A3 specification, section **3.1. Requirements - General**.\n * See:\n * * https://www.pdfa.org/wp-content/uploads/2018/10/PDF20_AN002-AF.pdf\n */\nexport var AFRelationship;\n(function (AFRelationship) {\n  AFRelationship[\"Source\"] = \"Source\";\n  AFRelationship[\"Data\"] = \"Data\";\n  AFRelationship[\"Alternative\"] = \"Alternative\";\n  AFRelationship[\"Supplement\"] = \"Supplement\";\n  AFRelationship[\"EncryptedPayload\"] = \"EncryptedPayload\";\n  AFRelationship[\"FormData\"] = \"EncryptedPayload\";\n  AFRelationship[\"Schema\"] = \"Schema\";\n  AFRelationship[\"Unspecified\"] = \"Unspecified\";\n})(AFRelationship || (AFRelationship = {}));\nvar FileEmbedder = /** @class */function () {\n  function FileEmbedder(fileData, fileName, options) {\n    if (options === void 0) {\n      options = {};\n    }\n    this.fileData = fileData;\n    this.fileName = fileName;\n    this.options = options;\n  }\n  FileEmbedder.for = function (bytes, fileName, options) {\n    if (options === void 0) {\n      options = {};\n    }\n    return new FileEmbedder(bytes, fileName, options);\n  };\n  FileEmbedder.prototype.embedIntoContext = function (context, ref) {\n    return __awaiter(this, void 0, void 0, function () {\n      var _a, mimeType, description, creationDate, modificationDate, afRelationship, embeddedFileStream, embeddedFileStreamRef, fileSpecDict;\n      return __generator(this, function (_b) {\n        _a = this.options, mimeType = _a.mimeType, description = _a.description, creationDate = _a.creationDate, modificationDate = _a.modificationDate, afRelationship = _a.afRelationship;\n        embeddedFileStream = context.flateStream(this.fileData, {\n          Type: 'EmbeddedFile',\n          Subtype: mimeType !== null && mimeType !== void 0 ? mimeType : undefined,\n          Params: {\n            Size: this.fileData.length,\n            CreationDate: creationDate ? PDFString.fromDate(creationDate) : undefined,\n            ModDate: modificationDate ? PDFString.fromDate(modificationDate) : undefined\n          }\n        });\n        embeddedFileStreamRef = context.register(embeddedFileStream);\n        fileSpecDict = context.obj({\n          Type: 'Filespec',\n          F: PDFString.of(this.fileName),\n          UF: PDFHexString.fromText(this.fileName),\n          EF: {\n            F: embeddedFileStreamRef\n          },\n          Desc: description ? PDFHexString.fromText(description) : undefined,\n          AFRelationship: afRelationship !== null && afRelationship !== void 0 ? afRelationship : undefined\n        });\n        if (ref) {\n          context.assign(ref, fileSpecDict);\n          return [2 /*return*/, ref];\n        } else {\n          return [2 /*return*/, context.register(fileSpecDict)];\n        }\n        return [2 /*return*/];\n      });\n    });\n  };\n\n  return FileEmbedder;\n}();\nexport default FileEmbedder;","map":{"version":3,"mappings":";AAAA,OAAOA,SAAS;AAChB,OAAOC,YAAY;AAInB;;;;;AAKA,WAAYC,cASX;AATD,WAAYA,cAAc;EACxBA,mCAAiB;EACjBA,+BAAa;EACbA,6CAA2B;EAC3BA,2CAAyB;EACzBA,uDAAqC;EACrCA,+CAA6B;EAC7BA,mCAAiB;EACjBA,6CAA2B;AAC7B,CAAC,EATWA,cAAc,KAAdA,cAAc;AAmB1B;EAaE,sBACEC,QAAoB,EACpBC,QAAgB,EAChBC,OAAiC;IAAjC;MAAAA,YAAiC;IAAA;IAEjC,IAAI,CAACF,QAAQ,GAAGA,QAAQ;IACxB,IAAI,CAACC,QAAQ,GAAGA,QAAQ;IACxB,IAAI,CAACC,OAAO,GAAGA,OAAO;EACxB;EApBOC,gBAAG,GAAV,UACEC,KAAiB,EACjBH,QAAgB,EAChBC,OAAiC;IAAjC;MAAAA,YAAiC;IAAA;IAEjC,OAAO,IAAIC,YAAY,CAACC,KAAK,EAAEH,QAAQ,EAAEC,OAAO,CAAC;EACnD,CAAC;EAgBKC,uCAAgB,GAAtB,UAAuBE,OAAmB,EAAEC,GAAY;;;;QAChDC,KAMF,IAAI,CAACL,OAAO,EALdM,QAAQ,gBACRC,WAAW,mBACXC,YAAY,oBACZC,gBAAgB,wBAChBC,cAAc;QAGVC,kBAAkB,GAAGR,OAAO,CAACS,WAAW,CAAC,IAAI,CAACd,QAAQ,EAAE;UAC5De,IAAI,EAAE,cAAc;UACpBC,OAAO,EAAER,QAAQ,aAARA,QAAQ,cAARA,QAAQ,GAAIS,SAAS;UAC9BC,MAAM,EAAE;YACNC,IAAI,EAAE,IAAI,CAACnB,QAAQ,CAACoB,MAAM;YAC1BC,YAAY,EAAEX,YAAY,GACtBb,SAAS,CAACyB,QAAQ,CAACZ,YAAY,CAAC,GAChCO,SAAS;YACbM,OAAO,EAAEZ,gBAAgB,GACrBd,SAAS,CAACyB,QAAQ,CAACX,gBAAgB,CAAC,GACpCM;;SAEP,CAAC;QACIO,qBAAqB,GAAGnB,OAAO,CAACoB,QAAQ,CAACZ,kBAAkB,CAAC;QAE5Da,YAAY,GAAGrB,OAAO,CAACsB,GAAG,CAAC;UAC/BZ,IAAI,EAAE,UAAU;UAChBa,CAAC,EAAE/B,SAAS,CAACgC,EAAE,CAAC,IAAI,CAAC5B,QAAQ,CAAC;UAC9B6B,EAAE,EAAEhC,YAAY,CAACiC,QAAQ,CAAC,IAAI,CAAC9B,QAAQ,CAAC;UACxC+B,EAAE,EAAE;YAAEJ,CAAC,EAAEJ;UAAqB,CAAE;UAChCS,IAAI,EAAExB,WAAW,GAAGX,YAAY,CAACiC,QAAQ,CAACtB,WAAW,CAAC,GAAGQ,SAAS;UAClElB,cAAc,EAAEa,cAAc,aAAdA,cAAc,cAAdA,cAAc,GAAIK;SACnC,CAAC;QAEF,IAAIX,GAAG,EAAE;UACPD,OAAO,CAAC6B,MAAM,CAAC5B,GAAG,EAAEoB,YAAY,CAAC;UACjC,sBAAOpB,GAAG;SACX,MAAM;UACL,sBAAOD,OAAO,CAACoB,QAAQ,CAACC,YAAY,CAAC;;;;;GAExC;;EACH,mBAAC;AAAD,CAAC,EA/DD;AAiEA,eAAevB,YAAY","names":["PDFString","PDFHexString","AFRelationship","fileData","fileName","options","FileEmbedder","bytes","context","ref","_a","mimeType","description","creationDate","modificationDate","afRelationship","embeddedFileStream","flateStream","Type","Subtype","undefined","Params","Size","length","CreationDate","fromDate","ModDate","embeddedFileStreamRef","register","fileSpecDict","obj","F","of","UF","fromText","EF","Desc","assign"],"sourceRoot":"","sources":["../../../src/core/embedders/FileEmbedder.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}