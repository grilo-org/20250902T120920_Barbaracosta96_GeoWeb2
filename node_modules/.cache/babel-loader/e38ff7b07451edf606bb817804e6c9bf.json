{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { rgb } from \"./colors\";\nimport { drawImage, drawLine, drawLinesOfText, drawPage, drawRectangle, drawSvgPath, drawEllipse } from \"./operations\";\nimport { popGraphicsState, pushGraphicsState, translate, LineCapStyle, scale } from \"./operators\";\nimport PDFDocument from \"./PDFDocument\";\nimport PDFEmbeddedPage from \"./PDFEmbeddedPage\";\nimport PDFFont from \"./PDFFont\";\nimport PDFImage from \"./PDFImage\";\nimport { BlendMode } from \"./PDFPageOptions\";\nimport { degrees, toDegrees } from \"./rotations\";\nimport { StandardFonts } from \"./StandardFonts\";\nimport { PDFContentStream, PDFName, PDFOperator, PDFPageLeaf, PDFRef, PDFDict, PDFArray } from \"../core\";\nimport { assertEachIs, assertIs, assertMultiple, assertOrUndefined, breakTextIntoLines, cleanText, rectanglesAreEqual, lineSplit, assertRangeOrUndefined, assertIsOneOfOrUndefined } from \"../utils\";\n/**\n * Represents a single page of a [[PDFDocument]].\n */\nvar PDFPage = /** @class */function () {\n  function PDFPage(leafNode, ref, doc) {\n    this.fontSize = 24;\n    this.fontColor = rgb(0, 0, 0);\n    this.lineHeight = 24;\n    this.x = 0;\n    this.y = 0;\n    assertIs(leafNode, 'leafNode', [[PDFPageLeaf, 'PDFPageLeaf']]);\n    assertIs(ref, 'ref', [[PDFRef, 'PDFRef']]);\n    assertIs(doc, 'doc', [[PDFDocument, 'PDFDocument']]);\n    this.node = leafNode;\n    this.ref = ref;\n    this.doc = doc;\n  }\n  /**\n   * Rotate this page by a multiple of 90 degrees. For example:\n   * ```js\n   * import { degrees } from 'pdf-lib'\n   *\n   * page.setRotation(degrees(-90))\n   * page.setRotation(degrees(0))\n   * page.setRotation(degrees(90))\n   * page.setRotation(degrees(180))\n   * page.setRotation(degrees(270))\n   * ```\n   * @param angle The angle to rotate this page.\n   */\n  PDFPage.prototype.setRotation = function (angle) {\n    var degreesAngle = toDegrees(angle);\n    assertMultiple(degreesAngle, 'degreesAngle', 90);\n    this.node.set(PDFName.of('Rotate'), this.doc.context.obj(degreesAngle));\n  };\n  /**\n   * Get this page's rotation angle in degrees. For example:\n   * ```js\n   * const rotationAngle = page.getRotation().angle;\n   * ```\n   * @returns The rotation angle of the page in degrees (always a multiple of\n   *          90 degrees).\n   */\n  PDFPage.prototype.getRotation = function () {\n    var Rotate = this.node.Rotate();\n    return degrees(Rotate ? Rotate.asNumber() : 0);\n  };\n  /**\n   * Resize this page by increasing or decreasing its width and height. For\n   * example:\n   * ```js\n   * page.setSize(250, 500)\n   * page.setSize(page.getWidth() + 50, page.getHeight() + 100)\n   * page.setSize(page.getWidth() - 50, page.getHeight() - 100)\n   * ```\n   *\n   * Note that the PDF specification does not allow for pages to have explicit\n   * widths and heights. Instead it defines the \"size\" of a page in terms of\n   * five rectangles: the MediaBox, CropBox, BleedBox, TrimBox, and ArtBox. As a\n   * result, this method cannot directly change the width and height of a page.\n   * Instead, it works by adjusting these five boxes.\n   *\n   * This method performs the following steps:\n   *   1. Set width & height of MediaBox.\n   *   2. Set width & height of CropBox, if it has same dimensions as MediaBox.\n   *   3. Set width & height of BleedBox, if it has same dimensions as MediaBox.\n   *   4. Set width & height of TrimBox, if it has same dimensions as MediaBox.\n   *   5. Set width & height of ArtBox, if it has same dimensions as MediaBox.\n   *\n   * This approach works well for most PDF documents as all PDF pages must\n   * have a MediaBox, but relatively few have a CropBox, BleedBox, TrimBox, or\n   * ArtBox. And when they do have these additional boxes, they often have the\n   * same dimensions as the MediaBox. However, if you find this method does not\n   * work for your document, consider setting the boxes directly:\n   *   * [[PDFPage.setMediaBox]]\n   *   * [[PDFPage.setCropBox]]\n   *   * [[PDFPage.setBleedBox]]\n   *   * [[PDFPage.setTrimBox]]\n   *   * [[PDFPage.setArtBox]]\n   *\n   * @param width The new width of the page.\n   * @param height The new height of the page.\n   */\n  PDFPage.prototype.setSize = function (width, height) {\n    assertIs(width, 'width', ['number']);\n    assertIs(height, 'height', ['number']);\n    var mediaBox = this.getMediaBox();\n    this.setMediaBox(mediaBox.x, mediaBox.y, width, height);\n    var cropBox = this.getCropBox();\n    var bleedBox = this.getBleedBox();\n    var trimBox = this.getTrimBox();\n    var artBox = this.getArtBox();\n    var hasCropBox = this.node.CropBox();\n    var hasBleedBox = this.node.BleedBox();\n    var hasTrimBox = this.node.TrimBox();\n    var hasArtBox = this.node.ArtBox();\n    if (hasCropBox && rectanglesAreEqual(cropBox, mediaBox)) {\n      this.setCropBox(mediaBox.x, mediaBox.y, width, height);\n    }\n    if (hasBleedBox && rectanglesAreEqual(bleedBox, mediaBox)) {\n      this.setBleedBox(mediaBox.x, mediaBox.y, width, height);\n    }\n    if (hasTrimBox && rectanglesAreEqual(trimBox, mediaBox)) {\n      this.setTrimBox(mediaBox.x, mediaBox.y, width, height);\n    }\n    if (hasArtBox && rectanglesAreEqual(artBox, mediaBox)) {\n      this.setArtBox(mediaBox.x, mediaBox.y, width, height);\n    }\n  };\n  /**\n   * Resize this page by increasing or decreasing its width. For example:\n   * ```js\n   * page.setWidth(250)\n   * page.setWidth(page.getWidth() + 50)\n   * page.setWidth(page.getWidth() - 50)\n   * ```\n   *\n   * This method uses [[PDFPage.setSize]] to set the page's width.\n   *\n   * @param width The new width of the page.\n   */\n  PDFPage.prototype.setWidth = function (width) {\n    assertIs(width, 'width', ['number']);\n    this.setSize(width, this.getSize().height);\n  };\n  /**\n   * Resize this page by increasing or decreasing its height. For example:\n   * ```js\n   * page.setHeight(500)\n   * page.setHeight(page.getWidth() + 100)\n   * page.setHeight(page.getWidth() - 100)\n   * ```\n   *\n   * This method uses [[PDFPage.setSize]] to set the page's height.\n   *\n   * @param height The new height of the page.\n   */\n  PDFPage.prototype.setHeight = function (height) {\n    assertIs(height, 'height', ['number']);\n    this.setSize(this.getSize().width, height);\n  };\n  /**\n   * Set the MediaBox of this page. For example:\n   * ```js\n   * const mediaBox = page.getMediaBox()\n   *\n   * page.setMediaBox(0, 0, 250, 500)\n   * page.setMediaBox(mediaBox.x, mediaBox.y, 50, 100)\n   * page.setMediaBox(15, 5, mediaBox.width - 50, mediaBox.height - 100)\n   * ```\n   *\n   * See [[PDFPage.getMediaBox]] for details about what the MediaBox represents.\n   *\n   * @param x The x coordinate of the lower left corner of the new MediaBox.\n   * @param y The y coordinate of the lower left corner of the new MediaBox.\n   * @param width The width of the new MediaBox.\n   * @param height The height of the new MediaBox.\n   */\n  PDFPage.prototype.setMediaBox = function (x, y, width, height) {\n    assertIs(x, 'x', ['number']);\n    assertIs(y, 'y', ['number']);\n    assertIs(width, 'width', ['number']);\n    assertIs(height, 'height', ['number']);\n    var mediaBox = this.doc.context.obj([x, y, x + width, y + height]);\n    this.node.set(PDFName.MediaBox, mediaBox);\n  };\n  /**\n   * Set the CropBox of this page. For example:\n   * ```js\n   * const cropBox = page.getCropBox()\n   *\n   * page.setCropBox(0, 0, 250, 500)\n   * page.setCropBox(cropBox.x, cropBox.y, 50, 100)\n   * page.setCropBox(15, 5, cropBox.width - 50, cropBox.height - 100)\n   * ```\n   *\n   * See [[PDFPage.getCropBox]] for details about what the CropBox represents.\n   *\n   * @param x The x coordinate of the lower left corner of the new CropBox.\n   * @param y The y coordinate of the lower left corner of the new CropBox.\n   * @param width The width of the new CropBox.\n   * @param height The height of the new CropBox.\n   */\n  PDFPage.prototype.setCropBox = function (x, y, width, height) {\n    assertIs(x, 'x', ['number']);\n    assertIs(y, 'y', ['number']);\n    assertIs(width, 'width', ['number']);\n    assertIs(height, 'height', ['number']);\n    var cropBox = this.doc.context.obj([x, y, x + width, y + height]);\n    this.node.set(PDFName.CropBox, cropBox);\n  };\n  /**\n   * Set the BleedBox of this page. For example:\n   * ```js\n   * const bleedBox = page.getBleedBox()\n   *\n   * page.setBleedBox(0, 0, 250, 500)\n   * page.setBleedBox(bleedBox.x, bleedBox.y, 50, 100)\n   * page.setBleedBox(15, 5, bleedBox.width - 50, bleedBox.height - 100)\n   * ```\n   *\n   * See [[PDFPage.getBleedBox]] for details about what the BleedBox represents.\n   *\n   * @param x The x coordinate of the lower left corner of the new BleedBox.\n   * @param y The y coordinate of the lower left corner of the new BleedBox.\n   * @param width The width of the new BleedBox.\n   * @param height The height of the new BleedBox.\n   */\n  PDFPage.prototype.setBleedBox = function (x, y, width, height) {\n    assertIs(x, 'x', ['number']);\n    assertIs(y, 'y', ['number']);\n    assertIs(width, 'width', ['number']);\n    assertIs(height, 'height', ['number']);\n    var bleedBox = this.doc.context.obj([x, y, x + width, y + height]);\n    this.node.set(PDFName.BleedBox, bleedBox);\n  };\n  /**\n   * Set the TrimBox of this page. For example:\n   * ```js\n   * const trimBox = page.getTrimBox()\n   *\n   * page.setTrimBox(0, 0, 250, 500)\n   * page.setTrimBox(trimBox.x, trimBox.y, 50, 100)\n   * page.setTrimBox(15, 5, trimBox.width - 50, trimBox.height - 100)\n   * ```\n   *\n   * See [[PDFPage.getTrimBox]] for details about what the TrimBox represents.\n   *\n   * @param x The x coordinate of the lower left corner of the new TrimBox.\n   * @param y The y coordinate of the lower left corner of the new TrimBox.\n   * @param width The width of the new TrimBox.\n   * @param height The height of the new TrimBox.\n   */\n  PDFPage.prototype.setTrimBox = function (x, y, width, height) {\n    assertIs(x, 'x', ['number']);\n    assertIs(y, 'y', ['number']);\n    assertIs(width, 'width', ['number']);\n    assertIs(height, 'height', ['number']);\n    var trimBox = this.doc.context.obj([x, y, x + width, y + height]);\n    this.node.set(PDFName.TrimBox, trimBox);\n  };\n  /**\n   * Set the ArtBox of this page. For example:\n   * ```js\n   * const artBox = page.getArtBox()\n   *\n   * page.setArtBox(0, 0, 250, 500)\n   * page.setArtBox(artBox.x, artBox.y, 50, 100)\n   * page.setArtBox(15, 5, artBox.width - 50, artBox.height - 100)\n   * ```\n   *\n   * See [[PDFPage.getArtBox]] for details about what the ArtBox represents.\n   *\n   * @param x The x coordinate of the lower left corner of the new ArtBox.\n   * @param y The y coordinate of the lower left corner of the new ArtBox.\n   * @param width The width of the new ArtBox.\n   * @param height The height of the new ArtBox.\n   */\n  PDFPage.prototype.setArtBox = function (x, y, width, height) {\n    assertIs(x, 'x', ['number']);\n    assertIs(y, 'y', ['number']);\n    assertIs(width, 'width', ['number']);\n    assertIs(height, 'height', ['number']);\n    var artBox = this.doc.context.obj([x, y, x + width, y + height]);\n    this.node.set(PDFName.ArtBox, artBox);\n  };\n  /**\n   * Get this page's width and height. For example:\n   * ```js\n   * const { width, height } = page.getSize()\n   * ```\n   *\n   * This method uses [[PDFPage.getMediaBox]] to obtain the page's\n   * width and height.\n   *\n   * @returns The width and height of the page.\n   */\n  PDFPage.prototype.getSize = function () {\n    var _a = this.getMediaBox(),\n      width = _a.width,\n      height = _a.height;\n    return {\n      width: width,\n      height: height\n    };\n  };\n  /**\n   * Get this page's width. For example:\n   * ```js\n   * const width = page.getWidth()\n   * ```\n   *\n   * This method uses [[PDFPage.getSize]] to obtain the page's size.\n   *\n   * @returns The width of the page.\n   */\n  PDFPage.prototype.getWidth = function () {\n    return this.getSize().width;\n  };\n  /**\n   * Get this page's height. For example:\n   * ```js\n   * const height = page.getHeight()\n   * ```\n   *\n   * This method uses [[PDFPage.getSize]] to obtain the page's size.\n   *\n   * @returns The height of the page.\n   */\n  PDFPage.prototype.getHeight = function () {\n    return this.getSize().height;\n  };\n  /**\n   * Get the rectangle defining this page's MediaBox. For example:\n   * ```js\n   * const { x, y, width, height } = page.getMediaBox()\n   * ```\n   *\n   * The MediaBox of a page defines the boundaries of the physical medium on\n   * which the page is to be displayed/printed. It may include extended area\n   * surrounding the page content for bleed marks, printing marks, etc...\n   * It may also include areas close to the edges of the medium that cannot be\n   * marked because of physical limitations of the output device. Content\n   * falling outside this boundary may safely be discarded without affecting\n   * the meaning of the PDF file.\n   *\n   * @returns An object defining the lower left corner of the MediaBox and its\n   *          width & height.\n   */\n  PDFPage.prototype.getMediaBox = function () {\n    var mediaBox = this.node.MediaBox();\n    return mediaBox.asRectangle();\n  };\n  /**\n   * Get the rectangle defining this page's CropBox. For example:\n   * ```js\n   * const { x, y, width, height } = page.getCropBox()\n   * ```\n   *\n   * The CropBox of a page defines the region to which the contents of the page\n   * shall be clipped when displayed or printed. Unlike the other boxes, the\n   * CropBox does not necessarily represent the physical page geometry. It\n   * merely imposes clipping on the page contents.\n   *\n   * The CropBox's default value is the page's MediaBox.\n   *\n   * @returns An object defining the lower left corner of the CropBox and its\n   *          width & height.\n   */\n  PDFPage.prototype.getCropBox = function () {\n    var _a;\n    var cropBox = this.node.CropBox();\n    return (_a = cropBox === null || cropBox === void 0 ? void 0 : cropBox.asRectangle()) !== null && _a !== void 0 ? _a : this.getMediaBox();\n  };\n  /**\n   * Get the rectangle defining this page's BleedBox. For example:\n   * ```js\n   * const { x, y, width, height } = page.getBleedBox()\n   * ```\n   *\n   * The BleedBox of a page defines the region to which the contents of the\n   * page shall be clipped when output in a production environment. This may\n   * include any extra bleed area needed to accommodate the physical\n   * limitations of cutting, folding, and trimming equipment. The actual\n   * printed page may include printing marks that fall outside the BleedBox.\n   *\n   * The BleedBox's default value is the page's CropBox.\n   *\n   * @returns An object defining the lower left corner of the BleedBox and its\n   *          width & height.\n   */\n  PDFPage.prototype.getBleedBox = function () {\n    var _a;\n    var bleedBox = this.node.BleedBox();\n    return (_a = bleedBox === null || bleedBox === void 0 ? void 0 : bleedBox.asRectangle()) !== null && _a !== void 0 ? _a : this.getCropBox();\n  };\n  /**\n   * Get the rectangle defining this page's TrimBox. For example:\n   * ```js\n   * const { x, y, width, height } = page.getTrimBox()\n   * ```\n   *\n   * The TrimBox of a page defines the intended dimensions of the finished\n   * page after trimming. It may be smaller than the MediaBox to allow for\n   * production-related content, such as printing instructions, cut marks, or\n   * color bars.\n   *\n   * The TrimBox's default value is the page's CropBox.\n   *\n   * @returns An object defining the lower left corner of the TrimBox and its\n   *          width & height.\n   */\n  PDFPage.prototype.getTrimBox = function () {\n    var _a;\n    var trimBox = this.node.TrimBox();\n    return (_a = trimBox === null || trimBox === void 0 ? void 0 : trimBox.asRectangle()) !== null && _a !== void 0 ? _a : this.getCropBox();\n  };\n  /**\n   * Get the rectangle defining this page's ArtBox. For example:\n   * ```js\n   * const { x, y, width, height } = page.getArtBox()\n   * ```\n   *\n   * The ArtBox of a page defines the extent of the page's meaningful content\n   * (including potential white space).\n   *\n   * The ArtBox's default value is the page's CropBox.\n   *\n   * @returns An object defining the lower left corner of the ArtBox and its\n   *          width & height.\n   */\n  PDFPage.prototype.getArtBox = function () {\n    var _a;\n    var artBox = this.node.ArtBox();\n    return (_a = artBox === null || artBox === void 0 ? void 0 : artBox.asRectangle()) !== null && _a !== void 0 ? _a : this.getCropBox();\n  };\n  /**\n   * Translate this page's content to a new location on the page. This operation\n   * is often useful after resizing the page with [[setSize]]. For example:\n   * ```js\n   * // Add 50 units of whitespace to the top and right of the page\n   * page.setSize(page.getWidth() + 50, page.getHeight() + 50)\n   *\n   * // Move the page's content from the lower-left corner of the page\n   * // to the top-right corner.\n   * page.translateContent(50, 50)\n   *\n   * // Now there are 50 units of whitespace to the left and bottom of the page\n   * ```\n   * See also: [[resetPosition]]\n   * @param x The new position on the x-axis for this page's content.\n   * @param y The new position on the y-axis for this page's content.\n   */\n  PDFPage.prototype.translateContent = function (x, y) {\n    assertIs(x, 'x', ['number']);\n    assertIs(y, 'y', ['number']);\n    this.node.normalize();\n    this.getContentStream();\n    var start = this.createContentStream(pushGraphicsState(), translate(x, y));\n    var startRef = this.doc.context.register(start);\n    var end = this.createContentStream(popGraphicsState());\n    var endRef = this.doc.context.register(end);\n    this.node.wrapContentStreams(startRef, endRef);\n  };\n  /**\n   * Scale the size, content, and annotations of a page.\n   *\n   * For example:\n   * ```js\n   * page.scale(0.5, 0.5);\n   * ```\n   *\n   * @param x The factor by which the width for the page should be scaled\n   *          (e.g. `0.5` is 50%).\n   * @param y The factor by which the height for the page should be scaled\n   *          (e.g. `2.0` is 200%).\n   */\n  PDFPage.prototype.scale = function (x, y) {\n    assertIs(x, 'x', ['number']);\n    assertIs(y, 'y', ['number']);\n    this.setSize(this.getWidth() * x, this.getHeight() * y);\n    this.scaleContent(x, y);\n    this.scaleAnnotations(x, y);\n  };\n  /**\n   * Scale the content of a page. This is useful after resizing an existing\n   * page. This scales only the content, not the annotations.\n   *\n   * For example:\n   * ```js\n   * // Bisect the size of the page\n   * page.setSize(page.getWidth() / 2, page.getHeight() / 2);\n   *\n   * // Scale the content of the page down by 50% in x and y\n   * page.scaleContent(0.5, 0.5);\n   * ```\n   * See also: [[scaleAnnotations]]\n   * @param x The factor by which the x-axis for the content should be scaled\n   *          (e.g. `0.5` is 50%).\n   * @param y The factor by which the y-axis for the content should be scaled\n   *          (e.g. `2.0` is 200%).\n   */\n  PDFPage.prototype.scaleContent = function (x, y) {\n    assertIs(x, 'x', ['number']);\n    assertIs(y, 'y', ['number']);\n    this.node.normalize();\n    this.getContentStream();\n    var start = this.createContentStream(pushGraphicsState(), scale(x, y));\n    var startRef = this.doc.context.register(start);\n    var end = this.createContentStream(popGraphicsState());\n    var endRef = this.doc.context.register(end);\n    this.node.wrapContentStreams(startRef, endRef);\n  };\n  /**\n   * Scale the annotations of a page. This is useful if you want to scale a\n   * page with comments or other annotations.\n   * ```js\n   * // Scale the content of the page down by 50% in x and y\n   * page.scaleContent(0.5, 0.5);\n   *\n   * // Scale the content of the page down by 50% in x and y\n   * page.scaleAnnotations(0.5, 0.5);\n   * ```\n   * See also: [[scaleContent]]\n   * @param x The factor by which the x-axis for the annotations should be\n   *          scaled (e.g. `0.5` is 50%).\n   * @param y The factor by which the y-axis for the annotations should be\n   *          scaled (e.g. `2.0` is 200%).\n   */\n  PDFPage.prototype.scaleAnnotations = function (x, y) {\n    assertIs(x, 'x', ['number']);\n    assertIs(y, 'y', ['number']);\n    var annots = this.node.Annots();\n    if (!annots) return;\n    for (var idx = 0; idx < annots.size(); idx++) {\n      var annot = annots.lookup(idx);\n      if (annot instanceof PDFDict) this.scaleAnnot(annot, x, y);\n    }\n  };\n  /**\n   * Reset the x and y coordinates of this page to `(0, 0)`. This operation is\n   * often useful after calling [[translateContent]]. For example:\n   * ```js\n   * // Shift the page's contents up and to the right by 50 units\n   * page.translateContent(50, 50)\n   *\n   * // This text will shifted - it will be drawn at (50, 50)\n   * page.drawText('I am shifted')\n   *\n   * // Move back to (0, 0)\n   * page.resetPosition()\n   *\n   * // This text will not be shifted - it will be drawn at (0, 0)\n   * page.drawText('I am not shifted')\n   * ```\n   */\n  PDFPage.prototype.resetPosition = function () {\n    this.getContentStream(false);\n    this.x = 0;\n    this.y = 0;\n  };\n  /**\n   * Choose a default font for this page. The default font will be used whenever\n   * text is drawn on this page and no font is specified. For example:\n   * ```js\n   * import { StandardFonts } from 'pdf-lib'\n   *\n   * const timesRomanFont = await pdfDoc.embedFont(StandardFonts.TimesRoman)\n   * const helveticaFont = await pdfDoc.embedFont(StandardFonts.Helvetica)\n   * const courierFont = await pdfDoc.embedFont(StandardFonts.Courier)\n   *\n   * const page = pdfDoc.addPage()\n   *\n   * page.setFont(helveticaFont)\n   * page.drawText('I will be drawn in Helvetica')\n   *\n   * page.setFont(timesRomanFont)\n   * page.drawText('I will be drawn in Courier', { font: courierFont })\n   * ```\n   * @param font The default font to be used when drawing text on this page.\n   */\n  PDFPage.prototype.setFont = function (font) {\n    // TODO: Reuse image Font name if we've already added this image to Resources.Fonts\n    assertIs(font, 'font', [[PDFFont, 'PDFFont']]);\n    this.font = font;\n    this.fontKey = this.node.newFontDictionary(this.font.name, this.font.ref);\n  };\n  /**\n   * Choose a default font size for this page. The default font size will be\n   * used whenever text is drawn on this page and no font size is specified.\n   * For example:\n   * ```js\n   * page.setFontSize(12)\n   * page.drawText('I will be drawn in size 12')\n   *\n   * page.setFontSize(36)\n   * page.drawText('I will be drawn in size 24', { fontSize: 24 })\n   * ```\n   * @param fontSize The default font size to be used when drawing text on this\n   *                 page.\n   */\n  PDFPage.prototype.setFontSize = function (fontSize) {\n    assertIs(fontSize, 'fontSize', ['number']);\n    this.fontSize = fontSize;\n  };\n  /**\n   * Choose a default font color for this page. The default font color will be\n   * used whenever text is drawn on this page and no font color is specified.\n   * For example:\n   * ```js\n   * import { rgb, cmyk, grayscale } from 'pdf-lib'\n   *\n   * page.setFontColor(rgb(0.97, 0.02, 0.97))\n   * page.drawText('I will be drawn in pink')\n   *\n   * page.setFontColor(cmyk(0.4, 0.7, 0.39, 0.15))\n   * page.drawText('I will be drawn in gray', { color: grayscale(0.5) })\n   * ```\n   * @param fontColor The default font color to be used when drawing text on\n   *                  this page.\n   */\n  PDFPage.prototype.setFontColor = function (fontColor) {\n    assertIs(fontColor, 'fontColor', [[Object, 'Color']]);\n    this.fontColor = fontColor;\n  };\n  /**\n   * Choose a default line height for this page. The default line height will be\n   * used whenever text is drawn on this page and no line height is specified.\n   * For example:\n   * ```js\n   * page.setLineHeight(12);\n   * page.drawText('These lines will be vertically \\n separated by 12 units')\n   *\n   * page.setLineHeight(36);\n   * page.drawText('These lines will be vertically \\n separated by 24 units', {\n   *   lineHeight: 24\n   * })\n   * ```\n   * @param lineHeight The default line height to be used when drawing text on\n   *                   this page.\n   */\n  PDFPage.prototype.setLineHeight = function (lineHeight) {\n    assertIs(lineHeight, 'lineHeight', ['number']);\n    this.lineHeight = lineHeight;\n  };\n  /**\n   * Get the default position of this page. For example:\n   * ```js\n   * const { x, y } = page.getPosition()\n   * ```\n   * @returns The default position of the page.\n   */\n  PDFPage.prototype.getPosition = function () {\n    return {\n      x: this.x,\n      y: this.y\n    };\n  };\n  /**\n   * Get the default x coordinate of this page. For example:\n   * ```js\n   * const x = page.getX()\n   * ```\n   * @returns The default x coordinate of the page.\n   */\n  PDFPage.prototype.getX = function () {\n    return this.x;\n  };\n  /**\n   * Get the default y coordinate of this page. For example:\n   * ```js\n   * const y = page.getY()\n   * ```\n   * @returns The default y coordinate of the page.\n   */\n  PDFPage.prototype.getY = function () {\n    return this.y;\n  };\n  /**\n   * Change the default position of this page. For example:\n   * ```js\n   * page.moveTo(0, 0)\n   * page.drawText('I will be drawn at the origin')\n   *\n   * page.moveTo(0, 25)\n   * page.drawText('I will be drawn 25 units up')\n   *\n   * page.moveTo(25, 25)\n   * page.drawText('I will be drawn 25 units up and 25 units to the right')\n   * ```\n   * @param x The new default position on the x-axis for this page.\n   * @param y The new default position on the y-axis for this page.\n   */\n  PDFPage.prototype.moveTo = function (x, y) {\n    assertIs(x, 'x', ['number']);\n    assertIs(y, 'y', ['number']);\n    this.x = x;\n    this.y = y;\n  };\n  /**\n   * Change the default position of this page to be further down the y-axis.\n   * For example:\n   * ```js\n   * page.moveTo(50, 50)\n   * page.drawText('I will be drawn at (50, 50)')\n   *\n   * page.moveDown(10)\n   * page.drawText('I will be drawn at (50, 40)')\n   * ```\n   * @param yDecrease The amount by which the page's default position along the\n   *                  y-axis should be decreased.\n   */\n  PDFPage.prototype.moveDown = function (yDecrease) {\n    assertIs(yDecrease, 'yDecrease', ['number']);\n    this.y -= yDecrease;\n  };\n  /**\n   * Change the default position of this page to be further up the y-axis.\n   * For example:\n   * ```js\n   * page.moveTo(50, 50)\n   * page.drawText('I will be drawn at (50, 50)')\n   *\n   * page.moveUp(10)\n   * page.drawText('I will be drawn at (50, 60)')\n   * ```\n   * @param yIncrease The amount by which the page's default position along the\n   *                  y-axis should be increased.\n   */\n  PDFPage.prototype.moveUp = function (yIncrease) {\n    assertIs(yIncrease, 'yIncrease', ['number']);\n    this.y += yIncrease;\n  };\n  /**\n   * Change the default position of this page to be further left on the x-axis.\n   * For example:\n   * ```js\n   * page.moveTo(50, 50)\n   * page.drawText('I will be drawn at (50, 50)')\n   *\n   * page.moveLeft(10)\n   * page.drawText('I will be drawn at (40, 50)')\n   * ```\n   * @param xDecrease The amount by which the page's default position along the\n   *                  x-axis should be decreased.\n   */\n  PDFPage.prototype.moveLeft = function (xDecrease) {\n    assertIs(xDecrease, 'xDecrease', ['number']);\n    this.x -= xDecrease;\n  };\n  /**\n   * Change the default position of this page to be further right on the y-axis.\n   * For example:\n   * ```js\n   * page.moveTo(50, 50)\n   * page.drawText('I will be drawn at (50, 50)')\n   *\n   * page.moveRight(10)\n   * page.drawText('I will be drawn at (60, 50)')\n   * ```\n   * @param xIncrease The amount by which the page's default position along the\n   *                  x-axis should be increased.\n   */\n  PDFPage.prototype.moveRight = function (xIncrease) {\n    assertIs(xIncrease, 'xIncrease', ['number']);\n    this.x += xIncrease;\n  };\n  /**\n   * Push one or more operators to the end of this page's current content\n   * stream. For example:\n   * ```js\n   * import {\n   *   pushGraphicsState,\n   *   moveTo,\n   *   lineTo,\n   *   closePath,\n   *   setFillingColor,\n   *   rgb,\n   *   fill,\n   *   popGraphicsState,\n   * } from 'pdf-lib'\n   *\n   * // Draw a green triangle in the lower-left corner of the page\n   * page.pushOperators(\n   *   pushGraphicsState(),\n   *   moveTo(0, 0),\n   *   lineTo(100, 0),\n   *   lineTo(50, 100),\n   *   closePath(),\n   *   setFillingColor(rgb(0.0, 1.0, 0.0)),\n   *   fill(),\n   *   popGraphicsState(),\n   * )\n   * ```\n   * @param operator The operators to be pushed.\n   */\n  PDFPage.prototype.pushOperators = function () {\n    var operator = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n      operator[_i] = arguments[_i];\n    }\n    assertEachIs(operator, 'operator', [[PDFOperator, 'PDFOperator']]);\n    var contentStream = this.getContentStream();\n    contentStream.push.apply(contentStream, operator);\n  };\n  /**\n   * Draw one or more lines of text on this page. For example:\n   * ```js\n   * import { StandardFonts, rgb } from 'pdf-lib'\n   *\n   * const helveticaFont = await pdfDoc.embedFont(StandardFonts.Helvetica)\n   * const timesRomanFont = await pdfDoc.embedFont(StandardFonts.TimesRoman)\n   *\n   * const page = pdfDoc.addPage()\n   *\n   * page.setFont(helveticaFont)\n   *\n   * page.moveTo(5, 200)\n   * page.drawText('The Life of an Egg', { size: 36 })\n   *\n   * page.moveDown(36)\n   * page.drawText('An Epic Tale of Woe', { size: 30 })\n   *\n   * page.drawText(\n   *   `Humpty Dumpty sat on a wall \\n` +\n   *   `Humpty Dumpty had a great fall; \\n` +\n   *   `All the king's horses and all the king's men \\n` +\n   *   `Couldn't put Humpty together again. \\n`,\n   *   {\n   *     x: 25,\n   *     y: 100,\n   *     font: timesRomanFont,\n   *     size: 24,\n   *     color: rgb(1, 0, 0),\n   *     lineHeight: 24,\n   *     opacity: 0.75,\n   *   },\n   * )\n   * ```\n   * @param text The text to be drawn.\n   * @param options The options to be used when drawing the text.\n   */\n  PDFPage.prototype.drawText = function (text, options) {\n    var _a, _b, _c, _d, _e, _f, _g;\n    if (options === void 0) {\n      options = {};\n    }\n    assertIs(text, 'text', ['string']);\n    assertOrUndefined(options.color, 'options.color', [[Object, 'Color']]);\n    assertRangeOrUndefined(options.opacity, 'opacity.opacity', 0, 1);\n    assertOrUndefined(options.font, 'options.font', [[PDFFont, 'PDFFont']]);\n    assertOrUndefined(options.size, 'options.size', ['number']);\n    assertOrUndefined(options.rotate, 'options.rotate', [[Object, 'Rotation']]);\n    assertOrUndefined(options.xSkew, 'options.xSkew', [[Object, 'Rotation']]);\n    assertOrUndefined(options.ySkew, 'options.ySkew', [[Object, 'Rotation']]);\n    assertOrUndefined(options.x, 'options.x', ['number']);\n    assertOrUndefined(options.y, 'options.y', ['number']);\n    assertOrUndefined(options.lineHeight, 'options.lineHeight', ['number']);\n    assertOrUndefined(options.maxWidth, 'options.maxWidth', ['number']);\n    assertOrUndefined(options.wordBreaks, 'options.wordBreaks', [Array]);\n    assertIsOneOfOrUndefined(options.blendMode, 'options.blendMode', BlendMode);\n    var _h = this.setOrEmbedFont(options.font),\n      oldFont = _h.oldFont,\n      newFont = _h.newFont,\n      newFontKey = _h.newFontKey;\n    var fontSize = options.size || this.fontSize;\n    var wordBreaks = options.wordBreaks || this.doc.defaultWordBreaks;\n    var textWidth = function textWidth(t) {\n      return newFont.widthOfTextAtSize(t, fontSize);\n    };\n    var lines = options.maxWidth === undefined ? lineSplit(cleanText(text)) : breakTextIntoLines(text, wordBreaks, options.maxWidth, textWidth);\n    var encodedLines = new Array(lines.length);\n    for (var idx = 0, len = lines.length; idx < len; idx++) {\n      encodedLines[idx] = newFont.encodeText(lines[idx]);\n    }\n    var graphicsStateKey = this.maybeEmbedGraphicsState({\n      opacity: options.opacity,\n      blendMode: options.blendMode\n    });\n    var contentStream = this.getContentStream();\n    contentStream.push.apply(contentStream, drawLinesOfText(encodedLines, {\n      color: (_a = options.color) !== null && _a !== void 0 ? _a : this.fontColor,\n      font: newFontKey,\n      size: fontSize,\n      rotate: (_b = options.rotate) !== null && _b !== void 0 ? _b : degrees(0),\n      xSkew: (_c = options.xSkew) !== null && _c !== void 0 ? _c : degrees(0),\n      ySkew: (_d = options.ySkew) !== null && _d !== void 0 ? _d : degrees(0),\n      x: (_e = options.x) !== null && _e !== void 0 ? _e : this.x,\n      y: (_f = options.y) !== null && _f !== void 0 ? _f : this.y,\n      lineHeight: (_g = options.lineHeight) !== null && _g !== void 0 ? _g : this.lineHeight,\n      graphicsState: graphicsStateKey\n    }));\n    if (options.font) {\n      if (oldFont) this.setFont(oldFont);else this.resetFont();\n    }\n  };\n  /**\n   * Draw an image on this page. For example:\n   * ```js\n   * import { degrees } from 'pdf-lib'\n   *\n   * const jpgUrl = 'https://pdf-lib.js.org/assets/cat_riding_unicorn.jpg'\n   * const jpgImageBytes = await fetch(jpgUrl).then((res) => res.arrayBuffer())\n   *\n   * const jpgImage = await pdfDoc.embedJpg(jpgImageBytes)\n   * const jpgDims = jpgImage.scale(0.5)\n   *\n   * const page = pdfDoc.addPage()\n   *\n   * page.drawImage(jpgImage, {\n   *   x: 25,\n   *   y: 25,\n   *   width: jpgDims.width,\n   *   height: jpgDims.height,\n   *   rotate: degrees(30),\n   *   opacity: 0.75,\n   * })\n   * ```\n   * @param image The image to be drawn.\n   * @param options The options to be used when drawing the image.\n   */\n  PDFPage.prototype.drawImage = function (image, options) {\n    var _a, _b, _c, _d, _e, _f, _g;\n    if (options === void 0) {\n      options = {};\n    }\n    // TODO: Reuse image XObject name if we've already added this image to Resources.XObjects\n    assertIs(image, 'image', [[PDFImage, 'PDFImage']]);\n    assertOrUndefined(options.x, 'options.x', ['number']);\n    assertOrUndefined(options.y, 'options.y', ['number']);\n    assertOrUndefined(options.width, 'options.width', ['number']);\n    assertOrUndefined(options.height, 'options.height', ['number']);\n    assertOrUndefined(options.rotate, 'options.rotate', [[Object, 'Rotation']]);\n    assertOrUndefined(options.xSkew, 'options.xSkew', [[Object, 'Rotation']]);\n    assertOrUndefined(options.ySkew, 'options.ySkew', [[Object, 'Rotation']]);\n    assertRangeOrUndefined(options.opacity, 'opacity.opacity', 0, 1);\n    assertIsOneOfOrUndefined(options.blendMode, 'options.blendMode', BlendMode);\n    var xObjectKey = this.node.newXObject('Image', image.ref);\n    var graphicsStateKey = this.maybeEmbedGraphicsState({\n      opacity: options.opacity,\n      blendMode: options.blendMode\n    });\n    var contentStream = this.getContentStream();\n    contentStream.push.apply(contentStream, drawImage(xObjectKey, {\n      x: (_a = options.x) !== null && _a !== void 0 ? _a : this.x,\n      y: (_b = options.y) !== null && _b !== void 0 ? _b : this.y,\n      width: (_c = options.width) !== null && _c !== void 0 ? _c : image.size().width,\n      height: (_d = options.height) !== null && _d !== void 0 ? _d : image.size().height,\n      rotate: (_e = options.rotate) !== null && _e !== void 0 ? _e : degrees(0),\n      xSkew: (_f = options.xSkew) !== null && _f !== void 0 ? _f : degrees(0),\n      ySkew: (_g = options.ySkew) !== null && _g !== void 0 ? _g : degrees(0),\n      graphicsState: graphicsStateKey\n    }));\n  };\n  /**\n   * Draw an embedded PDF page on this page. For example:\n   * ```js\n   * import { degrees } from 'pdf-lib'\n   *\n   * const pdfDoc = await PDFDocument.create()\n   * const page = pdfDoc.addPage()\n   *\n   * const sourcePdfUrl = 'https://pdf-lib.js.org/assets/with_large_page_count.pdf'\n   * const sourcePdf = await fetch(sourcePdfUrl).then((res) => res.arrayBuffer())\n   *\n   * // Embed page 74 from the PDF\n   * const [embeddedPage] = await pdfDoc.embedPdf(sourcePdf, 73)\n   *\n   * page.drawPage(embeddedPage, {\n   *   x: 250,\n   *   y: 200,\n   *   xScale: 0.5,\n   *   yScale: 0.5,\n   *   rotate: degrees(30),\n   *   opacity: 0.75,\n   * })\n   * ```\n   *\n   * The `options` argument accepts both `width`/`height` and `xScale`/`yScale`\n   * as options. Since each of these options defines the size of the drawn page,\n   * if both options are given, `width` and `height` take precedence and the\n   * corresponding scale variants are ignored.\n   *\n   * @param embeddedPage The embedded page to be drawn.\n   * @param options The options to be used when drawing the embedded page.\n   */\n  PDFPage.prototype.drawPage = function (embeddedPage, options) {\n    var _a, _b, _c, _d, _e;\n    if (options === void 0) {\n      options = {};\n    }\n    // TODO: Reuse embeddedPage XObject name if we've already added this embeddedPage to Resources.XObjects\n    assertIs(embeddedPage, 'embeddedPage', [[PDFEmbeddedPage, 'PDFEmbeddedPage']]);\n    assertOrUndefined(options.x, 'options.x', ['number']);\n    assertOrUndefined(options.y, 'options.y', ['number']);\n    assertOrUndefined(options.xScale, 'options.xScale', ['number']);\n    assertOrUndefined(options.yScale, 'options.yScale', ['number']);\n    assertOrUndefined(options.width, 'options.width', ['number']);\n    assertOrUndefined(options.height, 'options.height', ['number']);\n    assertOrUndefined(options.rotate, 'options.rotate', [[Object, 'Rotation']]);\n    assertOrUndefined(options.xSkew, 'options.xSkew', [[Object, 'Rotation']]);\n    assertOrUndefined(options.ySkew, 'options.ySkew', [[Object, 'Rotation']]);\n    assertRangeOrUndefined(options.opacity, 'opacity.opacity', 0, 1);\n    assertIsOneOfOrUndefined(options.blendMode, 'options.blendMode', BlendMode);\n    var xObjectKey = this.node.newXObject('EmbeddedPdfPage', embeddedPage.ref);\n    var graphicsStateKey = this.maybeEmbedGraphicsState({\n      opacity: options.opacity,\n      blendMode: options.blendMode\n    });\n    // prettier-ignore\n    var xScale = options.width !== undefined ? options.width / embeddedPage.width : options.xScale !== undefined ? options.xScale : 1;\n    // prettier-ignore\n    var yScale = options.height !== undefined ? options.height / embeddedPage.height : options.yScale !== undefined ? options.yScale : 1;\n    var contentStream = this.getContentStream();\n    contentStream.push.apply(contentStream, drawPage(xObjectKey, {\n      x: (_a = options.x) !== null && _a !== void 0 ? _a : this.x,\n      y: (_b = options.y) !== null && _b !== void 0 ? _b : this.y,\n      xScale: xScale,\n      yScale: yScale,\n      rotate: (_c = options.rotate) !== null && _c !== void 0 ? _c : degrees(0),\n      xSkew: (_d = options.xSkew) !== null && _d !== void 0 ? _d : degrees(0),\n      ySkew: (_e = options.ySkew) !== null && _e !== void 0 ? _e : degrees(0),\n      graphicsState: graphicsStateKey\n    }));\n  };\n  /**\n   * Draw an SVG path on this page. For example:\n   * ```js\n   * import { rgb } from 'pdf-lib'\n   *\n   * const svgPath = 'M 0,20 L 100,160 Q 130,200 150,120 C 190,-40 200,200 300,150 L 400,90'\n   *\n   * // Draw path as black line\n   * page.drawSvgPath(svgPath, { x: 25, y: 75 })\n   *\n   * // Change border style and opacity\n   * page.drawSvgPath(svgPath, {\n   *   x: 25,\n   *   y: 275,\n   *   borderColor: rgb(0.5, 0.5, 0.5),\n   *   borderWidth: 2,\n   *   borderOpacity: 0.75,\n   * })\n   *\n   * // Set fill color and opacity\n   * page.drawSvgPath(svgPath, {\n   *   x: 25,\n   *   y: 475,\n   *   color: rgb(1.0, 0, 0),\n   *   opacity: 0.75,\n   * })\n   *\n   * // Draw 50% of original size\n   * page.drawSvgPath(svgPath, {\n   *   x: 25,\n   *   y: 675,\n   *   scale: 0.5,\n   * })\n   * ```\n   * @param path The SVG path to be drawn.\n   * @param options The options to be used when drawing the SVG path.\n   */\n  PDFPage.prototype.drawSvgPath = function (path, options) {\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j;\n    if (options === void 0) {\n      options = {};\n    }\n    assertIs(path, 'path', ['string']);\n    assertOrUndefined(options.x, 'options.x', ['number']);\n    assertOrUndefined(options.y, 'options.y', ['number']);\n    assertOrUndefined(options.scale, 'options.scale', ['number']);\n    assertOrUndefined(options.rotate, 'options.rotate', [[Object, 'Rotation']]);\n    assertOrUndefined(options.borderWidth, 'options.borderWidth', ['number']);\n    assertOrUndefined(options.color, 'options.color', [[Object, 'Color']]);\n    assertRangeOrUndefined(options.opacity, 'opacity.opacity', 0, 1);\n    assertOrUndefined(options.borderColor, 'options.borderColor', [[Object, 'Color']]);\n    assertOrUndefined(options.borderDashArray, 'options.borderDashArray', [Array]);\n    assertOrUndefined(options.borderDashPhase, 'options.borderDashPhase', ['number']);\n    assertIsOneOfOrUndefined(options.borderLineCap, 'options.borderLineCap', LineCapStyle);\n    assertRangeOrUndefined(options.borderOpacity, 'options.borderOpacity', 0, 1);\n    assertIsOneOfOrUndefined(options.blendMode, 'options.blendMode', BlendMode);\n    var graphicsStateKey = this.maybeEmbedGraphicsState({\n      opacity: options.opacity,\n      borderOpacity: options.borderOpacity,\n      blendMode: options.blendMode\n    });\n    if (!('color' in options) && !('borderColor' in options)) {\n      options.borderColor = rgb(0, 0, 0);\n    }\n    var contentStream = this.getContentStream();\n    contentStream.push.apply(contentStream, drawSvgPath(path, {\n      x: (_a = options.x) !== null && _a !== void 0 ? _a : this.x,\n      y: (_b = options.y) !== null && _b !== void 0 ? _b : this.y,\n      scale: options.scale,\n      rotate: (_c = options.rotate) !== null && _c !== void 0 ? _c : degrees(0),\n      color: (_d = options.color) !== null && _d !== void 0 ? _d : undefined,\n      borderColor: (_e = options.borderColor) !== null && _e !== void 0 ? _e : undefined,\n      borderWidth: (_f = options.borderWidth) !== null && _f !== void 0 ? _f : 0,\n      borderDashArray: (_g = options.borderDashArray) !== null && _g !== void 0 ? _g : undefined,\n      borderDashPhase: (_h = options.borderDashPhase) !== null && _h !== void 0 ? _h : undefined,\n      borderLineCap: (_j = options.borderLineCap) !== null && _j !== void 0 ? _j : undefined,\n      graphicsState: graphicsStateKey\n    }));\n  };\n  /**\n   * Draw a line on this page. For example:\n   * ```js\n   * import { rgb } from 'pdf-lib'\n   *\n   * page.drawLine({\n   *   start: { x: 25, y: 75 },\n   *   end: { x: 125, y: 175 },\n   *   thickness: 2,\n   *   color: rgb(0.75, 0.2, 0.2),\n   *   opacity: 0.75,\n   * })\n   * ```\n   * @param options The options to be used when drawing the line.\n   */\n  PDFPage.prototype.drawLine = function (options) {\n    var _a, _b, _c, _d, _e;\n    assertIs(options.start, 'options.start', [[Object, '{ x: number, y: number }']]);\n    assertIs(options.end, 'options.end', [[Object, '{ x: number, y: number }']]);\n    assertIs(options.start.x, 'options.start.x', ['number']);\n    assertIs(options.start.y, 'options.start.y', ['number']);\n    assertIs(options.end.x, 'options.end.x', ['number']);\n    assertIs(options.end.y, 'options.end.y', ['number']);\n    assertOrUndefined(options.thickness, 'options.thickness', ['number']);\n    assertOrUndefined(options.color, 'options.color', [[Object, 'Color']]);\n    assertOrUndefined(options.dashArray, 'options.dashArray', [Array]);\n    assertOrUndefined(options.dashPhase, 'options.dashPhase', ['number']);\n    assertIsOneOfOrUndefined(options.lineCap, 'options.lineCap', LineCapStyle);\n    assertRangeOrUndefined(options.opacity, 'opacity.opacity', 0, 1);\n    assertIsOneOfOrUndefined(options.blendMode, 'options.blendMode', BlendMode);\n    var graphicsStateKey = this.maybeEmbedGraphicsState({\n      borderOpacity: options.opacity,\n      blendMode: options.blendMode\n    });\n    if (!('color' in options)) {\n      options.color = rgb(0, 0, 0);\n    }\n    var contentStream = this.getContentStream();\n    contentStream.push.apply(contentStream, drawLine({\n      start: options.start,\n      end: options.end,\n      thickness: (_a = options.thickness) !== null && _a !== void 0 ? _a : 1,\n      color: (_b = options.color) !== null && _b !== void 0 ? _b : undefined,\n      dashArray: (_c = options.dashArray) !== null && _c !== void 0 ? _c : undefined,\n      dashPhase: (_d = options.dashPhase) !== null && _d !== void 0 ? _d : undefined,\n      lineCap: (_e = options.lineCap) !== null && _e !== void 0 ? _e : undefined,\n      graphicsState: graphicsStateKey\n    }));\n  };\n  /**\n   * Draw a rectangle on this page. For example:\n   * ```js\n   * import { degrees, grayscale, rgb } from 'pdf-lib'\n   *\n   * page.drawRectangle({\n   *   x: 25,\n   *   y: 75,\n   *   width: 250,\n   *   height: 75,\n   *   rotate: degrees(-15),\n   *   borderWidth: 5,\n   *   borderColor: grayscale(0.5),\n   *   color: rgb(0.75, 0.2, 0.2),\n   *   opacity: 0.5,\n   *   borderOpacity: 0.75,\n   * })\n   * ```\n   * @param options The options to be used when drawing the rectangle.\n   */\n  PDFPage.prototype.drawRectangle = function (options) {\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o;\n    if (options === void 0) {\n      options = {};\n    }\n    assertOrUndefined(options.x, 'options.x', ['number']);\n    assertOrUndefined(options.y, 'options.y', ['number']);\n    assertOrUndefined(options.width, 'options.width', ['number']);\n    assertOrUndefined(options.height, 'options.height', ['number']);\n    assertOrUndefined(options.rotate, 'options.rotate', [[Object, 'Rotation']]);\n    assertOrUndefined(options.xSkew, 'options.xSkew', [[Object, 'Rotation']]);\n    assertOrUndefined(options.ySkew, 'options.ySkew', [[Object, 'Rotation']]);\n    assertOrUndefined(options.borderWidth, 'options.borderWidth', ['number']);\n    assertOrUndefined(options.color, 'options.color', [[Object, 'Color']]);\n    assertRangeOrUndefined(options.opacity, 'opacity.opacity', 0, 1);\n    assertOrUndefined(options.borderColor, 'options.borderColor', [[Object, 'Color']]);\n    assertOrUndefined(options.borderDashArray, 'options.borderDashArray', [Array]);\n    assertOrUndefined(options.borderDashPhase, 'options.borderDashPhase', ['number']);\n    assertIsOneOfOrUndefined(options.borderLineCap, 'options.borderLineCap', LineCapStyle);\n    assertRangeOrUndefined(options.borderOpacity, 'options.borderOpacity', 0, 1);\n    assertIsOneOfOrUndefined(options.blendMode, 'options.blendMode', BlendMode);\n    var graphicsStateKey = this.maybeEmbedGraphicsState({\n      opacity: options.opacity,\n      borderOpacity: options.borderOpacity,\n      blendMode: options.blendMode\n    });\n    if (!('color' in options) && !('borderColor' in options)) {\n      options.color = rgb(0, 0, 0);\n    }\n    var contentStream = this.getContentStream();\n    contentStream.push.apply(contentStream, drawRectangle({\n      x: (_a = options.x) !== null && _a !== void 0 ? _a : this.x,\n      y: (_b = options.y) !== null && _b !== void 0 ? _b : this.y,\n      width: (_c = options.width) !== null && _c !== void 0 ? _c : 150,\n      height: (_d = options.height) !== null && _d !== void 0 ? _d : 100,\n      rotate: (_e = options.rotate) !== null && _e !== void 0 ? _e : degrees(0),\n      xSkew: (_f = options.xSkew) !== null && _f !== void 0 ? _f : degrees(0),\n      ySkew: (_g = options.ySkew) !== null && _g !== void 0 ? _g : degrees(0),\n      borderWidth: (_h = options.borderWidth) !== null && _h !== void 0 ? _h : 0,\n      color: (_j = options.color) !== null && _j !== void 0 ? _j : undefined,\n      borderColor: (_k = options.borderColor) !== null && _k !== void 0 ? _k : undefined,\n      borderDashArray: (_l = options.borderDashArray) !== null && _l !== void 0 ? _l : undefined,\n      borderDashPhase: (_m = options.borderDashPhase) !== null && _m !== void 0 ? _m : undefined,\n      graphicsState: graphicsStateKey,\n      borderLineCap: (_o = options.borderLineCap) !== null && _o !== void 0 ? _o : undefined\n    }));\n  };\n  /**\n   * Draw a square on this page. For example:\n   * ```js\n   * import { degrees, grayscale, rgb } from 'pdf-lib'\n   *\n   * page.drawSquare({\n   *   x: 25,\n   *   y: 75,\n   *   size: 100,\n   *   rotate: degrees(-15),\n   *   borderWidth: 5,\n   *   borderColor: grayscale(0.5),\n   *   color: rgb(0.75, 0.2, 0.2),\n   *   opacity: 0.5,\n   *   borderOpacity: 0.75,\n   * })\n   * ```\n   * @param options The options to be used when drawing the square.\n   */\n  PDFPage.prototype.drawSquare = function (options) {\n    if (options === void 0) {\n      options = {};\n    }\n    var size = options.size;\n    assertOrUndefined(size, 'size', ['number']);\n    this.drawRectangle(__assign(__assign({}, options), {\n      width: size,\n      height: size\n    }));\n  };\n  /**\n   * Draw an ellipse on this page. For example:\n   * ```js\n   * import { grayscale, rgb } from 'pdf-lib'\n   *\n   * page.drawEllipse({\n   *   x: 200,\n   *   y: 75,\n   *   xScale: 100,\n   *   yScale: 50,\n   *   borderWidth: 5,\n   *   borderColor: grayscale(0.5),\n   *   color: rgb(0.75, 0.2, 0.2),\n   *   opacity: 0.5,\n   *   borderOpacity: 0.75,\n   * })\n   * ```\n   * @param options The options to be used when drawing the ellipse.\n   */\n  PDFPage.prototype.drawEllipse = function (options) {\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l;\n    if (options === void 0) {\n      options = {};\n    }\n    assertOrUndefined(options.x, 'options.x', ['number']);\n    assertOrUndefined(options.y, 'options.y', ['number']);\n    assertOrUndefined(options.xScale, 'options.xScale', ['number']);\n    assertOrUndefined(options.yScale, 'options.yScale', ['number']);\n    assertOrUndefined(options.rotate, 'options.rotate', [[Object, 'Rotation']]);\n    assertOrUndefined(options.color, 'options.color', [[Object, 'Color']]);\n    assertRangeOrUndefined(options.opacity, 'opacity.opacity', 0, 1);\n    assertOrUndefined(options.borderColor, 'options.borderColor', [[Object, 'Color']]);\n    assertRangeOrUndefined(options.borderOpacity, 'options.borderOpacity', 0, 1);\n    assertOrUndefined(options.borderWidth, 'options.borderWidth', ['number']);\n    assertOrUndefined(options.borderDashArray, 'options.borderDashArray', [Array]);\n    assertOrUndefined(options.borderDashPhase, 'options.borderDashPhase', ['number']);\n    assertIsOneOfOrUndefined(options.borderLineCap, 'options.borderLineCap', LineCapStyle);\n    assertIsOneOfOrUndefined(options.blendMode, 'options.blendMode', BlendMode);\n    var graphicsStateKey = this.maybeEmbedGraphicsState({\n      opacity: options.opacity,\n      borderOpacity: options.borderOpacity,\n      blendMode: options.blendMode\n    });\n    if (!('color' in options) && !('borderColor' in options)) {\n      options.color = rgb(0, 0, 0);\n    }\n    var contentStream = this.getContentStream();\n    contentStream.push.apply(contentStream, drawEllipse({\n      x: (_a = options.x) !== null && _a !== void 0 ? _a : this.x,\n      y: (_b = options.y) !== null && _b !== void 0 ? _b : this.y,\n      xScale: (_c = options.xScale) !== null && _c !== void 0 ? _c : 100,\n      yScale: (_d = options.yScale) !== null && _d !== void 0 ? _d : 100,\n      rotate: (_e = options.rotate) !== null && _e !== void 0 ? _e : undefined,\n      color: (_f = options.color) !== null && _f !== void 0 ? _f : undefined,\n      borderColor: (_g = options.borderColor) !== null && _g !== void 0 ? _g : undefined,\n      borderWidth: (_h = options.borderWidth) !== null && _h !== void 0 ? _h : 0,\n      borderDashArray: (_j = options.borderDashArray) !== null && _j !== void 0 ? _j : undefined,\n      borderDashPhase: (_k = options.borderDashPhase) !== null && _k !== void 0 ? _k : undefined,\n      borderLineCap: (_l = options.borderLineCap) !== null && _l !== void 0 ? _l : undefined,\n      graphicsState: graphicsStateKey\n    }));\n  };\n  /**\n   * Draw a circle on this page. For example:\n   * ```js\n   * import { grayscale, rgb } from 'pdf-lib'\n   *\n   * page.drawCircle({\n   *   x: 200,\n   *   y: 150,\n   *   size: 100,\n   *   borderWidth: 5,\n   *   borderColor: grayscale(0.5),\n   *   color: rgb(0.75, 0.2, 0.2),\n   *   opacity: 0.5,\n   *   borderOpacity: 0.75,\n   * })\n   * ```\n   * @param options The options to be used when drawing the ellipse.\n   */\n  PDFPage.prototype.drawCircle = function (options) {\n    if (options === void 0) {\n      options = {};\n    }\n    var _a = options.size,\n      size = _a === void 0 ? 100 : _a;\n    assertOrUndefined(size, 'size', ['number']);\n    this.drawEllipse(__assign(__assign({}, options), {\n      xScale: size,\n      yScale: size\n    }));\n  };\n  PDFPage.prototype.setOrEmbedFont = function (font) {\n    var oldFont = this.font;\n    var oldFontKey = this.fontKey;\n    if (font) this.setFont(font);else this.getFont();\n    var newFont = this.font;\n    var newFontKey = this.fontKey;\n    return {\n      oldFont: oldFont,\n      oldFontKey: oldFontKey,\n      newFont: newFont,\n      newFontKey: newFontKey\n    };\n  };\n  PDFPage.prototype.getFont = function () {\n    if (!this.font || !this.fontKey) {\n      var font = this.doc.embedStandardFont(StandardFonts.Helvetica);\n      this.setFont(font);\n    }\n    return [this.font, this.fontKey];\n  };\n  PDFPage.prototype.resetFont = function () {\n    this.font = undefined;\n    this.fontKey = undefined;\n  };\n  PDFPage.prototype.getContentStream = function (useExisting) {\n    if (useExisting === void 0) {\n      useExisting = true;\n    }\n    if (useExisting && this.contentStream) return this.contentStream;\n    this.contentStream = this.createContentStream();\n    this.contentStreamRef = this.doc.context.register(this.contentStream);\n    this.node.addContentStream(this.contentStreamRef);\n    return this.contentStream;\n  };\n  PDFPage.prototype.createContentStream = function () {\n    var operators = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n      operators[_i] = arguments[_i];\n    }\n    var dict = this.doc.context.obj({});\n    var contentStream = PDFContentStream.of(dict, operators);\n    return contentStream;\n  };\n  PDFPage.prototype.maybeEmbedGraphicsState = function (options) {\n    var opacity = options.opacity,\n      borderOpacity = options.borderOpacity,\n      blendMode = options.blendMode;\n    if (opacity === undefined && borderOpacity === undefined && blendMode === undefined) {\n      return undefined;\n    }\n    var graphicsState = this.doc.context.obj({\n      Type: 'ExtGState',\n      ca: opacity,\n      CA: borderOpacity,\n      BM: blendMode\n    });\n    var key = this.node.newExtGState('GS', graphicsState);\n    return key;\n  };\n  PDFPage.prototype.scaleAnnot = function (annot, x, y) {\n    var selectors = ['RD', 'CL', 'Vertices', 'QuadPoints', 'L', 'Rect'];\n    for (var idx = 0, len = selectors.length; idx < len; idx++) {\n      var list = annot.lookup(PDFName.of(selectors[idx]));\n      if (list instanceof PDFArray) list.scalePDFNumbers(x, y);\n    }\n    var inkLists = annot.lookup(PDFName.of('InkList'));\n    if (inkLists instanceof PDFArray) {\n      for (var idx = 0, len = inkLists.size(); idx < len; idx++) {\n        var arr = inkLists.lookup(idx);\n        if (arr instanceof PDFArray) arr.scalePDFNumbers(x, y);\n      }\n    }\n  };\n  /**\n   * > **NOTE:** You probably don't want to call this method directly. Instead,\n   * > consider using the [[PDFDocument.addPage]] and [[PDFDocument.insertPage]]\n   * > methods, which can create instances of [[PDFPage]] for you.\n   *\n   * Create an instance of [[PDFPage]] from an existing leaf node.\n   *\n   * @param leafNode The leaf node to be wrapped.\n   * @param ref The unique reference for the page.\n   * @param doc The document to which the page will belong.\n   */\n  PDFPage.of = function (leafNode, ref, doc) {\n    return new PDFPage(leafNode, ref, doc);\n  };\n  /**\n   * > **NOTE:** You probably don't want to call this method directly. Instead,\n   * > consider using the [[PDFDocument.addPage]] and [[PDFDocument.insertPage]]\n   * > methods, which can create instances of [[PDFPage]] for you.\n   *\n   * Create an instance of [[PDFPage]].\n   *\n   * @param doc The document to which the page will belong.\n   */\n  PDFPage.create = function (doc) {\n    assertIs(doc, 'doc', [[PDFDocument, 'PDFDocument']]);\n    var dummyRef = PDFRef.of(-1);\n    var pageLeaf = PDFPageLeaf.withContextAndParent(doc.context, dummyRef);\n    var pageRef = doc.context.register(pageLeaf);\n    return new PDFPage(pageLeaf, pageRef, doc);\n  };\n  return PDFPage;\n}();\nexport default PDFPage;","map":{"version":3,"mappings":"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","names":["rgb","drawImage","drawLine","drawLinesOfText","drawPage","drawRectangle","drawSvgPath","drawEllipse","popGraphicsState","pushGraphicsState","translate","LineCapStyle","scale","PDFDocument","PDFEmbeddedPage","PDFFont","PDFImage","BlendMode","degrees","toDegrees","StandardFonts","PDFContentStream","PDFName","PDFOperator","PDFPageLeaf","PDFRef","PDFDict","PDFArray","assertEachIs","assertIs","assertMultiple","assertOrUndefined","breakTextIntoLines","cleanText","rectanglesAreEqual","lineSplit","assertRangeOrUndefined","assertIsOneOfOrUndefined","leafNode","ref","doc","node","PDFPage","angle","degreesAngle","set","of","context","obj","Rotate","asNumber","width","height","mediaBox","getMediaBox","setMediaBox","x","y","cropBox","getCropBox","bleedBox","getBleedBox","trimBox","getTrimBox","artBox","getArtBox","hasCropBox","CropBox","hasBleedBox","BleedBox","hasTrimBox","TrimBox","hasArtBox","ArtBox","setCropBox","setBleedBox","setTrimBox","setArtBox","setSize","getSize","MediaBox","asRectangle","normalize","getContentStream","start","createContentStream","startRef","register","end","endRef","wrapContentStreams","getWidth","getHeight","scaleContent","scaleAnnotations","annots","Annots","idx","size","annot","lookup","scaleAnnot","font","fontKey","newFontDictionary","name","fontSize","fontColor","Object","lineHeight","yDecrease","yIncrease","xDecrease","xIncrease","_i","operator","contentStream","push","text","options","color","opacity","rotate","xSkew","ySkew","maxWidth","wordBreaks","Array","blendMode","setOrEmbedFont","oldFont","newFont","newFontKey","defaultWordBreaks","textWidth","t","widthOfTextAtSize","lines","undefined","encodedLines","length","len","encodeText","graphicsStateKey","maybeEmbedGraphicsState","graphicsState","setFont","resetFont","image","xObjectKey","newXObject","embeddedPage","xScale","yScale","path","borderWidth","borderColor","borderDashArray","borderDashPhase","borderLineCap","borderOpacity","thickness","dashArray","dashPhase","lineCap","oldFontKey","getFont","embedStandardFont","Helvetica","useExisting","contentStreamRef","addContentStream","operators","dict","Type","ca","CA","BM","key","newExtGState","selectors","list","scalePDFNumbers","inkLists","arr","dummyRef","pageLeaf","withContextAndParent","pageRef"],"sourceRoot":"","sources":["../../src/api/PDFPage.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}