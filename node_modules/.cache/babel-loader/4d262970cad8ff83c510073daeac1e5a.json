{"ast":null,"code":"/*\n * Copyright 2012 Mozilla Foundation\n *\n * The AsciiHexStream class contained in this file is a TypeScript port of the\n * JavaScript AsciiHexStream class in Mozilla's pdf.js project, made available\n * under the Apache 2.0 open source license.\n */\nimport { __extends } from \"tslib\";\nimport DecodeStream from \"./DecodeStream\";\nvar AsciiHexStream = /** @class */function (_super) {\n  __extends(AsciiHexStream, _super);\n  function AsciiHexStream(stream, maybeLength) {\n    var _this = _super.call(this, maybeLength) || this;\n    _this.stream = stream;\n    _this.firstDigit = -1;\n    // Most streams increase in size when decoded, but AsciiHex streams shrink\n    // by 50%.\n    if (maybeLength) {\n      maybeLength = 0.5 * maybeLength;\n    }\n    return _this;\n  }\n  AsciiHexStream.prototype.readBlock = function () {\n    var UPSTREAM_BLOCK_SIZE = 8000;\n    var bytes = this.stream.getBytes(UPSTREAM_BLOCK_SIZE);\n    if (!bytes.length) {\n      this.eof = true;\n      return;\n    }\n    var maxDecodeLength = bytes.length + 1 >> 1;\n    var buffer = this.ensureBuffer(this.bufferLength + maxDecodeLength);\n    var bufferLength = this.bufferLength;\n    var firstDigit = this.firstDigit;\n    for (var i = 0, ii = bytes.length; i < ii; i++) {\n      var ch = bytes[i];\n      var digit = void 0;\n      if (ch >= 0x30 && ch <= 0x39) {\n        // '0'-'9'\n        digit = ch & 0x0f;\n      } else if (ch >= 0x41 && ch <= 0x46 || ch >= 0x61 && ch <= 0x66) {\n        // 'A'-'Z', 'a'-'z'\n        digit = (ch & 0x0f) + 9;\n      } else if (ch === 0x3e) {\n        // '>'\n        this.eof = true;\n        break;\n      } else {\n        // probably whitespace\n        continue; // ignoring\n      }\n\n      if (firstDigit < 0) {\n        firstDigit = digit;\n      } else {\n        buffer[bufferLength++] = firstDigit << 4 | digit;\n        firstDigit = -1;\n      }\n    }\n    if (firstDigit >= 0 && this.eof) {\n      // incomplete byte\n      buffer[bufferLength++] = firstDigit << 4;\n      firstDigit = -1;\n    }\n    this.firstDigit = firstDigit;\n    this.bufferLength = bufferLength;\n  };\n  return AsciiHexStream;\n}(DecodeStream);\nexport default AsciiHexStream;","map":{"version":3,"mappings":"AAAA;;;;;;;;AAQA,OAAOA,YAAY;AAGnB;EAA6BC;EAI3B,wBAAYC,MAAkB,EAAEC,WAAoB;IAApD,YACEC,kBAAMD,WAAW,CAAC;IAElBE,KAAI,CAACH,MAAM,GAAGA,MAAM;IAEpBG,KAAI,CAACC,UAAU,GAAG,CAAC,CAAC;IAEpB;IACA;IACA,IAAIH,WAAW,EAAE;MACfA,WAAW,GAAG,GAAG,GAAGA,WAAW;;;EAEnC;EAEUI,kCAAS,GAAnB;IACE,IAAMC,mBAAmB,GAAG,IAAI;IAChC,IAAMC,KAAK,GAAG,IAAI,CAACP,MAAM,CAACQ,QAAQ,CAACF,mBAAmB,CAAC;IACvD,IAAI,CAACC,KAAK,CAACE,MAAM,EAAE;MACjB,IAAI,CAACC,GAAG,GAAG,IAAI;MACf;;IAGF,IAAMC,eAAe,GAAIJ,KAAK,CAACE,MAAM,GAAG,CAAC,IAAK,CAAC;IAC/C,IAAMG,MAAM,GAAG,IAAI,CAACC,YAAY,CAAC,IAAI,CAACC,YAAY,GAAGH,eAAe,CAAC;IACrE,IAAIG,YAAY,GAAG,IAAI,CAACA,YAAY;IAEpC,IAAIV,UAAU,GAAG,IAAI,CAACA,UAAU;IAChC,KAAK,IAAIW,CAAC,GAAG,CAAC,EAAEC,EAAE,GAAGT,KAAK,CAACE,MAAM,EAAEM,CAAC,GAAGC,EAAE,EAAED,CAAC,EAAE,EAAE;MAC9C,IAAME,EAAE,GAAGV,KAAK,CAACQ,CAAC,CAAC;MACnB,IAAIG,KAAK;MACT,IAAID,EAAE,IAAI,IAAI,IAAIA,EAAE,IAAI,IAAI,EAAE;QAC5B;QACAC,KAAK,GAAGD,EAAE,GAAG,IAAI;OAClB,MAAM,IAAKA,EAAE,IAAI,IAAI,IAAIA,EAAE,IAAI,IAAI,IAAMA,EAAE,IAAI,IAAI,IAAIA,EAAE,IAAI,IAAK,EAAE;QACnE;QACAC,KAAK,GAAG,CAACD,EAAE,GAAG,IAAI,IAAI,CAAC;OACxB,MAAM,IAAIA,EAAE,KAAK,IAAI,EAAE;QACtB;QACA,IAAI,CAACP,GAAG,GAAG,IAAI;QACf;OACD,MAAM;QACL;QACA,SAAS,CAAC;;;MAEZ,IAAIN,UAAU,GAAG,CAAC,EAAE;QAClBA,UAAU,GAAGc,KAAK;OACnB,MAAM;QACLN,MAAM,CAACE,YAAY,EAAE,CAAC,GAAIV,UAAU,IAAI,CAAC,GAAIc,KAAK;QAClDd,UAAU,GAAG,CAAC,CAAC;;;IAGnB,IAAIA,UAAU,IAAI,CAAC,IAAI,IAAI,CAACM,GAAG,EAAE;MAC/B;MACAE,MAAM,CAACE,YAAY,EAAE,CAAC,GAAGV,UAAU,IAAI,CAAC;MACxCA,UAAU,GAAG,CAAC,CAAC;;IAEjB,IAAI,CAACA,UAAU,GAAGA,UAAU;IAC5B,IAAI,CAACU,YAAY,GAAGA,YAAY;EAClC,CAAC;EACH,qBAAC;AAAD,CAAC,CA/D4BhB,YAAY;AAiEzC,eAAeO,cAAc","names":["DecodeStream","__extends","stream","maybeLength","_super","_this","firstDigit","AsciiHexStream","UPSTREAM_BLOCK_SIZE","bytes","getBytes","length","eof","maxDecodeLength","buffer","ensureBuffer","bufferLength","i","ii","ch","digit"],"sourceRoot":"","sources":["../../../src/core/streams/AsciiHexStream.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}