{"ast":null,"code":"import _objectWithoutProperties from \"C:/Users/sulli/Git/GeoWeb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _toConsumableArray from \"C:/Users/sulli/Git/GeoWeb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"C:/Users/sulli/Git/GeoWeb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _defineProperty from \"C:/Users/sulli/Git/GeoWeb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"C:/Users/sulli/Git/GeoWeb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _asyncToGenerator from \"C:/Users/sulli/Git/GeoWeb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nfunction getAlignment(placement) {\n  return placement.split('-')[1];\n}\nfunction getLengthFromAxis(axis) {\n  return axis === 'y' ? 'height' : 'width';\n}\nfunction getSide(placement) {\n  return placement.split('-')[0];\n}\nfunction getMainAxisFromPlacement(placement) {\n  return ['top', 'bottom'].includes(getSide(placement)) ? 'x' : 'y';\n}\nfunction computeCoordsFromPlacement(_ref, placement, rtl) {\n  var reference = _ref.reference,\n    floating = _ref.floating;\n  var commonX = reference.x + reference.width / 2 - floating.width / 2;\n  var commonY = reference.y + reference.height / 2 - floating.height / 2;\n  var mainAxis = getMainAxisFromPlacement(placement);\n  var length = getLengthFromAxis(mainAxis);\n  var commonAlign = reference[length] / 2 - floating[length] / 2;\n  var side = getSide(placement);\n  var isVertical = mainAxis === 'x';\n  var coords;\n  switch (side) {\n    case 'top':\n      coords = {\n        x: commonX,\n        y: reference.y - floating.height\n      };\n      break;\n    case 'bottom':\n      coords = {\n        x: commonX,\n        y: reference.y + reference.height\n      };\n      break;\n    case 'right':\n      coords = {\n        x: reference.x + reference.width,\n        y: commonY\n      };\n      break;\n    case 'left':\n      coords = {\n        x: reference.x - floating.width,\n        y: commonY\n      };\n      break;\n    default:\n      coords = {\n        x: reference.x,\n        y: reference.y\n      };\n  }\n  switch (getAlignment(placement)) {\n    case 'start':\n      coords[mainAxis] -= commonAlign * (rtl && isVertical ? -1 : 1);\n      break;\n    case 'end':\n      coords[mainAxis] += commonAlign * (rtl && isVertical ? -1 : 1);\n      break;\n  }\n  return coords;\n}\n\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a reference element when it is given a certain positioning strategy.\n *\n * This export does not have any `platform` interface logic. You will need to\n * write one for the platform you are using Floating UI with.\n */\nvar computePosition = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(reference, floating, config) {\n    var _config$placement, placement, _config$strategy, strategy, _config$middleware, middleware, platform, validMiddleware, rtl, rects, _computeCoordsFromPla, x, y, statefulPlacement, middlewareData, resetCount, i, _validMiddleware$i, name, fn, _yield$fn, nextX, nextY, data, reset, _computeCoordsFromPla2;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _config$placement = config.placement, placement = _config$placement === void 0 ? 'bottom' : _config$placement, _config$strategy = config.strategy, strategy = _config$strategy === void 0 ? 'absolute' : _config$strategy, _config$middleware = config.middleware, middleware = _config$middleware === void 0 ? [] : _config$middleware, platform = config.platform;\n            validMiddleware = middleware.filter(Boolean);\n            _context.next = 4;\n            return platform.isRTL == null ? void 0 : platform.isRTL(floating);\n          case 4:\n            rtl = _context.sent;\n            _context.next = 7;\n            return platform.getElementRects({\n              reference: reference,\n              floating: floating,\n              strategy: strategy\n            });\n          case 7:\n            rects = _context.sent;\n            _computeCoordsFromPla = computeCoordsFromPlacement(rects, placement, rtl), x = _computeCoordsFromPla.x, y = _computeCoordsFromPla.y;\n            statefulPlacement = placement;\n            middlewareData = {};\n            resetCount = 0;\n            i = 0;\n          case 13:\n            if (!(i < validMiddleware.length)) {\n              _context.next = 46;\n              break;\n            }\n            _validMiddleware$i = validMiddleware[i], name = _validMiddleware$i.name, fn = _validMiddleware$i.fn;\n            _context.next = 17;\n            return fn({\n              x: x,\n              y: y,\n              initialPlacement: placement,\n              placement: statefulPlacement,\n              strategy: strategy,\n              middlewareData: middlewareData,\n              rects: rects,\n              platform: platform,\n              elements: {\n                reference: reference,\n                floating: floating\n              }\n            });\n          case 17:\n            _yield$fn = _context.sent;\n            nextX = _yield$fn.x;\n            nextY = _yield$fn.y;\n            data = _yield$fn.data;\n            reset = _yield$fn.reset;\n            x = nextX != null ? nextX : x;\n            y = nextY != null ? nextY : y;\n            middlewareData = _objectSpread(_objectSpread({}, middlewareData), {}, _defineProperty({}, name, _objectSpread(_objectSpread({}, middlewareData[name]), data)));\n            if (!(reset && resetCount <= 50)) {\n              _context.next = 43;\n              break;\n            }\n            resetCount++;\n            if (!(typeof reset === 'object')) {\n              _context.next = 41;\n              break;\n            }\n            if (reset.placement) {\n              statefulPlacement = reset.placement;\n            }\n            if (!reset.rects) {\n              _context.next = 38;\n              break;\n            }\n            if (!(reset.rects === true)) {\n              _context.next = 36;\n              break;\n            }\n            _context.next = 33;\n            return platform.getElementRects({\n              reference: reference,\n              floating: floating,\n              strategy: strategy\n            });\n          case 33:\n            _context.t0 = _context.sent;\n            _context.next = 37;\n            break;\n          case 36:\n            _context.t0 = reset.rects;\n          case 37:\n            rects = _context.t0;\n          case 38:\n            _computeCoordsFromPla2 = computeCoordsFromPlacement(rects, statefulPlacement, rtl);\n            x = _computeCoordsFromPla2.x;\n            y = _computeCoordsFromPla2.y;\n          case 41:\n            i = -1;\n            return _context.abrupt(\"continue\", 43);\n          case 43:\n            i++;\n            _context.next = 13;\n            break;\n          case 46:\n            return _context.abrupt(\"return\", {\n              x: x,\n              y: y,\n              placement: statefulPlacement,\n              strategy: strategy,\n              middlewareData: middlewareData\n            });\n          case 47:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return function computePosition(_x, _x2, _x3) {\n    return _ref2.apply(this, arguments);\n  };\n}();\nfunction expandPaddingObject(padding) {\n  return _objectSpread({\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0\n  }, padding);\n}\nfunction getSideObjectFromPadding(padding) {\n  return typeof padding !== 'number' ? expandPaddingObject(padding) : {\n    top: padding,\n    right: padding,\n    bottom: padding,\n    left: padding\n  };\n}\nfunction rectToClientRect(rect) {\n  return _objectSpread(_objectSpread({}, rect), {}, {\n    top: rect.y,\n    left: rect.x,\n    right: rect.x + rect.width,\n    bottom: rect.y + rect.height\n  });\n}\n\n/**\n * Resolves with an object of overflow side offsets that determine how much the\n * element is overflowing a given clipping boundary on each side.\n * - positive = overflowing the boundary by that number of pixels\n * - negative = how many pixels left before it will overflow\n * - 0 = lies flush with the boundary\n * @see https://floating-ui.com/docs/detectOverflow\n */\nfunction detectOverflow(_x4, _x5) {\n  return _detectOverflow.apply(this, arguments);\n}\nfunction _detectOverflow() {\n  _detectOverflow = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee10(state, options) {\n    var _await$platform$isEle, x, y, platform, rects, elements, strategy, _options8, _options8$boundary, boundary, _options8$rootBoundar, rootBoundary, _options8$elementCont, elementContext, _options8$altBoundary, altBoundary, _options8$padding, padding, paddingObject, altContext, element, clippingClientRect, rect, offsetParent, offsetScale, elementClientRect;\n    return _regeneratorRuntime.wrap(function _callee10$(_context10) {\n      while (1) {\n        switch (_context10.prev = _context10.next) {\n          case 0:\n            if (options === void 0) {\n              options = {};\n            }\n            x = state.x, y = state.y, platform = state.platform, rects = state.rects, elements = state.elements, strategy = state.strategy;\n            _options8 = options, _options8$boundary = _options8.boundary, boundary = _options8$boundary === void 0 ? 'clippingAncestors' : _options8$boundary, _options8$rootBoundar = _options8.rootBoundary, rootBoundary = _options8$rootBoundar === void 0 ? 'viewport' : _options8$rootBoundar, _options8$elementCont = _options8.elementContext, elementContext = _options8$elementCont === void 0 ? 'floating' : _options8$elementCont, _options8$altBoundary = _options8.altBoundary, altBoundary = _options8$altBoundary === void 0 ? false : _options8$altBoundary, _options8$padding = _options8.padding, padding = _options8$padding === void 0 ? 0 : _options8$padding;\n            paddingObject = getSideObjectFromPadding(padding);\n            altContext = elementContext === 'floating' ? 'reference' : 'floating';\n            element = elements[altBoundary ? altContext : elementContext];\n            _context10.t0 = rectToClientRect;\n            _context10.t1 = platform;\n            _context10.next = 10;\n            return platform.isElement == null ? void 0 : platform.isElement(element);\n          case 10:\n            _context10.t2 = _await$platform$isEle = _context10.sent;\n            if (!(_context10.t2 != null)) {\n              _context10.next = 15;\n              break;\n            }\n            _context10.t3 = _await$platform$isEle;\n            _context10.next = 16;\n            break;\n          case 15:\n            _context10.t3 = true;\n          case 16:\n            if (!_context10.t3) {\n              _context10.next = 20;\n              break;\n            }\n            _context10.t4 = element;\n            _context10.next = 26;\n            break;\n          case 20:\n            _context10.t5 = element.contextElement;\n            if (_context10.t5) {\n              _context10.next = 25;\n              break;\n            }\n            _context10.next = 24;\n            return platform.getDocumentElement == null ? void 0 : platform.getDocumentElement(elements.floating);\n          case 24:\n            _context10.t5 = _context10.sent;\n          case 25:\n            _context10.t4 = _context10.t5;\n          case 26:\n            _context10.t6 = _context10.t4;\n            _context10.t7 = boundary;\n            _context10.t8 = rootBoundary;\n            _context10.t9 = strategy;\n            _context10.t10 = {\n              element: _context10.t6,\n              boundary: _context10.t7,\n              rootBoundary: _context10.t8,\n              strategy: _context10.t9\n            };\n            _context10.next = 33;\n            return _context10.t1.getClippingRect.call(_context10.t1, _context10.t10);\n          case 33:\n            _context10.t11 = _context10.sent;\n            clippingClientRect = (0, _context10.t0)(_context10.t11);\n            rect = elementContext === 'floating' ? _objectSpread(_objectSpread({}, rects.floating), {}, {\n              x: x,\n              y: y\n            }) : rects.reference;\n            _context10.next = 38;\n            return platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(elements.floating);\n          case 38:\n            offsetParent = _context10.sent;\n            _context10.next = 41;\n            return platform.isElement == null ? void 0 : platform.isElement(offsetParent);\n          case 41:\n            if (!_context10.sent) {\n              _context10.next = 50;\n              break;\n            }\n            _context10.next = 44;\n            return platform.getScale == null ? void 0 : platform.getScale(offsetParent);\n          case 44:\n            _context10.t13 = _context10.sent;\n            if (_context10.t13) {\n              _context10.next = 47;\n              break;\n            }\n            _context10.t13 = {\n              x: 1,\n              y: 1\n            };\n          case 47:\n            _context10.t12 = _context10.t13;\n            _context10.next = 51;\n            break;\n          case 50:\n            _context10.t12 = {\n              x: 1,\n              y: 1\n            };\n          case 51:\n            offsetScale = _context10.t12;\n            _context10.t14 = rectToClientRect;\n            if (!platform.convertOffsetParentRelativeRectToViewportRelativeRect) {\n              _context10.next = 59;\n              break;\n            }\n            _context10.next = 56;\n            return platform.convertOffsetParentRelativeRectToViewportRelativeRect({\n              rect: rect,\n              offsetParent: offsetParent,\n              strategy: strategy\n            });\n          case 56:\n            _context10.t15 = _context10.sent;\n            _context10.next = 60;\n            break;\n          case 59:\n            _context10.t15 = rect;\n          case 60:\n            _context10.t16 = _context10.t15;\n            elementClientRect = (0, _context10.t14)(_context10.t16);\n            return _context10.abrupt(\"return\", {\n              top: (clippingClientRect.top - elementClientRect.top + paddingObject.top) / offsetScale.y,\n              bottom: (elementClientRect.bottom - clippingClientRect.bottom + paddingObject.bottom) / offsetScale.y,\n              left: (clippingClientRect.left - elementClientRect.left + paddingObject.left) / offsetScale.x,\n              right: (elementClientRect.right - clippingClientRect.right + paddingObject.right) / offsetScale.x\n            });\n          case 63:\n          case \"end\":\n            return _context10.stop();\n        }\n      }\n    }, _callee10);\n  }));\n  return _detectOverflow.apply(this, arguments);\n}\nvar min = Math.min;\nvar max = Math.max;\nfunction within(min$1, value, max$1) {\n  return max(min$1, min(value, max$1));\n}\n\n/**\n * Provides data to position an inner element of the floating element so that it\n * appears centered to the reference element.\n * @see https://floating-ui.com/docs/arrow\n */\nvar arrow = function arrow(options) {\n  return {\n    name: 'arrow',\n    options: options,\n    fn: function fn(state) {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var _data, _ref4;\n        var _ref3, element, _ref3$padding, padding, x, y, placement, rects, platform, elements, paddingObject, coords, axis, length, arrowDimensions, isYAxis, minProp, maxProp, clientProp, endDiff, startDiff, arrowOffsetParent, clientSize, centerToReference, min, max, center, offset, shouldAddOffset, alignmentOffset;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                // Since `element` is required, we don't Partial<> the type.\n                _ref3 = options || {}, element = _ref3.element, _ref3$padding = _ref3.padding, padding = _ref3$padding === void 0 ? 0 : _ref3$padding;\n                x = state.x, y = state.y, placement = state.placement, rects = state.rects, platform = state.platform, elements = state.elements;\n                if (!(element == null)) {\n                  _context2.next = 4;\n                  break;\n                }\n                return _context2.abrupt(\"return\", {});\n              case 4:\n                paddingObject = getSideObjectFromPadding(padding);\n                coords = {\n                  x: x,\n                  y: y\n                };\n                axis = getMainAxisFromPlacement(placement);\n                length = getLengthFromAxis(axis);\n                _context2.next = 10;\n                return platform.getDimensions(element);\n              case 10:\n                arrowDimensions = _context2.sent;\n                isYAxis = axis === 'y';\n                minProp = isYAxis ? 'top' : 'left';\n                maxProp = isYAxis ? 'bottom' : 'right';\n                clientProp = isYAxis ? 'clientHeight' : 'clientWidth';\n                endDiff = rects.reference[length] + rects.reference[axis] - coords[axis] - rects.floating[length];\n                startDiff = coords[axis] - rects.reference[axis];\n                _context2.next = 19;\n                return platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(element);\n              case 19:\n                arrowOffsetParent = _context2.sent;\n                clientSize = arrowOffsetParent ? arrowOffsetParent[clientProp] : 0; // DOM platform can return `window` as the `offsetParent`.\n                _context2.t0 = !clientSize;\n                if (_context2.t0) {\n                  _context2.next = 26;\n                  break;\n                }\n                _context2.next = 25;\n                return platform.isElement == null ? void 0 : platform.isElement(arrowOffsetParent);\n              case 25:\n                _context2.t0 = !_context2.sent;\n              case 26:\n                if (!_context2.t0) {\n                  _context2.next = 28;\n                  break;\n                }\n                clientSize = elements.floating[clientProp] || rects.floating[length];\n              case 28:\n                centerToReference = endDiff / 2 - startDiff / 2; // Make sure the arrow doesn't overflow the floating element if the center\n                // point is outside the floating element's bounds.\n                min = paddingObject[minProp];\n                max = clientSize - arrowDimensions[length] - paddingObject[maxProp];\n                center = clientSize / 2 - arrowDimensions[length] / 2 + centerToReference;\n                offset = within(min, center, max); // If the reference is small enough that the arrow's padding causes it to\n                // to point to nothing for an aligned placement, adjust the offset of the\n                // floating element itself. This stops `shift()` from taking action, but can\n                // be worked around by calling it again after the `arrow()` if desired.\n                shouldAddOffset = getAlignment(placement) != null && center != offset && rects.reference[length] / 2 - (center < min ? paddingObject[minProp] : paddingObject[maxProp]) - arrowDimensions[length] / 2 < 0;\n                alignmentOffset = shouldAddOffset ? center < min ? min - center : max - center : 0;\n                return _context2.abrupt(\"return\", (_ref4 = {}, _defineProperty(_ref4, axis, coords[axis] - alignmentOffset), _defineProperty(_ref4, \"data\", (_data = {}, _defineProperty(_data, axis, offset), _defineProperty(_data, \"centerOffset\", center - offset), _data)), _ref4));\n              case 36:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }))();\n    }\n  };\n};\nvar sides = ['top', 'right', 'bottom', 'left'];\nvar allPlacements = /*#__PURE__*/sides.reduce(function (acc, side) {\n  return acc.concat(side, side + \"-start\", side + \"-end\");\n}, []);\nvar oppositeSideMap = {\n  left: 'right',\n  right: 'left',\n  bottom: 'top',\n  top: 'bottom'\n};\nfunction getOppositePlacement(placement) {\n  return placement.replace(/left|right|bottom|top/g, function (side) {\n    return oppositeSideMap[side];\n  });\n}\nfunction getAlignmentSides(placement, rects, rtl) {\n  if (rtl === void 0) {\n    rtl = false;\n  }\n  var alignment = getAlignment(placement);\n  var mainAxis = getMainAxisFromPlacement(placement);\n  var length = getLengthFromAxis(mainAxis);\n  var mainAlignmentSide = mainAxis === 'x' ? alignment === (rtl ? 'end' : 'start') ? 'right' : 'left' : alignment === 'start' ? 'bottom' : 'top';\n  if (rects.reference[length] > rects.floating[length]) {\n    mainAlignmentSide = getOppositePlacement(mainAlignmentSide);\n  }\n  return {\n    main: mainAlignmentSide,\n    cross: getOppositePlacement(mainAlignmentSide)\n  };\n}\nvar oppositeAlignmentMap = {\n  start: 'end',\n  end: 'start'\n};\nfunction getOppositeAlignmentPlacement(placement) {\n  return placement.replace(/start|end/g, function (alignment) {\n    return oppositeAlignmentMap[alignment];\n  });\n}\nfunction getPlacementList(alignment, autoAlignment, allowedPlacements) {\n  var allowedPlacementsSortedByAlignment = alignment ? [].concat(_toConsumableArray(allowedPlacements.filter(function (placement) {\n    return getAlignment(placement) === alignment;\n  })), _toConsumableArray(allowedPlacements.filter(function (placement) {\n    return getAlignment(placement) !== alignment;\n  }))) : allowedPlacements.filter(function (placement) {\n    return getSide(placement) === placement;\n  });\n  return allowedPlacementsSortedByAlignment.filter(function (placement) {\n    if (alignment) {\n      return getAlignment(placement) === alignment || (autoAlignment ? getOppositeAlignmentPlacement(placement) !== placement : false);\n    }\n    return true;\n  });\n}\n/**\n * Optimizes the visibility of the floating element by choosing the placement\n * that has the most space available automatically, without needing to specify a\n * preferred placement. Alternative to `flip`.\n * @see https://floating-ui.com/docs/autoPlacement\n */\nvar autoPlacement = function autoPlacement(options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'autoPlacement',\n    options: options,\n    fn: function fn(state) {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        var _middlewareData$autoP, _middlewareData$autoP2, _placementsThatFitOnE, rects, middlewareData, placement, platform, elements, _options, _options$crossAxis, crossAxis, alignment, _options$allowedPlace, allowedPlacements, _options$autoAlignmen, autoAlignment, detectOverflowOptions, placements, overflow, currentIndex, currentPlacement, _getAlignmentSides, main, cross, currentOverflows, allOverflows, nextPlacement, placementsSortedByMostSpace, placementsThatFitOnEachSide, resetPlacement;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                rects = state.rects, middlewareData = state.middlewareData, placement = state.placement, platform = state.platform, elements = state.elements;\n                _options = options, _options$crossAxis = _options.crossAxis, crossAxis = _options$crossAxis === void 0 ? false : _options$crossAxis, alignment = _options.alignment, _options$allowedPlace = _options.allowedPlacements, allowedPlacements = _options$allowedPlace === void 0 ? allPlacements : _options$allowedPlace, _options$autoAlignmen = _options.autoAlignment, autoAlignment = _options$autoAlignmen === void 0 ? true : _options$autoAlignmen, detectOverflowOptions = _objectWithoutProperties(_options, [\"crossAxis\", \"alignment\", \"allowedPlacements\", \"autoAlignment\"]);\n                placements = alignment !== undefined || allowedPlacements === allPlacements ? getPlacementList(alignment || null, autoAlignment, allowedPlacements) : allowedPlacements;\n                _context3.next = 5;\n                return detectOverflow(state, detectOverflowOptions);\n              case 5:\n                overflow = _context3.sent;\n                currentIndex = ((_middlewareData$autoP = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP.index) || 0;\n                currentPlacement = placements[currentIndex];\n                if (!(currentPlacement == null)) {\n                  _context3.next = 10;\n                  break;\n                }\n                return _context3.abrupt(\"return\", {});\n              case 10:\n                _context3.t0 = getAlignmentSides;\n                _context3.t1 = currentPlacement;\n                _context3.t2 = rects;\n                _context3.next = 15;\n                return platform.isRTL == null ? void 0 : platform.isRTL(elements.floating);\n              case 15:\n                _context3.t3 = _context3.sent;\n                _getAlignmentSides = (0, _context3.t0)(_context3.t1, _context3.t2, _context3.t3);\n                main = _getAlignmentSides.main;\n                cross = _getAlignmentSides.cross;\n                if (!(placement !== currentPlacement)) {\n                  _context3.next = 21;\n                  break;\n                }\n                return _context3.abrupt(\"return\", {\n                  reset: {\n                    placement: placements[0]\n                  }\n                });\n              case 21:\n                currentOverflows = [overflow[getSide(currentPlacement)], overflow[main], overflow[cross]];\n                allOverflows = [].concat(_toConsumableArray(((_middlewareData$autoP2 = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP2.overflows) || []), [{\n                  placement: currentPlacement,\n                  overflows: currentOverflows\n                }]);\n                nextPlacement = placements[currentIndex + 1]; // There are more placements to check.\n                if (!nextPlacement) {\n                  _context3.next = 26;\n                  break;\n                }\n                return _context3.abrupt(\"return\", {\n                  data: {\n                    index: currentIndex + 1,\n                    overflows: allOverflows\n                  },\n                  reset: {\n                    placement: nextPlacement\n                  }\n                });\n              case 26:\n                placementsSortedByMostSpace = allOverflows.map(function (d) {\n                  var alignment = getAlignment(d.placement);\n                  return [d.placement, alignment && crossAxis ?\n                  // Check along the mainAxis and main crossAxis side.\n                  d.overflows.slice(0, 2).reduce(function (acc, v) {\n                    return acc + v;\n                  }, 0) :\n                  // Check only the mainAxis.\n                  d.overflows[0], d.overflows];\n                }).sort(function (a, b) {\n                  return a[1] - b[1];\n                });\n                placementsThatFitOnEachSide = placementsSortedByMostSpace.filter(function (d) {\n                  return d[2].slice(0,\n                  // Aligned placements should not check their opposite crossAxis\n                  // side.\n                  getAlignment(d[0]) ? 2 : 3).every(function (v) {\n                    return v <= 0;\n                  });\n                });\n                resetPlacement = ((_placementsThatFitOnE = placementsThatFitOnEachSide[0]) == null ? void 0 : _placementsThatFitOnE[0]) || placementsSortedByMostSpace[0][0];\n                if (!(resetPlacement !== placement)) {\n                  _context3.next = 31;\n                  break;\n                }\n                return _context3.abrupt(\"return\", {\n                  data: {\n                    index: currentIndex + 1,\n                    overflows: allOverflows\n                  },\n                  reset: {\n                    placement: resetPlacement\n                  }\n                });\n              case 31:\n                return _context3.abrupt(\"return\", {});\n              case 32:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }))();\n    }\n  };\n};\nfunction getExpandedPlacements(placement) {\n  var oppositePlacement = getOppositePlacement(placement);\n  return [getOppositeAlignmentPlacement(placement), oppositePlacement, getOppositeAlignmentPlacement(oppositePlacement)];\n}\nfunction getSideList(side, isStart, rtl) {\n  var lr = ['left', 'right'];\n  var rl = ['right', 'left'];\n  var tb = ['top', 'bottom'];\n  var bt = ['bottom', 'top'];\n  switch (side) {\n    case 'top':\n    case 'bottom':\n      if (rtl) return isStart ? rl : lr;\n      return isStart ? lr : rl;\n    case 'left':\n    case 'right':\n      return isStart ? tb : bt;\n    default:\n      return [];\n  }\n}\nfunction getOppositeAxisPlacements(placement, flipAlignment, direction, rtl) {\n  var alignment = getAlignment(placement);\n  var list = getSideList(getSide(placement), direction === 'start', rtl);\n  if (alignment) {\n    list = list.map(function (side) {\n      return side + \"-\" + alignment;\n    });\n    if (flipAlignment) {\n      list = list.concat(list.map(getOppositeAlignmentPlacement));\n    }\n  }\n  return list;\n}\n\n/**\n * Optimizes the visibility of the floating element by flipping the `placement`\n * in order to keep it in view when the preferred placement(s) will overflow the\n * clipping boundary. Alternative to `autoPlacement`.\n * @see https://floating-ui.com/docs/flip\n */\nvar flip = function flip(options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'flip',\n    options: options,\n    fn: function fn(state) {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n        var _middlewareData$flip, placement, middlewareData, rects, initialPlacement, platform, elements, _options2, _options2$mainAxis, checkMainAxis, _options2$crossAxis, checkCrossAxis, specifiedFallbackPlacements, _options2$fallbackStr, fallbackStrategy, _options2$fallbackAxi, fallbackAxisSideDirection, _options2$flipAlignme, flipAlignment, detectOverflowOptions, side, isBasePlacement, rtl, fallbackPlacements, placements, overflow, overflows, overflowsData, _getAlignmentSides2, main, cross, _middlewareData$flip2, _overflowsData$filter, nextIndex, nextPlacement, resetPlacement, _overflowsData$map$so, _placement;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                placement = state.placement, middlewareData = state.middlewareData, rects = state.rects, initialPlacement = state.initialPlacement, platform = state.platform, elements = state.elements;\n                _options2 = options, _options2$mainAxis = _options2.mainAxis, checkMainAxis = _options2$mainAxis === void 0 ? true : _options2$mainAxis, _options2$crossAxis = _options2.crossAxis, checkCrossAxis = _options2$crossAxis === void 0 ? true : _options2$crossAxis, specifiedFallbackPlacements = _options2.fallbackPlacements, _options2$fallbackStr = _options2.fallbackStrategy, fallbackStrategy = _options2$fallbackStr === void 0 ? 'bestFit' : _options2$fallbackStr, _options2$fallbackAxi = _options2.fallbackAxisSideDirection, fallbackAxisSideDirection = _options2$fallbackAxi === void 0 ? 'none' : _options2$fallbackAxi, _options2$flipAlignme = _options2.flipAlignment, flipAlignment = _options2$flipAlignme === void 0 ? true : _options2$flipAlignme, detectOverflowOptions = _objectWithoutProperties(_options2, [\"mainAxis\", \"crossAxis\", \"fallbackPlacements\", \"fallbackStrategy\", \"fallbackAxisSideDirection\", \"flipAlignment\"]);\n                side = getSide(placement);\n                isBasePlacement = getSide(initialPlacement) === initialPlacement;\n                _context4.next = 6;\n                return platform.isRTL == null ? void 0 : platform.isRTL(elements.floating);\n              case 6:\n                rtl = _context4.sent;\n                fallbackPlacements = specifiedFallbackPlacements || (isBasePlacement || !flipAlignment ? [getOppositePlacement(initialPlacement)] : getExpandedPlacements(initialPlacement));\n                if (!specifiedFallbackPlacements && fallbackAxisSideDirection !== 'none') {\n                  fallbackPlacements.push.apply(fallbackPlacements, _toConsumableArray(getOppositeAxisPlacements(initialPlacement, flipAlignment, fallbackAxisSideDirection, rtl)));\n                }\n                placements = [initialPlacement].concat(_toConsumableArray(fallbackPlacements));\n                _context4.next = 12;\n                return detectOverflow(state, detectOverflowOptions);\n              case 12:\n                overflow = _context4.sent;\n                overflows = [];\n                overflowsData = ((_middlewareData$flip = middlewareData.flip) == null ? void 0 : _middlewareData$flip.overflows) || [];\n                if (checkMainAxis) {\n                  overflows.push(overflow[side]);\n                }\n                if (checkCrossAxis) {\n                  _getAlignmentSides2 = getAlignmentSides(placement, rects, rtl), main = _getAlignmentSides2.main, cross = _getAlignmentSides2.cross;\n                  overflows.push(overflow[main], overflow[cross]);\n                }\n                overflowsData = [].concat(_toConsumableArray(overflowsData), [{\n                  placement: placement,\n                  overflows: overflows\n                }]);\n\n                // One or more sides is overflowing.\n                if (overflows.every(function (side) {\n                  return side <= 0;\n                })) {\n                  _context4.next = 35;\n                  break;\n                }\n                nextIndex = (((_middlewareData$flip2 = middlewareData.flip) == null ? void 0 : _middlewareData$flip2.index) || 0) + 1;\n                nextPlacement = placements[nextIndex];\n                if (!nextPlacement) {\n                  _context4.next = 23;\n                  break;\n                }\n                return _context4.abrupt(\"return\", {\n                  data: {\n                    index: nextIndex,\n                    overflows: overflowsData\n                  },\n                  reset: {\n                    placement: nextPlacement\n                  }\n                });\n              case 23:\n                // First, find the candidates that fit on the mainAxis side of overflow,\n                // then find the placement that fits the best on the main crossAxis side.\n                resetPlacement = (_overflowsData$filter = overflowsData.filter(function (d) {\n                  return d.overflows[0] <= 0;\n                }).sort(function (a, b) {\n                  return a.overflows[1] - b.overflows[1];\n                })[0]) == null ? void 0 : _overflowsData$filter.placement; // Otherwise fallback.\n                if (resetPlacement) {\n                  _context4.next = 33;\n                  break;\n                }\n                _context4.t0 = fallbackStrategy;\n                _context4.next = _context4.t0 === 'bestFit' ? 28 : _context4.t0 === 'initialPlacement' ? 31 : 33;\n                break;\n              case 28:\n                _placement = (_overflowsData$map$so = overflowsData.map(function (d) {\n                  return [d.placement, d.overflows.filter(function (overflow) {\n                    return overflow > 0;\n                  }).reduce(function (acc, overflow) {\n                    return acc + overflow;\n                  }, 0)];\n                }).sort(function (a, b) {\n                  return a[1] - b[1];\n                })[0]) == null ? void 0 : _overflowsData$map$so[0];\n                if (_placement) {\n                  resetPlacement = _placement;\n                }\n                return _context4.abrupt(\"break\", 33);\n              case 31:\n                resetPlacement = initialPlacement;\n                return _context4.abrupt(\"break\", 33);\n              case 33:\n                if (!(placement !== resetPlacement)) {\n                  _context4.next = 35;\n                  break;\n                }\n                return _context4.abrupt(\"return\", {\n                  reset: {\n                    placement: resetPlacement\n                  }\n                });\n              case 35:\n                return _context4.abrupt(\"return\", {});\n              case 36:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }))();\n    }\n  };\n};\nfunction getSideOffsets(overflow, rect) {\n  return {\n    top: overflow.top - rect.height,\n    right: overflow.right - rect.width,\n    bottom: overflow.bottom - rect.height,\n    left: overflow.left - rect.width\n  };\n}\nfunction isAnySideFullyClipped(overflow) {\n  return sides.some(function (side) {\n    return overflow[side] >= 0;\n  });\n}\n/**\n * Provides data to hide the floating element in applicable situations, such as\n * when it is not in the same clipping context as the reference element.\n * @see https://floating-ui.com/docs/hide\n */\nvar hide = function hide(options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'hide',\n    options: options,\n    fn: function fn(state) {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n        var _options3, _options3$strategy, strategy, detectOverflowOptions, rects, overflow, offsets, _overflow, _offsets;\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _options3 = options, _options3$strategy = _options3.strategy, strategy = _options3$strategy === void 0 ? 'referenceHidden' : _options3$strategy, detectOverflowOptions = _objectWithoutProperties(_options3, [\"strategy\"]);\n                rects = state.rects;\n                _context5.t0 = strategy;\n                _context5.next = _context5.t0 === 'referenceHidden' ? 5 : _context5.t0 === 'escaped' ? 10 : 15;\n                break;\n              case 5:\n                _context5.next = 7;\n                return detectOverflow(state, _objectSpread(_objectSpread({}, detectOverflowOptions), {}, {\n                  elementContext: 'reference'\n                }));\n              case 7:\n                overflow = _context5.sent;\n                offsets = getSideOffsets(overflow, rects.reference);\n                return _context5.abrupt(\"return\", {\n                  data: {\n                    referenceHiddenOffsets: offsets,\n                    referenceHidden: isAnySideFullyClipped(offsets)\n                  }\n                });\n              case 10:\n                _context5.next = 12;\n                return detectOverflow(state, _objectSpread(_objectSpread({}, detectOverflowOptions), {}, {\n                  altBoundary: true\n                }));\n              case 12:\n                _overflow = _context5.sent;\n                _offsets = getSideOffsets(_overflow, rects.floating);\n                return _context5.abrupt(\"return\", {\n                  data: {\n                    escapedOffsets: _offsets,\n                    escaped: isAnySideFullyClipped(_offsets)\n                  }\n                });\n              case 15:\n                return _context5.abrupt(\"return\", {});\n              case 16:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5);\n      }))();\n    }\n  };\n};\nfunction getBoundingRect(rects) {\n  var minX = min.apply(void 0, _toConsumableArray(rects.map(function (rect) {\n    return rect.left;\n  })));\n  var minY = min.apply(void 0, _toConsumableArray(rects.map(function (rect) {\n    return rect.top;\n  })));\n  var maxX = max.apply(void 0, _toConsumableArray(rects.map(function (rect) {\n    return rect.right;\n  })));\n  var maxY = max.apply(void 0, _toConsumableArray(rects.map(function (rect) {\n    return rect.bottom;\n  })));\n  return {\n    x: minX,\n    y: minY,\n    width: maxX - minX,\n    height: maxY - minY\n  };\n}\nfunction getRectsByLine(rects) {\n  var sortedRects = rects.slice().sort(function (a, b) {\n    return a.y - b.y;\n  });\n  var groups = [];\n  var prevRect = null;\n  for (var i = 0; i < sortedRects.length; i++) {\n    var rect = sortedRects[i];\n    if (!prevRect || rect.y - prevRect.y > prevRect.height / 2) {\n      groups.push([rect]);\n    } else {\n      groups[groups.length - 1].push(rect);\n    }\n    prevRect = rect;\n  }\n  return groups.map(function (rect) {\n    return rectToClientRect(getBoundingRect(rect));\n  });\n}\n/**\n * Provides improved positioning for inline reference elements that can span\n * over multiple lines, such as hyperlinks or range selections.\n * @see https://floating-ui.com/docs/inline\n */\nvar inline = function inline(options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'inline',\n    options: options,\n    fn: function fn(state) {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6() {\n        var placement, elements, rects, platform, strategy, _options4, _options4$padding, padding, x, y, nativeClientRects, clientRects, fallback, paddingObject, getBoundingClientRect, resetRects;\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                getBoundingClientRect = function _getBoundingClientRec() {\n                  // There are two rects and they are disjoined.\n                  if (clientRects.length === 2 && clientRects[0].left > clientRects[1].right && x != null && y != null) {\n                    // Find the first rect in which the point is fully inside.\n                    return clientRects.find(function (rect) {\n                      return x > rect.left - paddingObject.left && x < rect.right + paddingObject.right && y > rect.top - paddingObject.top && y < rect.bottom + paddingObject.bottom;\n                    }) || fallback;\n                  }\n\n                  // There are 2 or more connected rects.\n                  if (clientRects.length >= 2) {\n                    if (getMainAxisFromPlacement(placement) === 'x') {\n                      var firstRect = clientRects[0];\n                      var lastRect = clientRects[clientRects.length - 1];\n                      var isTop = getSide(placement) === 'top';\n                      var _top = firstRect.top;\n                      var _bottom = lastRect.bottom;\n                      var _left = isTop ? firstRect.left : lastRect.left;\n                      var _right = isTop ? firstRect.right : lastRect.right;\n                      var _width = _right - _left;\n                      var _height = _bottom - _top;\n                      return {\n                        top: _top,\n                        bottom: _bottom,\n                        left: _left,\n                        right: _right,\n                        width: _width,\n                        height: _height,\n                        x: _left,\n                        y: _top\n                      };\n                    }\n                    var isLeftSide = getSide(placement) === 'left';\n                    var maxRight = max.apply(void 0, _toConsumableArray(clientRects.map(function (rect) {\n                      return rect.right;\n                    })));\n                    var minLeft = min.apply(void 0, _toConsumableArray(clientRects.map(function (rect) {\n                      return rect.left;\n                    })));\n                    var measureRects = clientRects.filter(function (rect) {\n                      return isLeftSide ? rect.left === minLeft : rect.right === maxRight;\n                    });\n                    var top = measureRects[0].top;\n                    var bottom = measureRects[measureRects.length - 1].bottom;\n                    var left = minLeft;\n                    var right = maxRight;\n                    var width = right - left;\n                    var height = bottom - top;\n                    return {\n                      top: top,\n                      bottom: bottom,\n                      left: left,\n                      right: right,\n                      width: width,\n                      height: height,\n                      x: left,\n                      y: top\n                    };\n                  }\n                  return fallback;\n                };\n                placement = state.placement, elements = state.elements, rects = state.rects, platform = state.platform, strategy = state.strategy; // A MouseEvent's client{X,Y} coords can be up to 2 pixels off a\n                // ClientRect's bounds, despite the event listener being triggered. A\n                // padding of 2 seems to handle this issue.\n                _options4 = options, _options4$padding = _options4.padding, padding = _options4$padding === void 0 ? 2 : _options4$padding, x = _options4.x, y = _options4.y;\n                _context6.t0 = Array;\n                _context6.next = 6;\n                return platform.getClientRects == null ? void 0 : platform.getClientRects(elements.reference);\n              case 6:\n                _context6.t1 = _context6.sent;\n                if (_context6.t1) {\n                  _context6.next = 9;\n                  break;\n                }\n                _context6.t1 = [];\n              case 9:\n                _context6.t2 = _context6.t1;\n                nativeClientRects = _context6.t0.from.call(_context6.t0, _context6.t2);\n                clientRects = getRectsByLine(nativeClientRects);\n                fallback = rectToClientRect(getBoundingRect(nativeClientRects));\n                paddingObject = getSideObjectFromPadding(padding);\n                _context6.next = 16;\n                return platform.getElementRects({\n                  reference: {\n                    getBoundingClientRect: getBoundingClientRect\n                  },\n                  floating: elements.floating,\n                  strategy: strategy\n                });\n              case 16:\n                resetRects = _context6.sent;\n                if (!(rects.reference.x !== resetRects.reference.x || rects.reference.y !== resetRects.reference.y || rects.reference.width !== resetRects.reference.width || rects.reference.height !== resetRects.reference.height)) {\n                  _context6.next = 19;\n                  break;\n                }\n                return _context6.abrupt(\"return\", {\n                  reset: {\n                    rects: resetRects\n                  }\n                });\n              case 19:\n                return _context6.abrupt(\"return\", {});\n              case 20:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6);\n      }))();\n    }\n  };\n};\nfunction convertValueToCoords(_x6, _x7) {\n  return _convertValueToCoords.apply(this, arguments);\n} /**\n   * Modifies the placement by translating the floating element along the\n   * specified axes.\n   * A number (shorthand for `mainAxis` or distance), or an axes configuration\n   * object may be passed.\n   * @see https://floating-ui.com/docs/offset\n   */\nfunction _convertValueToCoords() {\n  _convertValueToCoords = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee11(state, value) {\n    var placement, platform, elements, rtl, side, alignment, isVertical, mainAxisMulti, crossAxisMulti, rawValue, _ref6, mainAxis, crossAxis, alignmentAxis;\n    return _regeneratorRuntime.wrap(function _callee11$(_context11) {\n      while (1) {\n        switch (_context11.prev = _context11.next) {\n          case 0:\n            placement = state.placement, platform = state.platform, elements = state.elements;\n            _context11.next = 3;\n            return platform.isRTL == null ? void 0 : platform.isRTL(elements.floating);\n          case 3:\n            rtl = _context11.sent;\n            side = getSide(placement);\n            alignment = getAlignment(placement);\n            isVertical = getMainAxisFromPlacement(placement) === 'x';\n            mainAxisMulti = ['left', 'top'].includes(side) ? -1 : 1;\n            crossAxisMulti = rtl && isVertical ? -1 : 1;\n            rawValue = typeof value === 'function' ? value(state) : value; // eslint-disable-next-line prefer-const\n            _ref6 = typeof rawValue === 'number' ? {\n              mainAxis: rawValue,\n              crossAxis: 0,\n              alignmentAxis: null\n            } : _objectSpread({\n              mainAxis: 0,\n              crossAxis: 0,\n              alignmentAxis: null\n            }, rawValue), mainAxis = _ref6.mainAxis, crossAxis = _ref6.crossAxis, alignmentAxis = _ref6.alignmentAxis;\n            if (alignment && typeof alignmentAxis === 'number') {\n              crossAxis = alignment === 'end' ? alignmentAxis * -1 : alignmentAxis;\n            }\n            return _context11.abrupt(\"return\", isVertical ? {\n              x: crossAxis * crossAxisMulti,\n              y: mainAxis * mainAxisMulti\n            } : {\n              x: mainAxis * mainAxisMulti,\n              y: crossAxis * crossAxisMulti\n            });\n          case 13:\n          case \"end\":\n            return _context11.stop();\n        }\n      }\n    }, _callee11);\n  }));\n  return _convertValueToCoords.apply(this, arguments);\n}\nvar offset = function offset(value) {\n  if (value === void 0) {\n    value = 0;\n  }\n  return {\n    name: 'offset',\n    options: value,\n    fn: function fn(state) {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7() {\n        var x, y, diffCoords;\n        return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                x = state.x, y = state.y;\n                _context7.next = 3;\n                return convertValueToCoords(state, value);\n              case 3:\n                diffCoords = _context7.sent;\n                return _context7.abrupt(\"return\", {\n                  x: x + diffCoords.x,\n                  y: y + diffCoords.y,\n                  data: diffCoords\n                });\n              case 5:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7);\n      }))();\n    }\n  };\n};\nfunction getCrossAxis(axis) {\n  return axis === 'x' ? 'y' : 'x';\n}\n\n/**\n * Optimizes the visibility of the floating element by shifting it in order to\n * keep it in view when it will overflow the clipping boundary.\n * @see https://floating-ui.com/docs/shift\n */\nvar shift = function shift(options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'shift',\n    options: options,\n    fn: function fn(state) {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee8() {\n        var _objectSpread3;\n        var x, y, placement, _options5, _options5$mainAxis, checkMainAxis, _options5$crossAxis, checkCrossAxis, _options5$limiter, limiter, detectOverflowOptions, coords, overflow, mainAxis, crossAxis, mainAxisCoord, crossAxisCoord, minSide, maxSide, _min, _max, _minSide, _maxSide, _min2, _max2, limitedCoords;\n        return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                x = state.x, y = state.y, placement = state.placement;\n                _options5 = options, _options5$mainAxis = _options5.mainAxis, checkMainAxis = _options5$mainAxis === void 0 ? true : _options5$mainAxis, _options5$crossAxis = _options5.crossAxis, checkCrossAxis = _options5$crossAxis === void 0 ? false : _options5$crossAxis, _options5$limiter = _options5.limiter, limiter = _options5$limiter === void 0 ? {\n                  fn: function fn(_ref) {\n                    var x = _ref.x,\n                      y = _ref.y;\n                    return {\n                      x: x,\n                      y: y\n                    };\n                  }\n                } : _options5$limiter, detectOverflowOptions = _objectWithoutProperties(_options5, [\"mainAxis\", \"crossAxis\", \"limiter\"]);\n                coords = {\n                  x: x,\n                  y: y\n                };\n                _context8.next = 5;\n                return detectOverflow(state, detectOverflowOptions);\n              case 5:\n                overflow = _context8.sent;\n                mainAxis = getMainAxisFromPlacement(getSide(placement));\n                crossAxis = getCrossAxis(mainAxis);\n                mainAxisCoord = coords[mainAxis];\n                crossAxisCoord = coords[crossAxis];\n                if (checkMainAxis) {\n                  minSide = mainAxis === 'y' ? 'top' : 'left';\n                  maxSide = mainAxis === 'y' ? 'bottom' : 'right';\n                  _min = mainAxisCoord + overflow[minSide];\n                  _max = mainAxisCoord - overflow[maxSide];\n                  mainAxisCoord = within(_min, mainAxisCoord, _max);\n                }\n                if (checkCrossAxis) {\n                  _minSide = crossAxis === 'y' ? 'top' : 'left';\n                  _maxSide = crossAxis === 'y' ? 'bottom' : 'right';\n                  _min2 = crossAxisCoord + overflow[_minSide];\n                  _max2 = crossAxisCoord - overflow[_maxSide];\n                  crossAxisCoord = within(_min2, crossAxisCoord, _max2);\n                }\n                limitedCoords = limiter.fn(_objectSpread(_objectSpread({}, state), {}, (_objectSpread3 = {}, _defineProperty(_objectSpread3, mainAxis, mainAxisCoord), _defineProperty(_objectSpread3, crossAxis, crossAxisCoord), _objectSpread3)));\n                return _context8.abrupt(\"return\", _objectSpread(_objectSpread({}, limitedCoords), {}, {\n                  data: {\n                    x: limitedCoords.x - x,\n                    y: limitedCoords.y - y\n                  }\n                }));\n              case 14:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8);\n      }))();\n    }\n  };\n};\n/**\n * Built-in `limiter` that will stop `shift()` at a certain point.\n */\nvar limitShift = function limitShift(options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    options: options,\n    fn: function fn(state) {\n      var _ref5;\n      var x = state.x,\n        y = state.y,\n        placement = state.placement,\n        rects = state.rects,\n        middlewareData = state.middlewareData;\n      var _options6 = options,\n        _options6$offset = _options6.offset,\n        offset = _options6$offset === void 0 ? 0 : _options6$offset,\n        _options6$mainAxis = _options6.mainAxis,\n        checkMainAxis = _options6$mainAxis === void 0 ? true : _options6$mainAxis,\n        _options6$crossAxis = _options6.crossAxis,\n        checkCrossAxis = _options6$crossAxis === void 0 ? true : _options6$crossAxis;\n      var coords = {\n        x: x,\n        y: y\n      };\n      var mainAxis = getMainAxisFromPlacement(placement);\n      var crossAxis = getCrossAxis(mainAxis);\n      var mainAxisCoord = coords[mainAxis];\n      var crossAxisCoord = coords[crossAxis];\n      var rawOffset = typeof offset === 'function' ? offset(state) : offset;\n      var computedOffset = typeof rawOffset === 'number' ? {\n        mainAxis: rawOffset,\n        crossAxis: 0\n      } : _objectSpread({\n        mainAxis: 0,\n        crossAxis: 0\n      }, rawOffset);\n      if (checkMainAxis) {\n        var len = mainAxis === 'y' ? 'height' : 'width';\n        var limitMin = rects.reference[mainAxis] - rects.floating[len] + computedOffset.mainAxis;\n        var limitMax = rects.reference[mainAxis] + rects.reference[len] - computedOffset.mainAxis;\n        if (mainAxisCoord < limitMin) {\n          mainAxisCoord = limitMin;\n        } else if (mainAxisCoord > limitMax) {\n          mainAxisCoord = limitMax;\n        }\n      }\n      if (checkCrossAxis) {\n        var _middlewareData$offse, _middlewareData$offse2;\n        var _len = mainAxis === 'y' ? 'width' : 'height';\n        var isOriginSide = ['top', 'left'].includes(getSide(placement));\n        var _limitMin = rects.reference[crossAxis] - rects.floating[_len] + (isOriginSide ? ((_middlewareData$offse = middlewareData.offset) == null ? void 0 : _middlewareData$offse[crossAxis]) || 0 : 0) + (isOriginSide ? 0 : computedOffset.crossAxis);\n        var _limitMax = rects.reference[crossAxis] + rects.reference[_len] + (isOriginSide ? 0 : ((_middlewareData$offse2 = middlewareData.offset) == null ? void 0 : _middlewareData$offse2[crossAxis]) || 0) - (isOriginSide ? computedOffset.crossAxis : 0);\n        if (crossAxisCoord < _limitMin) {\n          crossAxisCoord = _limitMin;\n        } else if (crossAxisCoord > _limitMax) {\n          crossAxisCoord = _limitMax;\n        }\n      }\n      return _ref5 = {}, _defineProperty(_ref5, mainAxis, mainAxisCoord), _defineProperty(_ref5, crossAxis, crossAxisCoord), _ref5;\n    }\n  };\n};\n\n/**\n * Provides data that allows you to change the size of the floating element —\n * for instance, prevent it from overflowing the clipping boundary or match the\n * width of the reference element.\n * @see https://floating-ui.com/docs/size\n */\nvar size = function size(options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'size',\n    options: options,\n    fn: function fn(state) {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee9() {\n        var placement, rects, platform, elements, _options7, _options7$apply, apply, detectOverflowOptions, overflow, side, alignment, axis, isXAxis, _rects$floating, width, height, heightSide, widthSide, overflowAvailableHeight, overflowAvailableWidth, noShift, availableHeight, availableWidth, maximumClippingWidth, maximumClippingHeight, xMin, xMax, yMin, yMax, nextDimensions;\n        return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                placement = state.placement, rects = state.rects, platform = state.platform, elements = state.elements;\n                _options7 = options, _options7$apply = _options7.apply, apply = _options7$apply === void 0 ? function () {} : _options7$apply, detectOverflowOptions = _objectWithoutProperties(_options7, [\"apply\"]);\n                _context9.next = 4;\n                return detectOverflow(state, detectOverflowOptions);\n              case 4:\n                overflow = _context9.sent;\n                side = getSide(placement);\n                alignment = getAlignment(placement);\n                axis = getMainAxisFromPlacement(placement);\n                isXAxis = axis === 'x';\n                _rects$floating = rects.floating, width = _rects$floating.width, height = _rects$floating.height;\n                if (!(side === 'top' || side === 'bottom')) {\n                  _context9.next = 29;\n                  break;\n                }\n                heightSide = side;\n                _context9.t0 = alignment;\n                _context9.next = 15;\n                return platform.isRTL == null ? void 0 : platform.isRTL(elements.floating);\n              case 15:\n                if (!_context9.sent) {\n                  _context9.next = 19;\n                  break;\n                }\n                _context9.t1 = 'start';\n                _context9.next = 20;\n                break;\n              case 19:\n                _context9.t1 = 'end';\n              case 20:\n                _context9.t2 = _context9.t1;\n                if (!(_context9.t0 === _context9.t2)) {\n                  _context9.next = 25;\n                  break;\n                }\n                _context9.t3 = 'left';\n                _context9.next = 26;\n                break;\n              case 25:\n                _context9.t3 = 'right';\n              case 26:\n                widthSide = _context9.t3;\n                _context9.next = 31;\n                break;\n              case 29:\n                widthSide = side;\n                heightSide = alignment === 'end' ? 'top' : 'bottom';\n              case 31:\n                overflowAvailableHeight = height - overflow[heightSide];\n                overflowAvailableWidth = width - overflow[widthSide];\n                noShift = !state.middlewareData.shift;\n                availableHeight = overflowAvailableHeight;\n                availableWidth = overflowAvailableWidth;\n                if (isXAxis) {\n                  maximumClippingWidth = width - overflow.left - overflow.right;\n                  availableWidth = alignment || noShift ? min(overflowAvailableWidth, maximumClippingWidth) : maximumClippingWidth;\n                } else {\n                  maximumClippingHeight = height - overflow.top - overflow.bottom;\n                  availableHeight = alignment || noShift ? min(overflowAvailableHeight, maximumClippingHeight) : maximumClippingHeight;\n                }\n                if (noShift && !alignment) {\n                  xMin = max(overflow.left, 0);\n                  xMax = max(overflow.right, 0);\n                  yMin = max(overflow.top, 0);\n                  yMax = max(overflow.bottom, 0);\n                  if (isXAxis) {\n                    availableWidth = width - 2 * (xMin !== 0 || xMax !== 0 ? xMin + xMax : max(overflow.left, overflow.right));\n                  } else {\n                    availableHeight = height - 2 * (yMin !== 0 || yMax !== 0 ? yMin + yMax : max(overflow.top, overflow.bottom));\n                  }\n                }\n                _context9.next = 40;\n                return apply(_objectSpread(_objectSpread({}, state), {}, {\n                  availableWidth: availableWidth,\n                  availableHeight: availableHeight\n                }));\n              case 40:\n                _context9.next = 42;\n                return platform.getDimensions(elements.floating);\n              case 42:\n                nextDimensions = _context9.sent;\n                if (!(width !== nextDimensions.width || height !== nextDimensions.height)) {\n                  _context9.next = 45;\n                  break;\n                }\n                return _context9.abrupt(\"return\", {\n                  reset: {\n                    rects: true\n                  }\n                });\n              case 45:\n                return _context9.abrupt(\"return\", {});\n              case 46:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        }, _callee9);\n      }))();\n    }\n  };\n};\nexport { arrow, autoPlacement, computePosition, detectOverflow, flip, hide, inline, limitShift, offset, rectToClientRect, shift, size };","map":{"version":3,"names":["getAlignment","placement","split","getLengthFromAxis","axis","getSide","getMainAxisFromPlacement","includes","computeCoordsFromPlacement","_ref","rtl","reference","floating","commonX","x","width","commonY","y","height","mainAxis","length","commonAlign","side","isVertical","coords","computePosition","config","strategy","middleware","platform","validMiddleware","filter","Boolean","isRTL","getElementRects","rects","statefulPlacement","middlewareData","resetCount","i","name","fn","initialPlacement","elements","nextX","nextY","data","reset","expandPaddingObject","padding","top","right","bottom","left","getSideObjectFromPadding","rectToClientRect","rect","detectOverflow","state","options","boundary","rootBoundary","elementContext","altBoundary","paddingObject","altContext","element","isElement","_await$platform$isEle","contextElement","getDocumentElement","getClippingRect","clippingClientRect","getOffsetParent","offsetParent","getScale","offsetScale","convertOffsetParentRelativeRectToViewportRelativeRect","elementClientRect","min","Math","max","within","min$1","value","max$1","arrow","getDimensions","arrowDimensions","isYAxis","minProp","maxProp","clientProp","endDiff","startDiff","arrowOffsetParent","clientSize","centerToReference","center","offset","shouldAddOffset","alignmentOffset","sides","allPlacements","reduce","acc","concat","oppositeSideMap","getOppositePlacement","replace","getAlignmentSides","alignment","mainAlignmentSide","main","cross","oppositeAlignmentMap","start","end","getOppositeAlignmentPlacement","getPlacementList","autoAlignment","allowedPlacements","allowedPlacementsSortedByAlignment","autoPlacement","crossAxis","detectOverflowOptions","placements","undefined","overflow","currentIndex","_middlewareData$autoP","index","currentPlacement","currentOverflows","allOverflows","_middlewareData$autoP2","overflows","nextPlacement","placementsSortedByMostSpace","map","d","slice","v","sort","a","b","placementsThatFitOnEachSide","every","resetPlacement","_placementsThatFitOnE","getExpandedPlacements","oppositePlacement","getSideList","isStart","lr","rl","tb","bt","getOppositeAxisPlacements","flipAlignment","direction","list","flip","checkMainAxis","checkCrossAxis","specifiedFallbackPlacements","fallbackPlacements","fallbackStrategy","fallbackAxisSideDirection","isBasePlacement","push","overflowsData","_middlewareData$flip","nextIndex","_middlewareData$flip2","_overflowsData$filter","_overflowsData$map$so","getSideOffsets","isAnySideFullyClipped","some","hide","offsets","referenceHiddenOffsets","referenceHidden","escapedOffsets","escaped","getBoundingRect","minX","minY","maxX","maxY","getRectsByLine","sortedRects","groups","prevRect","inline","getBoundingClientRect","clientRects","find","fallback","firstRect","lastRect","isTop","isLeftSide","maxRight","minLeft","measureRects","Array","getClientRects","nativeClientRects","from","resetRects","convertValueToCoords","mainAxisMulti","crossAxisMulti","rawValue","alignmentAxis","diffCoords","getCrossAxis","shift","limiter","mainAxisCoord","crossAxisCoord","minSide","maxSide","limitedCoords","limitShift","rawOffset","computedOffset","len","limitMin","limitMax","_middlewareData$offse","_middlewareData$offse2","isOriginSide","size","apply","isXAxis","heightSide","widthSide","overflowAvailableHeight","overflowAvailableWidth","noShift","availableHeight","availableWidth","maximumClippingWidth","maximumClippingHeight","xMin","xMax","yMin","yMax","nextDimensions"],"sources":["C:/Users/sulli/Git/GeoWeb/node_modules/@floating-ui/core/dist/floating-ui.core.esm.js"],"sourcesContent":["function getAlignment(placement) {\n  return placement.split('-')[1];\n}\n\nfunction getLengthFromAxis(axis) {\n  return axis === 'y' ? 'height' : 'width';\n}\n\nfunction getSide(placement) {\n  return placement.split('-')[0];\n}\n\nfunction getMainAxisFromPlacement(placement) {\n  return ['top', 'bottom'].includes(getSide(placement)) ? 'x' : 'y';\n}\n\nfunction computeCoordsFromPlacement(_ref, placement, rtl) {\n  let {\n    reference,\n    floating\n  } = _ref;\n  const commonX = reference.x + reference.width / 2 - floating.width / 2;\n  const commonY = reference.y + reference.height / 2 - floating.height / 2;\n  const mainAxis = getMainAxisFromPlacement(placement);\n  const length = getLengthFromAxis(mainAxis);\n  const commonAlign = reference[length] / 2 - floating[length] / 2;\n  const side = getSide(placement);\n  const isVertical = mainAxis === 'x';\n  let coords;\n  switch (side) {\n    case 'top':\n      coords = {\n        x: commonX,\n        y: reference.y - floating.height\n      };\n      break;\n    case 'bottom':\n      coords = {\n        x: commonX,\n        y: reference.y + reference.height\n      };\n      break;\n    case 'right':\n      coords = {\n        x: reference.x + reference.width,\n        y: commonY\n      };\n      break;\n    case 'left':\n      coords = {\n        x: reference.x - floating.width,\n        y: commonY\n      };\n      break;\n    default:\n      coords = {\n        x: reference.x,\n        y: reference.y\n      };\n  }\n  switch (getAlignment(placement)) {\n    case 'start':\n      coords[mainAxis] -= commonAlign * (rtl && isVertical ? -1 : 1);\n      break;\n    case 'end':\n      coords[mainAxis] += commonAlign * (rtl && isVertical ? -1 : 1);\n      break;\n  }\n  return coords;\n}\n\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a reference element when it is given a certain positioning strategy.\n *\n * This export does not have any `platform` interface logic. You will need to\n * write one for the platform you are using Floating UI with.\n */\nconst computePosition = async (reference, floating, config) => {\n  const {\n    placement = 'bottom',\n    strategy = 'absolute',\n    middleware = [],\n    platform\n  } = config;\n  const validMiddleware = middleware.filter(Boolean);\n  const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(floating));\n  let rects = await platform.getElementRects({\n    reference,\n    floating,\n    strategy\n  });\n  let {\n    x,\n    y\n  } = computeCoordsFromPlacement(rects, placement, rtl);\n  let statefulPlacement = placement;\n  let middlewareData = {};\n  let resetCount = 0;\n  for (let i = 0; i < validMiddleware.length; i++) {\n    const {\n      name,\n      fn\n    } = validMiddleware[i];\n    const {\n      x: nextX,\n      y: nextY,\n      data,\n      reset\n    } = await fn({\n      x,\n      y,\n      initialPlacement: placement,\n      placement: statefulPlacement,\n      strategy,\n      middlewareData,\n      rects,\n      platform,\n      elements: {\n        reference,\n        floating\n      }\n    });\n    x = nextX != null ? nextX : x;\n    y = nextY != null ? nextY : y;\n    middlewareData = {\n      ...middlewareData,\n      [name]: {\n        ...middlewareData[name],\n        ...data\n      }\n    };\n    if (reset && resetCount <= 50) {\n      resetCount++;\n      if (typeof reset === 'object') {\n        if (reset.placement) {\n          statefulPlacement = reset.placement;\n        }\n        if (reset.rects) {\n          rects = reset.rects === true ? await platform.getElementRects({\n            reference,\n            floating,\n            strategy\n          }) : reset.rects;\n        }\n        ({\n          x,\n          y\n        } = computeCoordsFromPlacement(rects, statefulPlacement, rtl));\n      }\n      i = -1;\n      continue;\n    }\n  }\n  return {\n    x,\n    y,\n    placement: statefulPlacement,\n    strategy,\n    middlewareData\n  };\n};\n\nfunction expandPaddingObject(padding) {\n  return {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0,\n    ...padding\n  };\n}\n\nfunction getSideObjectFromPadding(padding) {\n  return typeof padding !== 'number' ? expandPaddingObject(padding) : {\n    top: padding,\n    right: padding,\n    bottom: padding,\n    left: padding\n  };\n}\n\nfunction rectToClientRect(rect) {\n  return {\n    ...rect,\n    top: rect.y,\n    left: rect.x,\n    right: rect.x + rect.width,\n    bottom: rect.y + rect.height\n  };\n}\n\n/**\n * Resolves with an object of overflow side offsets that determine how much the\n * element is overflowing a given clipping boundary on each side.\n * - positive = overflowing the boundary by that number of pixels\n * - negative = how many pixels left before it will overflow\n * - 0 = lies flush with the boundary\n * @see https://floating-ui.com/docs/detectOverflow\n */\nasync function detectOverflow(state, options) {\n  var _await$platform$isEle;\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    x,\n    y,\n    platform,\n    rects,\n    elements,\n    strategy\n  } = state;\n  const {\n    boundary = 'clippingAncestors',\n    rootBoundary = 'viewport',\n    elementContext = 'floating',\n    altBoundary = false,\n    padding = 0\n  } = options;\n  const paddingObject = getSideObjectFromPadding(padding);\n  const altContext = elementContext === 'floating' ? 'reference' : 'floating';\n  const element = elements[altBoundary ? altContext : elementContext];\n  const clippingClientRect = rectToClientRect(await platform.getClippingRect({\n    element: ((_await$platform$isEle = await (platform.isElement == null ? void 0 : platform.isElement(element))) != null ? _await$platform$isEle : true) ? element : element.contextElement || (await (platform.getDocumentElement == null ? void 0 : platform.getDocumentElement(elements.floating))),\n    boundary,\n    rootBoundary,\n    strategy\n  }));\n  const rect = elementContext === 'floating' ? {\n    ...rects.floating,\n    x,\n    y\n  } : rects.reference;\n  const offsetParent = await (platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(elements.floating));\n  const offsetScale = (await (platform.isElement == null ? void 0 : platform.isElement(offsetParent))) ? (await (platform.getScale == null ? void 0 : platform.getScale(offsetParent))) || {\n    x: 1,\n    y: 1\n  } : {\n    x: 1,\n    y: 1\n  };\n  const elementClientRect = rectToClientRect(platform.convertOffsetParentRelativeRectToViewportRelativeRect ? await platform.convertOffsetParentRelativeRectToViewportRelativeRect({\n    rect,\n    offsetParent,\n    strategy\n  }) : rect);\n  return {\n    top: (clippingClientRect.top - elementClientRect.top + paddingObject.top) / offsetScale.y,\n    bottom: (elementClientRect.bottom - clippingClientRect.bottom + paddingObject.bottom) / offsetScale.y,\n    left: (clippingClientRect.left - elementClientRect.left + paddingObject.left) / offsetScale.x,\n    right: (elementClientRect.right - clippingClientRect.right + paddingObject.right) / offsetScale.x\n  };\n}\n\nconst min = Math.min;\nconst max = Math.max;\n\nfunction within(min$1, value, max$1) {\n  return max(min$1, min(value, max$1));\n}\n\n/**\n * Provides data to position an inner element of the floating element so that it\n * appears centered to the reference element.\n * @see https://floating-ui.com/docs/arrow\n */\nconst arrow = options => ({\n  name: 'arrow',\n  options,\n  async fn(state) {\n    // Since `element` is required, we don't Partial<> the type.\n    const {\n      element,\n      padding = 0\n    } = options || {};\n    const {\n      x,\n      y,\n      placement,\n      rects,\n      platform,\n      elements\n    } = state;\n    if (element == null) {\n      return {};\n    }\n    const paddingObject = getSideObjectFromPadding(padding);\n    const coords = {\n      x,\n      y\n    };\n    const axis = getMainAxisFromPlacement(placement);\n    const length = getLengthFromAxis(axis);\n    const arrowDimensions = await platform.getDimensions(element);\n    const isYAxis = axis === 'y';\n    const minProp = isYAxis ? 'top' : 'left';\n    const maxProp = isYAxis ? 'bottom' : 'right';\n    const clientProp = isYAxis ? 'clientHeight' : 'clientWidth';\n    const endDiff = rects.reference[length] + rects.reference[axis] - coords[axis] - rects.floating[length];\n    const startDiff = coords[axis] - rects.reference[axis];\n    const arrowOffsetParent = await (platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(element));\n    let clientSize = arrowOffsetParent ? arrowOffsetParent[clientProp] : 0;\n\n    // DOM platform can return `window` as the `offsetParent`.\n    if (!clientSize || !(await (platform.isElement == null ? void 0 : platform.isElement(arrowOffsetParent)))) {\n      clientSize = elements.floating[clientProp] || rects.floating[length];\n    }\n    const centerToReference = endDiff / 2 - startDiff / 2;\n\n    // Make sure the arrow doesn't overflow the floating element if the center\n    // point is outside the floating element's bounds.\n    const min = paddingObject[minProp];\n    const max = clientSize - arrowDimensions[length] - paddingObject[maxProp];\n    const center = clientSize / 2 - arrowDimensions[length] / 2 + centerToReference;\n    const offset = within(min, center, max);\n\n    // If the reference is small enough that the arrow's padding causes it to\n    // to point to nothing for an aligned placement, adjust the offset of the\n    // floating element itself. This stops `shift()` from taking action, but can\n    // be worked around by calling it again after the `arrow()` if desired.\n    const shouldAddOffset = getAlignment(placement) != null && center != offset && rects.reference[length] / 2 - (center < min ? paddingObject[minProp] : paddingObject[maxProp]) - arrowDimensions[length] / 2 < 0;\n    const alignmentOffset = shouldAddOffset ? center < min ? min - center : max - center : 0;\n    return {\n      [axis]: coords[axis] - alignmentOffset,\n      data: {\n        [axis]: offset,\n        centerOffset: center - offset\n      }\n    };\n  }\n});\n\nconst sides = ['top', 'right', 'bottom', 'left'];\nconst allPlacements = /*#__PURE__*/sides.reduce((acc, side) => acc.concat(side, side + \"-start\", side + \"-end\"), []);\n\nconst oppositeSideMap = {\n  left: 'right',\n  right: 'left',\n  bottom: 'top',\n  top: 'bottom'\n};\nfunction getOppositePlacement(placement) {\n  return placement.replace(/left|right|bottom|top/g, side => oppositeSideMap[side]);\n}\n\nfunction getAlignmentSides(placement, rects, rtl) {\n  if (rtl === void 0) {\n    rtl = false;\n  }\n  const alignment = getAlignment(placement);\n  const mainAxis = getMainAxisFromPlacement(placement);\n  const length = getLengthFromAxis(mainAxis);\n  let mainAlignmentSide = mainAxis === 'x' ? alignment === (rtl ? 'end' : 'start') ? 'right' : 'left' : alignment === 'start' ? 'bottom' : 'top';\n  if (rects.reference[length] > rects.floating[length]) {\n    mainAlignmentSide = getOppositePlacement(mainAlignmentSide);\n  }\n  return {\n    main: mainAlignmentSide,\n    cross: getOppositePlacement(mainAlignmentSide)\n  };\n}\n\nconst oppositeAlignmentMap = {\n  start: 'end',\n  end: 'start'\n};\nfunction getOppositeAlignmentPlacement(placement) {\n  return placement.replace(/start|end/g, alignment => oppositeAlignmentMap[alignment]);\n}\n\nfunction getPlacementList(alignment, autoAlignment, allowedPlacements) {\n  const allowedPlacementsSortedByAlignment = alignment ? [...allowedPlacements.filter(placement => getAlignment(placement) === alignment), ...allowedPlacements.filter(placement => getAlignment(placement) !== alignment)] : allowedPlacements.filter(placement => getSide(placement) === placement);\n  return allowedPlacementsSortedByAlignment.filter(placement => {\n    if (alignment) {\n      return getAlignment(placement) === alignment || (autoAlignment ? getOppositeAlignmentPlacement(placement) !== placement : false);\n    }\n    return true;\n  });\n}\n/**\n * Optimizes the visibility of the floating element by choosing the placement\n * that has the most space available automatically, without needing to specify a\n * preferred placement. Alternative to `flip`.\n * @see https://floating-ui.com/docs/autoPlacement\n */\nconst autoPlacement = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'autoPlacement',\n    options,\n    async fn(state) {\n      var _middlewareData$autoP, _middlewareData$autoP2, _placementsThatFitOnE;\n      const {\n        rects,\n        middlewareData,\n        placement,\n        platform,\n        elements\n      } = state;\n      const {\n        crossAxis = false,\n        alignment,\n        allowedPlacements = allPlacements,\n        autoAlignment = true,\n        ...detectOverflowOptions\n      } = options;\n      const placements = alignment !== undefined || allowedPlacements === allPlacements ? getPlacementList(alignment || null, autoAlignment, allowedPlacements) : allowedPlacements;\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const currentIndex = ((_middlewareData$autoP = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP.index) || 0;\n      const currentPlacement = placements[currentIndex];\n      if (currentPlacement == null) {\n        return {};\n      }\n      const {\n        main,\n        cross\n      } = getAlignmentSides(currentPlacement, rects, await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating)));\n\n      // Make `computeCoords` start from the right place.\n      if (placement !== currentPlacement) {\n        return {\n          reset: {\n            placement: placements[0]\n          }\n        };\n      }\n      const currentOverflows = [overflow[getSide(currentPlacement)], overflow[main], overflow[cross]];\n      const allOverflows = [...(((_middlewareData$autoP2 = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP2.overflows) || []), {\n        placement: currentPlacement,\n        overflows: currentOverflows\n      }];\n      const nextPlacement = placements[currentIndex + 1];\n\n      // There are more placements to check.\n      if (nextPlacement) {\n        return {\n          data: {\n            index: currentIndex + 1,\n            overflows: allOverflows\n          },\n          reset: {\n            placement: nextPlacement\n          }\n        };\n      }\n      const placementsSortedByMostSpace = allOverflows.map(d => {\n        const alignment = getAlignment(d.placement);\n        return [d.placement, alignment && crossAxis ?\n        // Check along the mainAxis and main crossAxis side.\n        d.overflows.slice(0, 2).reduce((acc, v) => acc + v, 0) :\n        // Check only the mainAxis.\n        d.overflows[0], d.overflows];\n      }).sort((a, b) => a[1] - b[1]);\n      const placementsThatFitOnEachSide = placementsSortedByMostSpace.filter(d => d[2].slice(0,\n      // Aligned placements should not check their opposite crossAxis\n      // side.\n      getAlignment(d[0]) ? 2 : 3).every(v => v <= 0));\n      const resetPlacement = ((_placementsThatFitOnE = placementsThatFitOnEachSide[0]) == null ? void 0 : _placementsThatFitOnE[0]) || placementsSortedByMostSpace[0][0];\n      if (resetPlacement !== placement) {\n        return {\n          data: {\n            index: currentIndex + 1,\n            overflows: allOverflows\n          },\n          reset: {\n            placement: resetPlacement\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\nfunction getExpandedPlacements(placement) {\n  const oppositePlacement = getOppositePlacement(placement);\n  return [getOppositeAlignmentPlacement(placement), oppositePlacement, getOppositeAlignmentPlacement(oppositePlacement)];\n}\n\nfunction getSideList(side, isStart, rtl) {\n  const lr = ['left', 'right'];\n  const rl = ['right', 'left'];\n  const tb = ['top', 'bottom'];\n  const bt = ['bottom', 'top'];\n  switch (side) {\n    case 'top':\n    case 'bottom':\n      if (rtl) return isStart ? rl : lr;\n      return isStart ? lr : rl;\n    case 'left':\n    case 'right':\n      return isStart ? tb : bt;\n    default:\n      return [];\n  }\n}\nfunction getOppositeAxisPlacements(placement, flipAlignment, direction, rtl) {\n  const alignment = getAlignment(placement);\n  let list = getSideList(getSide(placement), direction === 'start', rtl);\n  if (alignment) {\n    list = list.map(side => side + \"-\" + alignment);\n    if (flipAlignment) {\n      list = list.concat(list.map(getOppositeAlignmentPlacement));\n    }\n  }\n  return list;\n}\n\n/**\n * Optimizes the visibility of the floating element by flipping the `placement`\n * in order to keep it in view when the preferred placement(s) will overflow the\n * clipping boundary. Alternative to `autoPlacement`.\n * @see https://floating-ui.com/docs/flip\n */\nconst flip = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'flip',\n    options,\n    async fn(state) {\n      var _middlewareData$flip;\n      const {\n        placement,\n        middlewareData,\n        rects,\n        initialPlacement,\n        platform,\n        elements\n      } = state;\n      const {\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = true,\n        fallbackPlacements: specifiedFallbackPlacements,\n        fallbackStrategy = 'bestFit',\n        fallbackAxisSideDirection = 'none',\n        flipAlignment = true,\n        ...detectOverflowOptions\n      } = options;\n      const side = getSide(placement);\n      const isBasePlacement = getSide(initialPlacement) === initialPlacement;\n      const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating));\n      const fallbackPlacements = specifiedFallbackPlacements || (isBasePlacement || !flipAlignment ? [getOppositePlacement(initialPlacement)] : getExpandedPlacements(initialPlacement));\n      if (!specifiedFallbackPlacements && fallbackAxisSideDirection !== 'none') {\n        fallbackPlacements.push(...getOppositeAxisPlacements(initialPlacement, flipAlignment, fallbackAxisSideDirection, rtl));\n      }\n      const placements = [initialPlacement, ...fallbackPlacements];\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const overflows = [];\n      let overflowsData = ((_middlewareData$flip = middlewareData.flip) == null ? void 0 : _middlewareData$flip.overflows) || [];\n      if (checkMainAxis) {\n        overflows.push(overflow[side]);\n      }\n      if (checkCrossAxis) {\n        const {\n          main,\n          cross\n        } = getAlignmentSides(placement, rects, rtl);\n        overflows.push(overflow[main], overflow[cross]);\n      }\n      overflowsData = [...overflowsData, {\n        placement,\n        overflows\n      }];\n\n      // One or more sides is overflowing.\n      if (!overflows.every(side => side <= 0)) {\n        var _middlewareData$flip2, _overflowsData$filter;\n        const nextIndex = (((_middlewareData$flip2 = middlewareData.flip) == null ? void 0 : _middlewareData$flip2.index) || 0) + 1;\n        const nextPlacement = placements[nextIndex];\n        if (nextPlacement) {\n          // Try next placement and re-run the lifecycle.\n          return {\n            data: {\n              index: nextIndex,\n              overflows: overflowsData\n            },\n            reset: {\n              placement: nextPlacement\n            }\n          };\n        }\n\n        // First, find the candidates that fit on the mainAxis side of overflow,\n        // then find the placement that fits the best on the main crossAxis side.\n        let resetPlacement = (_overflowsData$filter = overflowsData.filter(d => d.overflows[0] <= 0).sort((a, b) => a.overflows[1] - b.overflows[1])[0]) == null ? void 0 : _overflowsData$filter.placement;\n\n        // Otherwise fallback.\n        if (!resetPlacement) {\n          switch (fallbackStrategy) {\n            case 'bestFit':\n              {\n                var _overflowsData$map$so;\n                const placement = (_overflowsData$map$so = overflowsData.map(d => [d.placement, d.overflows.filter(overflow => overflow > 0).reduce((acc, overflow) => acc + overflow, 0)]).sort((a, b) => a[1] - b[1])[0]) == null ? void 0 : _overflowsData$map$so[0];\n                if (placement) {\n                  resetPlacement = placement;\n                }\n                break;\n              }\n            case 'initialPlacement':\n              resetPlacement = initialPlacement;\n              break;\n          }\n        }\n        if (placement !== resetPlacement) {\n          return {\n            reset: {\n              placement: resetPlacement\n            }\n          };\n        }\n      }\n      return {};\n    }\n  };\n};\n\nfunction getSideOffsets(overflow, rect) {\n  return {\n    top: overflow.top - rect.height,\n    right: overflow.right - rect.width,\n    bottom: overflow.bottom - rect.height,\n    left: overflow.left - rect.width\n  };\n}\nfunction isAnySideFullyClipped(overflow) {\n  return sides.some(side => overflow[side] >= 0);\n}\n/**\n * Provides data to hide the floating element in applicable situations, such as\n * when it is not in the same clipping context as the reference element.\n * @see https://floating-ui.com/docs/hide\n */\nconst hide = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'hide',\n    options,\n    async fn(state) {\n      const {\n        strategy = 'referenceHidden',\n        ...detectOverflowOptions\n      } = options;\n      const {\n        rects\n      } = state;\n      switch (strategy) {\n        case 'referenceHidden':\n          {\n            const overflow = await detectOverflow(state, {\n              ...detectOverflowOptions,\n              elementContext: 'reference'\n            });\n            const offsets = getSideOffsets(overflow, rects.reference);\n            return {\n              data: {\n                referenceHiddenOffsets: offsets,\n                referenceHidden: isAnySideFullyClipped(offsets)\n              }\n            };\n          }\n        case 'escaped':\n          {\n            const overflow = await detectOverflow(state, {\n              ...detectOverflowOptions,\n              altBoundary: true\n            });\n            const offsets = getSideOffsets(overflow, rects.floating);\n            return {\n              data: {\n                escapedOffsets: offsets,\n                escaped: isAnySideFullyClipped(offsets)\n              }\n            };\n          }\n        default:\n          {\n            return {};\n          }\n      }\n    }\n  };\n};\n\nfunction getBoundingRect(rects) {\n  const minX = min(...rects.map(rect => rect.left));\n  const minY = min(...rects.map(rect => rect.top));\n  const maxX = max(...rects.map(rect => rect.right));\n  const maxY = max(...rects.map(rect => rect.bottom));\n  return {\n    x: minX,\n    y: minY,\n    width: maxX - minX,\n    height: maxY - minY\n  };\n}\nfunction getRectsByLine(rects) {\n  const sortedRects = rects.slice().sort((a, b) => a.y - b.y);\n  const groups = [];\n  let prevRect = null;\n  for (let i = 0; i < sortedRects.length; i++) {\n    const rect = sortedRects[i];\n    if (!prevRect || rect.y - prevRect.y > prevRect.height / 2) {\n      groups.push([rect]);\n    } else {\n      groups[groups.length - 1].push(rect);\n    }\n    prevRect = rect;\n  }\n  return groups.map(rect => rectToClientRect(getBoundingRect(rect)));\n}\n/**\n * Provides improved positioning for inline reference elements that can span\n * over multiple lines, such as hyperlinks or range selections.\n * @see https://floating-ui.com/docs/inline\n */\nconst inline = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'inline',\n    options,\n    async fn(state) {\n      const {\n        placement,\n        elements,\n        rects,\n        platform,\n        strategy\n      } = state;\n      // A MouseEvent's client{X,Y} coords can be up to 2 pixels off a\n      // ClientRect's bounds, despite the event listener being triggered. A\n      // padding of 2 seems to handle this issue.\n      const {\n        padding = 2,\n        x,\n        y\n      } = options;\n      const nativeClientRects = Array.from((await (platform.getClientRects == null ? void 0 : platform.getClientRects(elements.reference))) || []);\n      const clientRects = getRectsByLine(nativeClientRects);\n      const fallback = rectToClientRect(getBoundingRect(nativeClientRects));\n      const paddingObject = getSideObjectFromPadding(padding);\n      function getBoundingClientRect() {\n        // There are two rects and they are disjoined.\n        if (clientRects.length === 2 && clientRects[0].left > clientRects[1].right && x != null && y != null) {\n          // Find the first rect in which the point is fully inside.\n          return clientRects.find(rect => x > rect.left - paddingObject.left && x < rect.right + paddingObject.right && y > rect.top - paddingObject.top && y < rect.bottom + paddingObject.bottom) || fallback;\n        }\n\n        // There are 2 or more connected rects.\n        if (clientRects.length >= 2) {\n          if (getMainAxisFromPlacement(placement) === 'x') {\n            const firstRect = clientRects[0];\n            const lastRect = clientRects[clientRects.length - 1];\n            const isTop = getSide(placement) === 'top';\n            const top = firstRect.top;\n            const bottom = lastRect.bottom;\n            const left = isTop ? firstRect.left : lastRect.left;\n            const right = isTop ? firstRect.right : lastRect.right;\n            const width = right - left;\n            const height = bottom - top;\n            return {\n              top,\n              bottom,\n              left,\n              right,\n              width,\n              height,\n              x: left,\n              y: top\n            };\n          }\n          const isLeftSide = getSide(placement) === 'left';\n          const maxRight = max(...clientRects.map(rect => rect.right));\n          const minLeft = min(...clientRects.map(rect => rect.left));\n          const measureRects = clientRects.filter(rect => isLeftSide ? rect.left === minLeft : rect.right === maxRight);\n          const top = measureRects[0].top;\n          const bottom = measureRects[measureRects.length - 1].bottom;\n          const left = minLeft;\n          const right = maxRight;\n          const width = right - left;\n          const height = bottom - top;\n          return {\n            top,\n            bottom,\n            left,\n            right,\n            width,\n            height,\n            x: left,\n            y: top\n          };\n        }\n        return fallback;\n      }\n      const resetRects = await platform.getElementRects({\n        reference: {\n          getBoundingClientRect\n        },\n        floating: elements.floating,\n        strategy\n      });\n      if (rects.reference.x !== resetRects.reference.x || rects.reference.y !== resetRects.reference.y || rects.reference.width !== resetRects.reference.width || rects.reference.height !== resetRects.reference.height) {\n        return {\n          reset: {\n            rects: resetRects\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\nasync function convertValueToCoords(state, value) {\n  const {\n    placement,\n    platform,\n    elements\n  } = state;\n  const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating));\n  const side = getSide(placement);\n  const alignment = getAlignment(placement);\n  const isVertical = getMainAxisFromPlacement(placement) === 'x';\n  const mainAxisMulti = ['left', 'top'].includes(side) ? -1 : 1;\n  const crossAxisMulti = rtl && isVertical ? -1 : 1;\n  const rawValue = typeof value === 'function' ? value(state) : value;\n\n  // eslint-disable-next-line prefer-const\n  let {\n    mainAxis,\n    crossAxis,\n    alignmentAxis\n  } = typeof rawValue === 'number' ? {\n    mainAxis: rawValue,\n    crossAxis: 0,\n    alignmentAxis: null\n  } : {\n    mainAxis: 0,\n    crossAxis: 0,\n    alignmentAxis: null,\n    ...rawValue\n  };\n  if (alignment && typeof alignmentAxis === 'number') {\n    crossAxis = alignment === 'end' ? alignmentAxis * -1 : alignmentAxis;\n  }\n  return isVertical ? {\n    x: crossAxis * crossAxisMulti,\n    y: mainAxis * mainAxisMulti\n  } : {\n    x: mainAxis * mainAxisMulti,\n    y: crossAxis * crossAxisMulti\n  };\n}\n\n/**\n * Modifies the placement by translating the floating element along the\n * specified axes.\n * A number (shorthand for `mainAxis` or distance), or an axes configuration\n * object may be passed.\n * @see https://floating-ui.com/docs/offset\n */\nconst offset = function (value) {\n  if (value === void 0) {\n    value = 0;\n  }\n  return {\n    name: 'offset',\n    options: value,\n    async fn(state) {\n      const {\n        x,\n        y\n      } = state;\n      const diffCoords = await convertValueToCoords(state, value);\n      return {\n        x: x + diffCoords.x,\n        y: y + diffCoords.y,\n        data: diffCoords\n      };\n    }\n  };\n};\n\nfunction getCrossAxis(axis) {\n  return axis === 'x' ? 'y' : 'x';\n}\n\n/**\n * Optimizes the visibility of the floating element by shifting it in order to\n * keep it in view when it will overflow the clipping boundary.\n * @see https://floating-ui.com/docs/shift\n */\nconst shift = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'shift',\n    options,\n    async fn(state) {\n      const {\n        x,\n        y,\n        placement\n      } = state;\n      const {\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = false,\n        limiter = {\n          fn: _ref => {\n            let {\n              x,\n              y\n            } = _ref;\n            return {\n              x,\n              y\n            };\n          }\n        },\n        ...detectOverflowOptions\n      } = options;\n      const coords = {\n        x,\n        y\n      };\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const mainAxis = getMainAxisFromPlacement(getSide(placement));\n      const crossAxis = getCrossAxis(mainAxis);\n      let mainAxisCoord = coords[mainAxis];\n      let crossAxisCoord = coords[crossAxis];\n      if (checkMainAxis) {\n        const minSide = mainAxis === 'y' ? 'top' : 'left';\n        const maxSide = mainAxis === 'y' ? 'bottom' : 'right';\n        const min = mainAxisCoord + overflow[minSide];\n        const max = mainAxisCoord - overflow[maxSide];\n        mainAxisCoord = within(min, mainAxisCoord, max);\n      }\n      if (checkCrossAxis) {\n        const minSide = crossAxis === 'y' ? 'top' : 'left';\n        const maxSide = crossAxis === 'y' ? 'bottom' : 'right';\n        const min = crossAxisCoord + overflow[minSide];\n        const max = crossAxisCoord - overflow[maxSide];\n        crossAxisCoord = within(min, crossAxisCoord, max);\n      }\n      const limitedCoords = limiter.fn({\n        ...state,\n        [mainAxis]: mainAxisCoord,\n        [crossAxis]: crossAxisCoord\n      });\n      return {\n        ...limitedCoords,\n        data: {\n          x: limitedCoords.x - x,\n          y: limitedCoords.y - y\n        }\n      };\n    }\n  };\n};\n/**\n * Built-in `limiter` that will stop `shift()` at a certain point.\n */\nconst limitShift = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    options,\n    fn(state) {\n      const {\n        x,\n        y,\n        placement,\n        rects,\n        middlewareData\n      } = state;\n      const {\n        offset = 0,\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = true\n      } = options;\n      const coords = {\n        x,\n        y\n      };\n      const mainAxis = getMainAxisFromPlacement(placement);\n      const crossAxis = getCrossAxis(mainAxis);\n      let mainAxisCoord = coords[mainAxis];\n      let crossAxisCoord = coords[crossAxis];\n      const rawOffset = typeof offset === 'function' ? offset(state) : offset;\n      const computedOffset = typeof rawOffset === 'number' ? {\n        mainAxis: rawOffset,\n        crossAxis: 0\n      } : {\n        mainAxis: 0,\n        crossAxis: 0,\n        ...rawOffset\n      };\n      if (checkMainAxis) {\n        const len = mainAxis === 'y' ? 'height' : 'width';\n        const limitMin = rects.reference[mainAxis] - rects.floating[len] + computedOffset.mainAxis;\n        const limitMax = rects.reference[mainAxis] + rects.reference[len] - computedOffset.mainAxis;\n        if (mainAxisCoord < limitMin) {\n          mainAxisCoord = limitMin;\n        } else if (mainAxisCoord > limitMax) {\n          mainAxisCoord = limitMax;\n        }\n      }\n      if (checkCrossAxis) {\n        var _middlewareData$offse, _middlewareData$offse2;\n        const len = mainAxis === 'y' ? 'width' : 'height';\n        const isOriginSide = ['top', 'left'].includes(getSide(placement));\n        const limitMin = rects.reference[crossAxis] - rects.floating[len] + (isOriginSide ? ((_middlewareData$offse = middlewareData.offset) == null ? void 0 : _middlewareData$offse[crossAxis]) || 0 : 0) + (isOriginSide ? 0 : computedOffset.crossAxis);\n        const limitMax = rects.reference[crossAxis] + rects.reference[len] + (isOriginSide ? 0 : ((_middlewareData$offse2 = middlewareData.offset) == null ? void 0 : _middlewareData$offse2[crossAxis]) || 0) - (isOriginSide ? computedOffset.crossAxis : 0);\n        if (crossAxisCoord < limitMin) {\n          crossAxisCoord = limitMin;\n        } else if (crossAxisCoord > limitMax) {\n          crossAxisCoord = limitMax;\n        }\n      }\n      return {\n        [mainAxis]: mainAxisCoord,\n        [crossAxis]: crossAxisCoord\n      };\n    }\n  };\n};\n\n/**\n * Provides data that allows you to change the size of the floating element —\n * for instance, prevent it from overflowing the clipping boundary or match the\n * width of the reference element.\n * @see https://floating-ui.com/docs/size\n */\nconst size = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'size',\n    options,\n    async fn(state) {\n      const {\n        placement,\n        rects,\n        platform,\n        elements\n      } = state;\n      const {\n        apply = () => {},\n        ...detectOverflowOptions\n      } = options;\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const side = getSide(placement);\n      const alignment = getAlignment(placement);\n      const axis = getMainAxisFromPlacement(placement);\n      const isXAxis = axis === 'x';\n      const {\n        width,\n        height\n      } = rects.floating;\n      let heightSide;\n      let widthSide;\n      if (side === 'top' || side === 'bottom') {\n        heightSide = side;\n        widthSide = alignment === ((await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating))) ? 'start' : 'end') ? 'left' : 'right';\n      } else {\n        widthSide = side;\n        heightSide = alignment === 'end' ? 'top' : 'bottom';\n      }\n      const overflowAvailableHeight = height - overflow[heightSide];\n      const overflowAvailableWidth = width - overflow[widthSide];\n      const noShift = !state.middlewareData.shift;\n      let availableHeight = overflowAvailableHeight;\n      let availableWidth = overflowAvailableWidth;\n      if (isXAxis) {\n        const maximumClippingWidth = width - overflow.left - overflow.right;\n        availableWidth = alignment || noShift ? min(overflowAvailableWidth, maximumClippingWidth) : maximumClippingWidth;\n      } else {\n        const maximumClippingHeight = height - overflow.top - overflow.bottom;\n        availableHeight = alignment || noShift ? min(overflowAvailableHeight, maximumClippingHeight) : maximumClippingHeight;\n      }\n      if (noShift && !alignment) {\n        const xMin = max(overflow.left, 0);\n        const xMax = max(overflow.right, 0);\n        const yMin = max(overflow.top, 0);\n        const yMax = max(overflow.bottom, 0);\n        if (isXAxis) {\n          availableWidth = width - 2 * (xMin !== 0 || xMax !== 0 ? xMin + xMax : max(overflow.left, overflow.right));\n        } else {\n          availableHeight = height - 2 * (yMin !== 0 || yMax !== 0 ? yMin + yMax : max(overflow.top, overflow.bottom));\n        }\n      }\n      await apply({\n        ...state,\n        availableWidth,\n        availableHeight\n      });\n      const nextDimensions = await platform.getDimensions(elements.floating);\n      if (width !== nextDimensions.width || height !== nextDimensions.height) {\n        return {\n          reset: {\n            rects: true\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\nexport { arrow, autoPlacement, computePosition, detectOverflow, flip, hide, inline, limitShift, offset, rectToClientRect, shift, size };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}