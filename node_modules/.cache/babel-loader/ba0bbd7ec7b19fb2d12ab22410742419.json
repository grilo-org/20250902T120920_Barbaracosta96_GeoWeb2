{"ast":null,"code":"import { __awaiter, __generator } from \"tslib\";\nimport { createCmap } from \"./CMap\";\nimport { deriveFontFlags } from \"./FontFlags\";\nimport PDFHexString from \"../objects/PDFHexString\";\nimport PDFString from \"../objects/PDFString\";\nimport { byAscendingId, Cache, sortedUniq, toHexStringOfMinLength } from \"../../utils\";\n/**\n * A note of thanks to the developers of https://github.com/foliojs/pdfkit, as\n * this class borrows from:\n *   https://github.com/devongovett/pdfkit/blob/e71edab0dd4657b5a767804ba86c94c58d01fbca/lib/image/jpeg.coffee\n */\nvar CustomFontEmbedder = /** @class */function () {\n  function CustomFontEmbedder(font, fontData, customName, fontFeatures) {\n    var _this = this;\n    this.allGlyphsInFontSortedById = function () {\n      var glyphs = new Array(_this.font.characterSet.length);\n      for (var idx = 0, len = glyphs.length; idx < len; idx++) {\n        var codePoint = _this.font.characterSet[idx];\n        glyphs[idx] = _this.font.glyphForCodePoint(codePoint);\n      }\n      return sortedUniq(glyphs.sort(byAscendingId), function (g) {\n        return g.id;\n      });\n    };\n    this.font = font;\n    this.scale = 1000 / this.font.unitsPerEm;\n    this.fontData = fontData;\n    this.fontName = this.font.postscriptName || 'Font';\n    this.customName = customName;\n    this.fontFeatures = fontFeatures;\n    this.baseFontName = '';\n    this.glyphCache = Cache.populatedBy(this.allGlyphsInFontSortedById);\n  }\n  CustomFontEmbedder.for = function (fontkit, fontData, customName, fontFeatures) {\n    return __awaiter(this, void 0, void 0, function () {\n      var font;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4 /*yield*/, fontkit.create(fontData)];\n          case 1:\n            font = _a.sent();\n            return [2 /*return*/, new CustomFontEmbedder(font, fontData, customName, fontFeatures)];\n        }\n      });\n    });\n  };\n  /**\n   * Encode the JavaScript string into this font. (JavaScript encodes strings in\n   * Unicode, but embedded fonts use their own custom encodings)\n   */\n  CustomFontEmbedder.prototype.encodeText = function (text) {\n    var glyphs = this.font.layout(text, this.fontFeatures).glyphs;\n    var hexCodes = new Array(glyphs.length);\n    for (var idx = 0, len = glyphs.length; idx < len; idx++) {\n      hexCodes[idx] = toHexStringOfMinLength(glyphs[idx].id, 4);\n    }\n    return PDFHexString.of(hexCodes.join(''));\n  };\n  // The advanceWidth takes into account kerning automatically, so we don't\n  // have to do that manually like we do for the standard fonts.\n  CustomFontEmbedder.prototype.widthOfTextAtSize = function (text, size) {\n    var glyphs = this.font.layout(text, this.fontFeatures).glyphs;\n    var totalWidth = 0;\n    for (var idx = 0, len = glyphs.length; idx < len; idx++) {\n      totalWidth += glyphs[idx].advanceWidth * this.scale;\n    }\n    var scale = size / 1000;\n    return totalWidth * scale;\n  };\n  CustomFontEmbedder.prototype.heightOfFontAtSize = function (size, options) {\n    if (options === void 0) {\n      options = {};\n    }\n    var _a = options.descender,\n      descender = _a === void 0 ? true : _a;\n    var _b = this.font,\n      ascent = _b.ascent,\n      descent = _b.descent,\n      bbox = _b.bbox;\n    var yTop = (ascent || bbox.maxY) * this.scale;\n    var yBottom = (descent || bbox.minY) * this.scale;\n    var height = yTop - yBottom;\n    if (!descender) height -= Math.abs(descent) || 0;\n    return height / 1000 * size;\n  };\n  CustomFontEmbedder.prototype.sizeOfFontAtHeight = function (height) {\n    var _a = this.font,\n      ascent = _a.ascent,\n      descent = _a.descent,\n      bbox = _a.bbox;\n    var yTop = (ascent || bbox.maxY) * this.scale;\n    var yBottom = (descent || bbox.minY) * this.scale;\n    return 1000 * height / (yTop - yBottom);\n  };\n  CustomFontEmbedder.prototype.embedIntoContext = function (context, ref) {\n    this.baseFontName = this.customName || context.addRandomSuffix(this.fontName);\n    return this.embedFontDict(context, ref);\n  };\n  CustomFontEmbedder.prototype.embedFontDict = function (context, ref) {\n    return __awaiter(this, void 0, void 0, function () {\n      var cidFontDictRef, unicodeCMapRef, fontDict;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4 /*yield*/, this.embedCIDFontDict(context)];\n          case 1:\n            cidFontDictRef = _a.sent();\n            unicodeCMapRef = this.embedUnicodeCmap(context);\n            fontDict = context.obj({\n              Type: 'Font',\n              Subtype: 'Type0',\n              BaseFont: this.baseFontName,\n              Encoding: 'Identity-H',\n              DescendantFonts: [cidFontDictRef],\n              ToUnicode: unicodeCMapRef\n            });\n            if (ref) {\n              context.assign(ref, fontDict);\n              return [2 /*return*/, ref];\n            } else {\n              return [2 /*return*/, context.register(fontDict)];\n            }\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n\n  CustomFontEmbedder.prototype.isCFF = function () {\n    return this.font.cff;\n  };\n  CustomFontEmbedder.prototype.embedCIDFontDict = function (context) {\n    return __awaiter(this, void 0, void 0, function () {\n      var fontDescriptorRef, cidFontDict;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4 /*yield*/, this.embedFontDescriptor(context)];\n          case 1:\n            fontDescriptorRef = _a.sent();\n            cidFontDict = context.obj({\n              Type: 'Font',\n              Subtype: this.isCFF() ? 'CIDFontType0' : 'CIDFontType2',\n              CIDToGIDMap: 'Identity',\n              BaseFont: this.baseFontName,\n              CIDSystemInfo: {\n                Registry: PDFString.of('Adobe'),\n                Ordering: PDFString.of('Identity'),\n                Supplement: 0\n              },\n              FontDescriptor: fontDescriptorRef,\n              W: this.computeWidths()\n            });\n            return [2 /*return*/, context.register(cidFontDict)];\n        }\n      });\n    });\n  };\n  CustomFontEmbedder.prototype.embedFontDescriptor = function (context) {\n    return __awaiter(this, void 0, void 0, function () {\n      var fontStreamRef, scale, _a, italicAngle, ascent, descent, capHeight, xHeight, _b, minX, minY, maxX, maxY, fontDescriptor;\n      var _c;\n      return __generator(this, function (_d) {\n        switch (_d.label) {\n          case 0:\n            return [4 /*yield*/, this.embedFontStream(context)];\n          case 1:\n            fontStreamRef = _d.sent();\n            scale = this.scale;\n            _a = this.font, italicAngle = _a.italicAngle, ascent = _a.ascent, descent = _a.descent, capHeight = _a.capHeight, xHeight = _a.xHeight;\n            _b = this.font.bbox, minX = _b.minX, minY = _b.minY, maxX = _b.maxX, maxY = _b.maxY;\n            fontDescriptor = context.obj((_c = {\n              Type: 'FontDescriptor',\n              FontName: this.baseFontName,\n              Flags: deriveFontFlags(this.font),\n              FontBBox: [minX * scale, minY * scale, maxX * scale, maxY * scale],\n              ItalicAngle: italicAngle,\n              Ascent: ascent * scale,\n              Descent: descent * scale,\n              CapHeight: (capHeight || ascent) * scale,\n              XHeight: (xHeight || 0) * scale,\n              // Not sure how to compute/find this, nor is anybody else really:\n              // https://stackoverflow.com/questions/35485179/stemv-value-of-the-truetype-font\n              StemV: 0\n            }, _c[this.isCFF() ? 'FontFile3' : 'FontFile2'] = fontStreamRef, _c));\n            return [2 /*return*/, context.register(fontDescriptor)];\n        }\n      });\n    });\n  };\n  CustomFontEmbedder.prototype.serializeFont = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        return [2 /*return*/, this.fontData];\n      });\n    });\n  };\n  CustomFontEmbedder.prototype.embedFontStream = function (context) {\n    return __awaiter(this, void 0, void 0, function () {\n      var fontStream, _a, _b;\n      return __generator(this, function (_c) {\n        switch (_c.label) {\n          case 0:\n            _b = (_a = context).flateStream;\n            return [4 /*yield*/, this.serializeFont()];\n          case 1:\n            fontStream = _b.apply(_a, [_c.sent(), {\n              Subtype: this.isCFF() ? 'CIDFontType0C' : undefined\n            }]);\n            return [2 /*return*/, context.register(fontStream)];\n        }\n      });\n    });\n  };\n  CustomFontEmbedder.prototype.embedUnicodeCmap = function (context) {\n    var cmap = createCmap(this.glyphCache.access(), this.glyphId.bind(this));\n    var cmapStream = context.flateStream(cmap);\n    return context.register(cmapStream);\n  };\n  CustomFontEmbedder.prototype.glyphId = function (glyph) {\n    return glyph ? glyph.id : -1;\n  };\n  CustomFontEmbedder.prototype.computeWidths = function () {\n    var glyphs = this.glyphCache.access();\n    var widths = [];\n    var currSection = [];\n    for (var idx = 0, len = glyphs.length; idx < len; idx++) {\n      var currGlyph = glyphs[idx];\n      var prevGlyph = glyphs[idx - 1];\n      var currGlyphId = this.glyphId(currGlyph);\n      var prevGlyphId = this.glyphId(prevGlyph);\n      if (idx === 0) {\n        widths.push(currGlyphId);\n      } else if (currGlyphId - prevGlyphId !== 1) {\n        widths.push(currSection);\n        widths.push(currGlyphId);\n        currSection = [];\n      }\n      currSection.push(currGlyph.advanceWidth * this.scale);\n    }\n    widths.push(currSection);\n    return widths;\n  };\n  return CustomFontEmbedder;\n}();\nexport default CustomFontEmbedder;","map":{"version":3,"mappings":"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","names":["createCmap","deriveFontFlags","PDFHexString","PDFString","byAscendingId","Cache","sortedUniq","toHexStringOfMinLength","font","fontData","customName","fontFeatures","glyphs","Array","_this","characterSet","length","idx","len","codePoint","glyphForCodePoint","sort","g","id","scale","unitsPerEm","fontName","postscriptName","baseFontName","glyphCache","populatedBy","allGlyphsInFontSortedById","CustomFontEmbedder","fontkit","create","_a","text","layout","hexCodes","of","join","size","totalWidth","advanceWidth","options","descender","ascent","descent","bbox","yTop","maxY","yBottom","minY","height","Math","abs","context","ref","addRandomSuffix","embedFontDict","embedCIDFontDict","cidFontDictRef","unicodeCMapRef","embedUnicodeCmap","fontDict","obj","Type","Subtype","BaseFont","Encoding","DescendantFonts","ToUnicode","assign","register","cff","embedFontDescriptor","fontDescriptorRef","cidFontDict","isCFF","CIDToGIDMap","CIDSystemInfo","Registry","Ordering","Supplement","FontDescriptor","W","computeWidths","embedFontStream","fontStreamRef","_d","italicAngle","capHeight","xHeight","_b","minX","maxX","fontDescriptor","FontName","Flags","FontBBox","ItalicAngle","Ascent","Descent","CapHeight","XHeight","StemV","_c","flateStream","serializeFont","fontStream","undefined","cmap","access","glyphId","bind","cmapStream","glyph","widths","currSection","currGlyph","prevGlyph","currGlyphId","prevGlyphId","push"],"sourceRoot":"","sources":["../../../src/core/embedders/CustomFontEmbedder.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}