{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { PrivateConstructorError } from \"../errors\";\nimport PDFObject from \"./PDFObject\";\nimport CharCodes from \"../syntax/CharCodes\";\nimport { IsIrregular } from \"../syntax/Irregular\";\nimport { charFromHexCode, copyStringIntoBuffer, toCharCode, toHexString } from \"../../utils\";\nvar decodeName = function (name) {\n  return name.replace(/#([\\dABCDEF]{2})/g, function (_, hex) {\n    return charFromHexCode(hex);\n  });\n};\nvar isRegularChar = function (charCode) {\n  return charCode >= CharCodes.ExclamationPoint && charCode <= CharCodes.Tilde && !IsIrregular[charCode];\n};\nvar ENFORCER = {};\nvar pool = new Map();\nvar PDFName = /** @class */function (_super) {\n  __extends(PDFName, _super);\n  function PDFName(enforcer, name) {\n    var _this = this;\n    if (enforcer !== ENFORCER) throw new PrivateConstructorError('PDFName');\n    _this = _super.call(this) || this;\n    var encodedName = '/';\n    for (var idx = 0, len = name.length; idx < len; idx++) {\n      var character = name[idx];\n      var code = toCharCode(character);\n      encodedName += isRegularChar(code) ? character : \"#\" + toHexString(code);\n    }\n    _this.encodedName = encodedName;\n    return _this;\n  }\n  PDFName.prototype.asBytes = function () {\n    var bytes = [];\n    var hex = '';\n    var escaped = false;\n    var pushByte = function (byte) {\n      if (byte !== undefined) bytes.push(byte);\n      escaped = false;\n    };\n    for (var idx = 1, len = this.encodedName.length; idx < len; idx++) {\n      var char = this.encodedName[idx];\n      var byte = toCharCode(char);\n      var nextChar = this.encodedName[idx + 1];\n      if (!escaped) {\n        if (byte === CharCodes.Hash) escaped = true;else pushByte(byte);\n      } else {\n        if (byte >= CharCodes.Zero && byte <= CharCodes.Nine || byte >= CharCodes.a && byte <= CharCodes.f || byte >= CharCodes.A && byte <= CharCodes.F) {\n          hex += char;\n          if (hex.length === 2 || !(nextChar >= '0' && nextChar <= '9' || nextChar >= 'a' && nextChar <= 'f' || nextChar >= 'A' && nextChar <= 'F')) {\n            pushByte(parseInt(hex, 16));\n            hex = '';\n          }\n        } else {\n          pushByte(byte);\n        }\n      }\n    }\n    return new Uint8Array(bytes);\n  };\n  // TODO: This should probably use `utf8Decode()`\n  // TODO: Polyfill Array.from?\n  PDFName.prototype.decodeText = function () {\n    var bytes = this.asBytes();\n    return String.fromCharCode.apply(String, Array.from(bytes));\n  };\n  PDFName.prototype.asString = function () {\n    return this.encodedName;\n  };\n  /** @deprecated in favor of [[PDFName.asString]] */\n  PDFName.prototype.value = function () {\n    return this.encodedName;\n  };\n  PDFName.prototype.clone = function () {\n    return this;\n  };\n  PDFName.prototype.toString = function () {\n    return this.encodedName;\n  };\n  PDFName.prototype.sizeInBytes = function () {\n    return this.encodedName.length;\n  };\n  PDFName.prototype.copyBytesInto = function (buffer, offset) {\n    offset += copyStringIntoBuffer(this.encodedName, buffer, offset);\n    return this.encodedName.length;\n  };\n  PDFName.of = function (name) {\n    var decodedValue = decodeName(name);\n    var instance = pool.get(decodedValue);\n    if (!instance) {\n      instance = new PDFName(ENFORCER, decodedValue);\n      pool.set(decodedValue, instance);\n    }\n    return instance;\n  };\n  /* tslint:disable member-ordering */\n  PDFName.Length = PDFName.of('Length');\n  PDFName.FlateDecode = PDFName.of('FlateDecode');\n  PDFName.Resources = PDFName.of('Resources');\n  PDFName.Font = PDFName.of('Font');\n  PDFName.XObject = PDFName.of('XObject');\n  PDFName.ExtGState = PDFName.of('ExtGState');\n  PDFName.Contents = PDFName.of('Contents');\n  PDFName.Type = PDFName.of('Type');\n  PDFName.Parent = PDFName.of('Parent');\n  PDFName.MediaBox = PDFName.of('MediaBox');\n  PDFName.Page = PDFName.of('Page');\n  PDFName.Annots = PDFName.of('Annots');\n  PDFName.TrimBox = PDFName.of('TrimBox');\n  PDFName.ArtBox = PDFName.of('ArtBox');\n  PDFName.BleedBox = PDFName.of('BleedBox');\n  PDFName.CropBox = PDFName.of('CropBox');\n  PDFName.Rotate = PDFName.of('Rotate');\n  PDFName.Title = PDFName.of('Title');\n  PDFName.Author = PDFName.of('Author');\n  PDFName.Subject = PDFName.of('Subject');\n  PDFName.Creator = PDFName.of('Creator');\n  PDFName.Keywords = PDFName.of('Keywords');\n  PDFName.Producer = PDFName.of('Producer');\n  PDFName.CreationDate = PDFName.of('CreationDate');\n  PDFName.ModDate = PDFName.of('ModDate');\n  return PDFName;\n}(PDFObject);\nexport default PDFName;","map":{"version":3,"mappings":"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","names":["PrivateConstructorError","PDFObject","CharCodes","IsIrregular","charFromHexCode","copyStringIntoBuffer","toCharCode","toHexString","decodeName","name","replace","_","hex","isRegularChar","charCode","ExclamationPoint","Tilde","ENFORCER","pool","Map","__extends","enforcer","_this","encodedName","idx","len","length","character","code","PDFName","bytes","escaped","pushByte","byte","undefined","push","char","nextChar","Hash","Zero","Nine","a","f","A","F","parseInt","Uint8Array","asBytes","String","fromCharCode","Array","from","buffer","offset","decodedValue","instance","get","set","of"],"sourceRoot":"","sources":["../../../src/core/objects/PDFName.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}