{"ast":null,"code":"import { __extends } from \"tslib\";\nimport PDFFlateStream from \"./PDFFlateStream\";\nimport CharCodes from \"../syntax/CharCodes\";\nvar PDFContentStream = /** @class */function (_super) {\n  __extends(PDFContentStream, _super);\n  function PDFContentStream(dict, operators, encode) {\n    if (encode === void 0) {\n      encode = true;\n    }\n    var _this = _super.call(this, dict, encode) || this;\n    _this.operators = operators;\n    return _this;\n  }\n  PDFContentStream.prototype.push = function () {\n    var _a;\n    var operators = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n      operators[_i] = arguments[_i];\n    }\n    (_a = this.operators).push.apply(_a, operators);\n  };\n  PDFContentStream.prototype.clone = function (context) {\n    var operators = new Array(this.operators.length);\n    for (var idx = 0, len = this.operators.length; idx < len; idx++) {\n      operators[idx] = this.operators[idx].clone(context);\n    }\n    var _a = this,\n      dict = _a.dict,\n      encode = _a.encode;\n    return PDFContentStream.of(dict.clone(context), operators, encode);\n  };\n  PDFContentStream.prototype.getContentsString = function () {\n    var value = '';\n    for (var idx = 0, len = this.operators.length; idx < len; idx++) {\n      value += this.operators[idx] + \"\\n\";\n    }\n    return value;\n  };\n  PDFContentStream.prototype.getUnencodedContents = function () {\n    var buffer = new Uint8Array(this.getUnencodedContentsSize());\n    var offset = 0;\n    for (var idx = 0, len = this.operators.length; idx < len; idx++) {\n      offset += this.operators[idx].copyBytesInto(buffer, offset);\n      buffer[offset++] = CharCodes.Newline;\n    }\n    return buffer;\n  };\n  PDFContentStream.prototype.getUnencodedContentsSize = function () {\n    var size = 0;\n    for (var idx = 0, len = this.operators.length; idx < len; idx++) {\n      size += this.operators[idx].sizeInBytes() + 1;\n    }\n    return size;\n  };\n  PDFContentStream.of = function (dict, operators, encode) {\n    if (encode === void 0) {\n      encode = true;\n    }\n    return new PDFContentStream(dict, operators, encode);\n  };\n  return PDFContentStream;\n}(PDFFlateStream);\nexport default PDFContentStream;","map":{"version":3,"mappings":";AAGA,OAAOA,cAAc;AACrB,OAAOC,SAAS;AAEhB;EAA+BC;EAM7B,0BAAoBC,IAAa,EAAEC,SAAwB,EAAEC,MAAa;IAAb;MAAAA,aAAa;IAAA;IAA1E,YACEC,kBAAMH,IAAI,EAAEE,MAAM,CAAC;IACnBE,KAAI,CAACH,SAAS,GAAGA,SAAS;;EAC5B;EAEAI,+BAAI,GAAJ;;IAAK;SAAA,UAA2B,EAA3BC,qBAA2B,EAA3BA,IAA2B;MAA3BL;;IACH,UAAI,CAACA,SAAS,EAACM,IAAI,WAAIN,SAAS;EAClC,CAAC;EAEDI,gCAAK,GAAL,UAAMG,OAAoB;IACxB,IAAMP,SAAS,GAAG,IAAIQ,KAAK,CAAC,IAAI,CAACR,SAAS,CAACS,MAAM,CAAC;IAClD,KAAK,IAAIC,GAAG,GAAG,CAAC,EAAEC,GAAG,GAAG,IAAI,CAACX,SAAS,CAACS,MAAM,EAAEC,GAAG,GAAGC,GAAG,EAAED,GAAG,EAAE,EAAE;MAC/DV,SAAS,CAACU,GAAG,CAAC,GAAG,IAAI,CAACV,SAAS,CAACU,GAAG,CAAC,CAACE,KAAK,CAACL,OAAO,CAAC;;IAE/C,SAAmB,IAAI;MAArBR,IAAI;MAAEE,MAAM,YAAS;IAC7B,OAAOG,gBAAgB,CAACS,EAAE,CAACd,IAAI,CAACa,KAAK,CAACL,OAAO,CAAC,EAAEP,SAAS,EAAEC,MAAM,CAAC;EACpE,CAAC;EAEDG,4CAAiB,GAAjB;IACE,IAAIU,KAAK,GAAG,EAAE;IACd,KAAK,IAAIJ,GAAG,GAAG,CAAC,EAAEC,GAAG,GAAG,IAAI,CAACX,SAAS,CAACS,MAAM,EAAEC,GAAG,GAAGC,GAAG,EAAED,GAAG,EAAE,EAAE;MAC/DI,KAAK,IAAO,IAAI,CAACd,SAAS,CAACU,GAAG,CAAC,OAAI;;IAErC,OAAOI,KAAK;EACd,CAAC;EAEDV,+CAAoB,GAApB;IACE,IAAMW,MAAM,GAAG,IAAIC,UAAU,CAAC,IAAI,CAACC,wBAAwB,EAAE,CAAC;IAC9D,IAAIC,MAAM,GAAG,CAAC;IACd,KAAK,IAAIR,GAAG,GAAG,CAAC,EAAEC,GAAG,GAAG,IAAI,CAACX,SAAS,CAACS,MAAM,EAAEC,GAAG,GAAGC,GAAG,EAAED,GAAG,EAAE,EAAE;MAC/DQ,MAAM,IAAI,IAAI,CAAClB,SAAS,CAACU,GAAG,CAAC,CAACS,aAAa,CAACJ,MAAM,EAAEG,MAAM,CAAC;MAC3DH,MAAM,CAACG,MAAM,EAAE,CAAC,GAAGrB,SAAS,CAACuB,OAAO;;IAEtC,OAAOL,MAAM;EACf,CAAC;EAEDX,mDAAwB,GAAxB;IACE,IAAIiB,IAAI,GAAG,CAAC;IACZ,KAAK,IAAIX,GAAG,GAAG,CAAC,EAAEC,GAAG,GAAG,IAAI,CAACX,SAAS,CAACS,MAAM,EAAEC,GAAG,GAAGC,GAAG,EAAED,GAAG,EAAE,EAAE;MAC/DW,IAAI,IAAI,IAAI,CAACrB,SAAS,CAACU,GAAG,CAAC,CAACY,WAAW,EAAE,GAAG,CAAC;;IAE/C,OAAOD,IAAI;EACb,CAAC;EA/CMjB,mBAAE,GAAG,UAACL,IAAa,EAAEC,SAAwB,EAAEC,MAAa;IAAb;MAAAA,aAAa;IAAA;IACjE,WAAIG,gBAAgB,CAACL,IAAI,EAAEC,SAAS,EAAEC,MAAM,CAAC;EAA7C,CAA6C;EA+CjD,uBAAC;CAAA,CAjD8BL,cAAc;AAmD7C,eAAeQ,gBAAgB","names":["PDFFlateStream","CharCodes","__extends","dict","operators","encode","_super","_this","PDFContentStream","_i","push","context","Array","length","idx","len","clone","of","value","buffer","Uint8Array","getUnencodedContentsSize","offset","copyBytesInto","Newline","size","sizeInBytes"],"sourceRoot":"","sources":["../../../src/core/structures/PDFContentStream.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}