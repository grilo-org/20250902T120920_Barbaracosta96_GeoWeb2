{"ast":null,"code":"import { PDFDocument, StandardFonts, rgb } from 'pdf-lib';\n// import htmlToPdfmake from 'html-to-pdfmake'\n\nfunction itemsPDF(clientes, perfuracoe, material) {\n  const pdfDoc = PDFDocument.create();\n\n  // Embed the Times Roman font\n\n  // Add a blank page to the document\n  const page = pdfDoc.addPage();\n\n  // Get the width and height of the page\n  const {\n    width,\n    height\n  } = page.getSize();\n\n  // Draw a string of text toward the top of the page\n  const fontSize = 30;\n  page.drawText('Creating PDFs in JavaScript is awesome!', {\n    x: 50,\n    y: height - 4 * fontSize,\n    size: fontSize,\n    color: rgb(0, 0.53, 0.71)\n  });\n\n  // Serialize the PDFDocument to bytes (a Uint8Array)\n  const pdfBytes = pdfDoc.save();\n\n  // For example, `pdfBytes` can be:\n  //   • Written to a file in Node\n  //   • Downloaded from the browser\n  //   • Rendered in an <iframe>\n}\n\nexport default itemsPDF;","map":{"version":3,"names":["PDFDocument","StandardFonts","rgb","itemsPDF","clientes","perfuracoe","material","pdfDoc","create","page","addPage","width","height","getSize","fontSize","drawText","x","y","size","color","pdfBytes","save"],"sources":["C:/Users/sulli/Git/GeoWeb/src/app/Reports/Clientes/clientes.jsx"],"sourcesContent":["\r\n\r\nimport { PDFDocument, StandardFonts, rgb } from 'pdf-lib'\r\n// import htmlToPdfmake from 'html-to-pdfmake'\r\n\r\n\r\nfunction itemsPDF(clientes, perfuracoe, material) {\r\n    const pdfDoc = PDFDocument.create()\r\n\r\n    // Embed the Times Roman font\r\n\r\n    \r\n    // Add a blank page to the document\r\n    const page = pdfDoc.addPage()\r\n    \r\n    // Get the width and height of the page\r\n    const { width, height } = page.getSize()\r\n    \r\n    // Draw a string of text toward the top of the page\r\n    const fontSize = 30\r\n    page.drawText('Creating PDFs in JavaScript is awesome!', {\r\n      x: 50,\r\n      y: height - 4 * fontSize,\r\n      size: fontSize,\r\n \r\n      color: rgb(0, 0.53, 0.71),\r\n    })\r\n    \r\n    // Serialize the PDFDocument to bytes (a Uint8Array)\r\n    const pdfBytes = pdfDoc.save()\r\n    \r\n    // For example, `pdfBytes` can be:\r\n    //   • Written to a file in Node\r\n    //   • Downloaded from the browser\r\n    //   • Rendered in an <iframe>\r\n  }\r\nexport default itemsPDF;"],"mappings":"AAEA,SAASA,WAAW,EAAEC,aAAa,EAAEC,GAAG,QAAQ,SAAS;AACzD;;AAGA,SAASC,QAAQ,CAACC,QAAQ,EAAEC,UAAU,EAAEC,QAAQ,EAAE;EAC9C,MAAMC,MAAM,GAAGP,WAAW,CAACQ,MAAM,EAAE;;EAEnC;;EAGA;EACA,MAAMC,IAAI,GAAGF,MAAM,CAACG,OAAO,EAAE;;EAE7B;EACA,MAAM;IAAEC,KAAK;IAAEC;EAAO,CAAC,GAAGH,IAAI,CAACI,OAAO,EAAE;;EAExC;EACA,MAAMC,QAAQ,GAAG,EAAE;EACnBL,IAAI,CAACM,QAAQ,CAAC,yCAAyC,EAAE;IACvDC,CAAC,EAAE,EAAE;IACLC,CAAC,EAAEL,MAAM,GAAG,CAAC,GAAGE,QAAQ;IACxBI,IAAI,EAAEJ,QAAQ;IAEdK,KAAK,EAAEjB,GAAG,CAAC,CAAC,EAAE,IAAI,EAAE,IAAI;EAC1B,CAAC,CAAC;;EAEF;EACA,MAAMkB,QAAQ,GAAGb,MAAM,CAACc,IAAI,EAAE;;EAE9B;EACA;EACA;EACA;AACF;;AACF,eAAelB,QAAQ"},"metadata":{},"sourceType":"module"}