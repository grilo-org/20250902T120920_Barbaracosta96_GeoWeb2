{"ast":null,"code":"import { __awaiter, __extends, __generator } from \"tslib\";\nimport PDFHeader from \"../document/PDFHeader\";\nimport PDFTrailer from \"../document/PDFTrailer\";\nimport PDFInvalidObject from \"../objects/PDFInvalidObject\";\nimport PDFName from \"../objects/PDFName\";\nimport PDFNumber from \"../objects/PDFNumber\";\nimport PDFRef from \"../objects/PDFRef\";\nimport PDFStream from \"../objects/PDFStream\";\nimport PDFCrossRefStream from \"../structures/PDFCrossRefStream\";\nimport PDFObjectStream from \"../structures/PDFObjectStream\";\nimport PDFWriter from \"./PDFWriter\";\nimport { last, waitForTick } from \"../../utils\";\nvar PDFStreamWriter = /** @class */function (_super) {\n  __extends(PDFStreamWriter, _super);\n  function PDFStreamWriter(context, objectsPerTick, encodeStreams, objectsPerStream) {\n    var _this = _super.call(this, context, objectsPerTick) || this;\n    _this.encodeStreams = encodeStreams;\n    _this.objectsPerStream = objectsPerStream;\n    return _this;\n  }\n  PDFStreamWriter.prototype.computeBufferSize = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var objectNumber, header, size, xrefStream, uncompressedObjects, compressedObjects, objectStreamRefs, indirectObjects, idx, len, indirectObject, ref, object, shouldNotCompress, chunk, objectStreamRef, idx, len, chunk, ref, objectStream, xrefStreamRef, xrefOffset, trailer;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            objectNumber = this.context.largestObjectNumber + 1;\n            header = PDFHeader.forVersion(1, 7);\n            size = header.sizeInBytes() + 2;\n            xrefStream = PDFCrossRefStream.create(this.createTrailerDict(), this.encodeStreams);\n            uncompressedObjects = [];\n            compressedObjects = [];\n            objectStreamRefs = [];\n            indirectObjects = this.context.enumerateIndirectObjects();\n            idx = 0, len = indirectObjects.length;\n            _a.label = 1;\n          case 1:\n            if (!(idx < len)) return [3 /*break*/, 6];\n            indirectObject = indirectObjects[idx];\n            ref = indirectObject[0], object = indirectObject[1];\n            shouldNotCompress = ref === this.context.trailerInfo.Encrypt || object instanceof PDFStream || object instanceof PDFInvalidObject || ref.generationNumber !== 0;\n            if (!shouldNotCompress) return [3 /*break*/, 4];\n            uncompressedObjects.push(indirectObject);\n            xrefStream.addUncompressedEntry(ref, size);\n            size += this.computeIndirectObjectSize(indirectObject);\n            if (!this.shouldWaitForTick(1)) return [3 /*break*/, 3];\n            return [4 /*yield*/, waitForTick()];\n          case 2:\n            _a.sent();\n            _a.label = 3;\n          case 3:\n            return [3 /*break*/, 5];\n          case 4:\n            chunk = last(compressedObjects);\n            objectStreamRef = last(objectStreamRefs);\n            if (!chunk || chunk.length % this.objectsPerStream === 0) {\n              chunk = [];\n              compressedObjects.push(chunk);\n              objectStreamRef = PDFRef.of(objectNumber++);\n              objectStreamRefs.push(objectStreamRef);\n            }\n            xrefStream.addCompressedEntry(ref, objectStreamRef, chunk.length);\n            chunk.push(indirectObject);\n            _a.label = 5;\n          case 5:\n            idx++;\n            return [3 /*break*/, 1];\n          case 6:\n            idx = 0, len = compressedObjects.length;\n            _a.label = 7;\n          case 7:\n            if (!(idx < len)) return [3 /*break*/, 10];\n            chunk = compressedObjects[idx];\n            ref = objectStreamRefs[idx];\n            objectStream = PDFObjectStream.withContextAndObjects(this.context, chunk, this.encodeStreams);\n            xrefStream.addUncompressedEntry(ref, size);\n            size += this.computeIndirectObjectSize([ref, objectStream]);\n            uncompressedObjects.push([ref, objectStream]);\n            if (!this.shouldWaitForTick(chunk.length)) return [3 /*break*/, 9];\n            return [4 /*yield*/, waitForTick()];\n          case 8:\n            _a.sent();\n            _a.label = 9;\n          case 9:\n            idx++;\n            return [3 /*break*/, 7];\n          case 10:\n            xrefStreamRef = PDFRef.of(objectNumber++);\n            xrefStream.dict.set(PDFName.of('Size'), PDFNumber.of(objectNumber));\n            xrefStream.addUncompressedEntry(xrefStreamRef, size);\n            xrefOffset = size;\n            size += this.computeIndirectObjectSize([xrefStreamRef, xrefStream]);\n            uncompressedObjects.push([xrefStreamRef, xrefStream]);\n            trailer = PDFTrailer.forLastCrossRefSectionOffset(xrefOffset);\n            size += trailer.sizeInBytes();\n            return [2 /*return*/, {\n              size: size,\n              header: header,\n              indirectObjects: uncompressedObjects,\n              trailer: trailer\n            }];\n        }\n      });\n    });\n  };\n  PDFStreamWriter.forContext = function (context, objectsPerTick, encodeStreams, objectsPerStream) {\n    if (encodeStreams === void 0) {\n      encodeStreams = true;\n    }\n    if (objectsPerStream === void 0) {\n      objectsPerStream = 50;\n    }\n    return new PDFStreamWriter(context, objectsPerTick, encodeStreams, objectsPerStream);\n  };\n  return PDFStreamWriter;\n}(PDFWriter);\nexport default PDFStreamWriter;","map":{"version":3,"mappings":"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","names":["PDFHeader","PDFTrailer","PDFInvalidObject","PDFName","PDFNumber","PDFRef","PDFStream","PDFCrossRefStream","PDFObjectStream","PDFWriter","last","waitForTick","__extends","context","objectsPerTick","encodeStreams","objectsPerStream","_super","_this","PDFStreamWriter","objectNumber","largestObjectNumber","header","forVersion","size","sizeInBytes","xrefStream","create","createTrailerDict","uncompressedObjects","compressedObjects","objectStreamRefs","indirectObjects","enumerateIndirectObjects","idx","len","length","indirectObject","ref","object","shouldNotCompress","trailerInfo","Encrypt","generationNumber","push","addUncompressedEntry","computeIndirectObjectSize","shouldWaitForTick","_a","chunk","objectStreamRef","of","addCompressedEntry","objectStream","withContextAndObjects","xrefStreamRef","dict","set","xrefOffset","trailer","forLastCrossRefSectionOffset"],"sourceRoot":"","sources":["../../../src/core/writers/PDFStreamWriter.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}