{"ast":null,"code":"import { ReparseError } from \"../errors\";\nimport PDFArray from \"../objects/PDFArray\";\nimport PDFName from \"../objects/PDFName\";\nimport PDFNumber from \"../objects/PDFNumber\";\nimport PDFRef from \"../objects/PDFRef\";\nimport ByteStream from \"./ByteStream\";\nvar PDFXRefStreamParser = /** @class */function () {\n  function PDFXRefStreamParser(rawStream) {\n    this.alreadyParsed = false;\n    this.dict = rawStream.dict;\n    this.bytes = ByteStream.fromPDFRawStream(rawStream);\n    this.context = this.dict.context;\n    var Size = this.dict.lookup(PDFName.of('Size'), PDFNumber);\n    var Index = this.dict.lookup(PDFName.of('Index'));\n    if (Index instanceof PDFArray) {\n      this.subsections = [];\n      for (var idx = 0, len = Index.size(); idx < len; idx += 2) {\n        var firstObjectNumber = Index.lookup(idx + 0, PDFNumber).asNumber();\n        var length_1 = Index.lookup(idx + 1, PDFNumber).asNumber();\n        this.subsections.push({\n          firstObjectNumber: firstObjectNumber,\n          length: length_1\n        });\n      }\n    } else {\n      this.subsections = [{\n        firstObjectNumber: 0,\n        length: Size.asNumber()\n      }];\n    }\n    var W = this.dict.lookup(PDFName.of('W'), PDFArray);\n    this.byteWidths = [-1, -1, -1];\n    for (var idx = 0, len = W.size(); idx < len; idx++) {\n      this.byteWidths[idx] = W.lookup(idx, PDFNumber).asNumber();\n    }\n  }\n  PDFXRefStreamParser.prototype.parseIntoContext = function () {\n    if (this.alreadyParsed) {\n      throw new ReparseError('PDFXRefStreamParser', 'parseIntoContext');\n    }\n    this.alreadyParsed = true;\n    this.context.trailerInfo = {\n      Root: this.dict.get(PDFName.of('Root')),\n      Encrypt: this.dict.get(PDFName.of('Encrypt')),\n      Info: this.dict.get(PDFName.of('Info')),\n      ID: this.dict.get(PDFName.of('ID'))\n    };\n    var entries = this.parseEntries();\n    // for (let idx = 0, len = entries.length; idx < len; idx++) {\n    // const entry = entries[idx];\n    // if (entry.deleted) this.context.delete(entry.ref);\n    // }\n    return entries;\n  };\n  PDFXRefStreamParser.prototype.parseEntries = function () {\n    var entries = [];\n    var _a = this.byteWidths,\n      typeFieldWidth = _a[0],\n      offsetFieldWidth = _a[1],\n      genFieldWidth = _a[2];\n    for (var subsectionIdx = 0, subsectionLen = this.subsections.length; subsectionIdx < subsectionLen; subsectionIdx++) {\n      var _b = this.subsections[subsectionIdx],\n        firstObjectNumber = _b.firstObjectNumber,\n        length_2 = _b.length;\n      for (var objIdx = 0; objIdx < length_2; objIdx++) {\n        var type = 0;\n        for (var idx = 0, len = typeFieldWidth; idx < len; idx++) {\n          type = type << 8 | this.bytes.next();\n        }\n        var offset = 0;\n        for (var idx = 0, len = offsetFieldWidth; idx < len; idx++) {\n          offset = offset << 8 | this.bytes.next();\n        }\n        var generationNumber = 0;\n        for (var idx = 0, len = genFieldWidth; idx < len; idx++) {\n          generationNumber = generationNumber << 8 | this.bytes.next();\n        }\n        // When the `type` field is absent, it defaults to 1\n        if (typeFieldWidth === 0) type = 1;\n        var objectNumber = firstObjectNumber + objIdx;\n        var entry = {\n          ref: PDFRef.of(objectNumber, generationNumber),\n          offset: offset,\n          deleted: type === 0,\n          inObjectStream: type === 2\n        };\n        entries.push(entry);\n      }\n    }\n    return entries;\n  };\n  PDFXRefStreamParser.forStream = function (rawStream) {\n    return new PDFXRefStreamParser(rawStream);\n  };\n  return PDFXRefStreamParser;\n}();\nexport default PDFXRefStreamParser;","map":{"version":3,"mappings":"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","names":["ReparseError","PDFArray","PDFName","PDFNumber","PDFRef","ByteStream","rawStream","alreadyParsed","dict","bytes","fromPDFRawStream","context","Size","lookup","of","Index","subsections","idx","len","size","firstObjectNumber","asNumber","length_1","push","length","W","byteWidths","PDFXRefStreamParser","trailerInfo","Root","get","Encrypt","Info","ID","entries","parseEntries","typeFieldWidth","offsetFieldWidth","genFieldWidth","subsectionIdx","subsectionLen","length_2","objIdx","type","next","offset","generationNumber","objectNumber","entry","ref","deleted","inObjectStream"],"sourceRoot":"","sources":["../../../src/core/parser/PDFXRefStreamParser.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}