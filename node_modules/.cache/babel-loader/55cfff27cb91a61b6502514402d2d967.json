{"ast":null,"code":"import { assertIs, error } from \"../utils\";\nexport var RotationTypes;\n(function (RotationTypes) {\n  RotationTypes[\"Degrees\"] = \"degrees\";\n  RotationTypes[\"Radians\"] = \"radians\";\n})(RotationTypes || (RotationTypes = {}));\nexport var radians = function radians(radianAngle) {\n  assertIs(radianAngle, 'radianAngle', ['number']);\n  return {\n    type: RotationTypes.Radians,\n    angle: radianAngle\n  };\n};\nexport var degrees = function degrees(degreeAngle) {\n  assertIs(degreeAngle, 'degreeAngle', ['number']);\n  return {\n    type: RotationTypes.Degrees,\n    angle: degreeAngle\n  };\n};\nvar Radians = RotationTypes.Radians,\n  Degrees = RotationTypes.Degrees;\nexport var degreesToRadians = function degreesToRadians(degree) {\n  return degree * Math.PI / 180;\n};\nexport var radiansToDegrees = function radiansToDegrees(radian) {\n  return radian * 180 / Math.PI;\n};\n// prettier-ignore\nexport var toRadians = function toRadians(rotation) {\n  return rotation.type === Radians ? rotation.angle : rotation.type === Degrees ? degreesToRadians(rotation.angle) : error(\"Invalid rotation: \" + JSON.stringify(rotation));\n};\n// prettier-ignore\nexport var toDegrees = function toDegrees(rotation) {\n  return rotation.type === Radians ? radiansToDegrees(rotation.angle) : rotation.type === Degrees ? rotation.angle : error(\"Invalid rotation: \" + JSON.stringify(rotation));\n};\nexport var reduceRotation = function reduceRotation(degreeAngle) {\n  if (degreeAngle === void 0) {\n    degreeAngle = 0;\n  }\n  var quadrants = degreeAngle / 90 % 4;\n  if (quadrants === 0) return 0;\n  if (quadrants === 1) return 90;\n  if (quadrants === 2) return 180;\n  if (quadrants === 3) return 270;\n  return 0; // `degreeAngle` is not a multiple of 90\n};\n\nexport var adjustDimsForRotation = function adjustDimsForRotation(dims, degreeAngle) {\n  if (degreeAngle === void 0) {\n    degreeAngle = 0;\n  }\n  var rotation = reduceRotation(degreeAngle);\n  return rotation === 90 || rotation === 270 ? {\n    width: dims.height,\n    height: dims.width\n  } : {\n    width: dims.width,\n    height: dims.height\n  };\n};\nexport var rotateRectangle = function rotateRectangle(rectangle, borderWidth, degreeAngle) {\n  if (borderWidth === void 0) {\n    borderWidth = 0;\n  }\n  if (degreeAngle === void 0) {\n    degreeAngle = 0;\n  }\n  var x = rectangle.x,\n    y = rectangle.y,\n    w = rectangle.width,\n    h = rectangle.height;\n  var r = reduceRotation(degreeAngle);\n  var b = borderWidth / 2;\n  // prettier-ignore\n  if (r === 0) return {\n    x: x - b,\n    y: y - b,\n    width: w,\n    height: h\n  };else if (r === 90) return {\n    x: x - h + b,\n    y: y - b,\n    width: h,\n    height: w\n  };else if (r === 180) return {\n    x: x - w + b,\n    y: y - h + b,\n    width: w,\n    height: h\n  };else if (r === 270) return {\n    x: x - b,\n    y: y - w + b,\n    width: h,\n    height: w\n  };else return {\n    x: x - b,\n    y: y - b,\n    width: w,\n    height: h\n  };\n};","map":{"version":3,"mappings":"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","names":["assertIs","error","RotationTypes","radians","radianAngle","type","Radians","angle","degrees","degreeAngle","Degrees","degreesToRadians","degree","Math","PI","radiansToDegrees","radian","toRadians","rotation","JSON","stringify","toDegrees","reduceRotation","quadrants","adjustDimsForRotation","dims","width","height","rotateRectangle","rectangle","borderWidth","y","w","h","r","b","x"],"sourceRoot":"","sources":["../../src/api/rotations.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}