{"ast":null,"code":"import { UnexpectedObjectTypeError, UnsupportedEncodingError } from \"../errors\";\nimport PDFArray from \"../objects/PDFArray\";\nimport PDFDict from \"../objects/PDFDict\";\nimport PDFName from \"../objects/PDFName\";\nimport PDFNumber from \"../objects/PDFNumber\";\nimport Ascii85Stream from \"./Ascii85Stream\";\nimport AsciiHexStream from \"./AsciiHexStream\";\nimport FlateStream from \"./FlateStream\";\nimport LZWStream from \"./LZWStream\";\nimport RunLengthStream from \"./RunLengthStream\";\nimport Stream from \"./Stream\";\nvar decodeStream = function decodeStream(stream, encoding, params) {\n  if (encoding === PDFName.of('FlateDecode')) {\n    return new FlateStream(stream);\n  }\n  if (encoding === PDFName.of('LZWDecode')) {\n    var earlyChange = 1;\n    if (params instanceof PDFDict) {\n      var EarlyChange = params.lookup(PDFName.of('EarlyChange'));\n      if (EarlyChange instanceof PDFNumber) {\n        earlyChange = EarlyChange.asNumber();\n      }\n    }\n    return new LZWStream(stream, undefined, earlyChange);\n  }\n  if (encoding === PDFName.of('ASCII85Decode')) {\n    return new Ascii85Stream(stream);\n  }\n  if (encoding === PDFName.of('ASCIIHexDecode')) {\n    return new AsciiHexStream(stream);\n  }\n  if (encoding === PDFName.of('RunLengthDecode')) {\n    return new RunLengthStream(stream);\n  }\n  throw new UnsupportedEncodingError(encoding.asString());\n};\nexport var decodePDFRawStream = function decodePDFRawStream(_a) {\n  var dict = _a.dict,\n    contents = _a.contents;\n  var stream = new Stream(contents);\n  var Filter = dict.lookup(PDFName.of('Filter'));\n  var DecodeParms = dict.lookup(PDFName.of('DecodeParms'));\n  if (Filter instanceof PDFName) {\n    stream = decodeStream(stream, Filter, DecodeParms);\n  } else if (Filter instanceof PDFArray) {\n    for (var idx = 0, len = Filter.size(); idx < len; idx++) {\n      stream = decodeStream(stream, Filter.lookup(idx, PDFName), DecodeParms && DecodeParms.lookupMaybe(idx, PDFDict));\n    }\n  } else if (!!Filter) {\n    throw new UnexpectedObjectTypeError([PDFName, PDFArray], Filter);\n  }\n  return stream;\n};","map":{"version":3,"mappings":"AAAA,SACEA,yBAAyB,EACzBC,wBAAwB,QACzB;AACD,OAAOC,QAAQ;AACf,OAAOC,OAAO;AACd,OAAOC,OAAO;AAEd,OAAOC,SAAS;AAEhB,OAAOC,aAAa;AACpB,OAAOC,cAAc;AACrB,OAAOC,WAAW;AAClB,OAAOC,SAAS;AAChB,OAAOC,eAAe;AACtB,OAAOC,MAAsB;AAE7B,IAAMC,YAAY,GAAG,SAAfA,YAAY,CAChBC,MAAkB,EAClBC,QAAiB,EACjBC,MAA4C;EAE5C,IAAID,QAAQ,KAAKV,OAAO,CAACY,EAAE,CAAC,aAAa,CAAC,EAAE;IAC1C,OAAO,IAAIR,WAAW,CAACK,MAAM,CAAC;;EAEhC,IAAIC,QAAQ,KAAKV,OAAO,CAACY,EAAE,CAAC,WAAW,CAAC,EAAE;IACxC,IAAIC,WAAW,GAAG,CAAC;IACnB,IAAIF,MAAM,YAAYZ,OAAO,EAAE;MAC7B,IAAMe,WAAW,GAAGH,MAAM,CAACI,MAAM,CAACf,OAAO,CAACY,EAAE,CAAC,aAAa,CAAC,CAAC;MAC5D,IAAIE,WAAW,YAAYb,SAAS,EAAE;QACpCY,WAAW,GAAGC,WAAW,CAACE,QAAQ,EAAE;;;IAGxC,OAAO,IAAIX,SAAS,CAACI,MAAM,EAAEQ,SAAS,EAAEJ,WAAoB,CAAC;;EAE/D,IAAIH,QAAQ,KAAKV,OAAO,CAACY,EAAE,CAAC,eAAe,CAAC,EAAE;IAC5C,OAAO,IAAIV,aAAa,CAACO,MAAM,CAAC;;EAElC,IAAIC,QAAQ,KAAKV,OAAO,CAACY,EAAE,CAAC,gBAAgB,CAAC,EAAE;IAC7C,OAAO,IAAIT,cAAc,CAACM,MAAM,CAAC;;EAEnC,IAAIC,QAAQ,KAAKV,OAAO,CAACY,EAAE,CAAC,iBAAiB,CAAC,EAAE;IAC9C,OAAO,IAAIN,eAAe,CAACG,MAAM,CAAC;;EAEpC,MAAM,IAAIZ,wBAAwB,CAACa,QAAQ,CAACQ,QAAQ,EAAE,CAAC;AACzD,CAAC;AAED,OAAO,IAAMC,kBAAkB,GAAG,SAArBA,kBAAkB,CAAIC,EAAgC;MAA9BC,IAAI;IAAEC,QAAQ;EACjD,IAAIb,MAAM,GAAe,IAAIF,MAAM,CAACe,QAAQ,CAAC;EAE7C,IAAMC,MAAM,GAAGF,IAAI,CAACN,MAAM,CAACf,OAAO,CAACY,EAAE,CAAC,QAAQ,CAAC,CAAC;EAChD,IAAMY,WAAW,GAAGH,IAAI,CAACN,MAAM,CAACf,OAAO,CAACY,EAAE,CAAC,aAAa,CAAC,CAAC;EAE1D,IAAIW,MAAM,YAAYvB,OAAO,EAAE;IAC7BS,MAAM,GAAGD,YAAY,CACnBC,MAAM,EACNc,MAAM,EACNC,WAAmD,CACpD;GACF,MAAM,IAAID,MAAM,YAAYzB,QAAQ,EAAE;IACrC,KAAK,IAAI2B,GAAG,GAAG,CAAC,EAAEC,GAAG,GAAGH,MAAM,CAACI,IAAI,EAAE,EAAEF,GAAG,GAAGC,GAAG,EAAED,GAAG,EAAE,EAAE;MACvDhB,MAAM,GAAGD,YAAY,CACnBC,MAAM,EACNc,MAAM,CAACR,MAAM,CAACU,GAAG,EAAEzB,OAAO,CAAC,EAC3BwB,WAAW,IAAKA,WAAwB,CAACI,WAAW,CAACH,GAAG,EAAE1B,OAAO,CAAC,CACnE;;GAEJ,MAAM,IAAI,CAAC,CAACwB,MAAM,EAAE;IACnB,MAAM,IAAI3B,yBAAyB,CAAC,CAACI,OAAO,EAAEF,QAAQ,CAAC,EAAEyB,MAAM,CAAC;;EAGlE,OAAOd,MAAM;AACf,CAAC","names":["UnexpectedObjectTypeError","UnsupportedEncodingError","PDFArray","PDFDict","PDFName","PDFNumber","Ascii85Stream","AsciiHexStream","FlateStream","LZWStream","RunLengthStream","Stream","decodeStream","stream","encoding","params","of","earlyChange","EarlyChange","lookup","asNumber","undefined","asString","decodePDFRawStream","_a","dict","contents","Filter","DecodeParms","idx","len","size","lookupMaybe"],"sourceRoot":"","sources":["../../../src/core/streams/decode.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}